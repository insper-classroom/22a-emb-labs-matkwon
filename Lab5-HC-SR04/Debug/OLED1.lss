
OLED1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00007144  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00407144  00407144  00017144  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009d0  20400000  0040714c  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          0000030c  204009d0  00407b1c  000209d0  2**2
                  ALLOC
  4 .stack        00002004  20400cdc  00407e28  000209d0  2**0
                  ALLOC
  5 .heap         00000200  20402ce0  00409e2c  000209d0  2**0
                  ALLOC
  6 .ARM.attributes 0000002e  00000000  00000000  000209d0  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  000209fe  2**0
                  CONTENTS, READONLY
  8 .debug_info   00019b00  00000000  00000000  00020a57  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00003abd  00000000  00000000  0003a557  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00005832  00000000  00000000  0003e014  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 000008e0  00000000  00000000  00043846  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000920  00000000  00000000  00044126  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0000aaf5  00000000  00000000  00044a46  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0000fe97  00000000  00000000  0004f53b  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    0009015d  00000000  00000000  0005f3d2  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  00001f68  00000000  00000000  000ef530  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	e0 2c 40 20 a5 15 40 00 a1 15 40 00 a1 15 40 00     .,@ ..@...@...@.
  400010:	a1 15 40 00 a1 15 40 00 a1 15 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	a1 15 40 00 a1 15 40 00 00 00 00 00 a1 15 40 00     ..@...@.......@.
  40003c:	a1 15 40 00 a1 15 40 00 a1 15 40 00 a1 15 40 00     ..@...@...@...@.
  40004c:	09 04 40 00 a1 15 40 00 a1 15 40 00 a1 15 40 00     ..@...@...@...@.
  40005c:	a1 15 40 00 a1 15 40 00 00 00 00 00 05 11 40 00     ..@...@.......@.
  40006c:	19 11 40 00 2d 11 40 00 a1 15 40 00 a1 15 40 00     ..@.-.@...@...@.
  40007c:	a1 15 40 00 41 11 40 00 55 11 40 00 a1 15 40 00     ..@.A.@.U.@...@.
  40008c:	a1 15 40 00 a1 15 40 00 a1 15 40 00 a1 15 40 00     ..@...@...@...@.
  40009c:	a1 15 40 00 a1 15 40 00 a1 15 40 00 a1 15 40 00     ..@...@...@...@.
  4000ac:	a1 15 40 00 a1 15 40 00 a1 15 40 00 a1 15 40 00     ..@...@...@...@.
  4000bc:	a1 15 40 00 a1 15 40 00 a1 15 40 00 a1 15 40 00     ..@...@...@...@.
  4000cc:	a1 15 40 00 00 00 00 00 a1 15 40 00 00 00 00 00     ..@.......@.....
  4000dc:	a1 15 40 00 a1 15 40 00 a1 15 40 00 a1 15 40 00     ..@...@...@...@.
  4000ec:	a1 15 40 00 a1 15 40 00 a1 15 40 00 a1 15 40 00     ..@...@...@...@.
  4000fc:	a1 15 40 00 a1 15 40 00 a1 15 40 00 a1 15 40 00     ..@...@...@...@.
  40010c:	a1 15 40 00 a1 15 40 00 00 00 00 00 00 00 00 00     ..@...@.........
  40011c:	00 00 00 00 a1 15 40 00 a1 15 40 00 a1 15 40 00     ......@...@...@.
  40012c:	a1 15 40 00 a1 15 40 00 00 00 00 00 a1 15 40 00     ..@...@.......@.
  40013c:	a1 15 40 00                                         ..@.

00400140 <__do_global_dtors_aux>:
  400140:	b510      	push	{r4, lr}
  400142:	4c05      	ldr	r4, [pc, #20]	; (400158 <__do_global_dtors_aux+0x18>)
  400144:	7823      	ldrb	r3, [r4, #0]
  400146:	b933      	cbnz	r3, 400156 <__do_global_dtors_aux+0x16>
  400148:	4b04      	ldr	r3, [pc, #16]	; (40015c <__do_global_dtors_aux+0x1c>)
  40014a:	b113      	cbz	r3, 400152 <__do_global_dtors_aux+0x12>
  40014c:	4804      	ldr	r0, [pc, #16]	; (400160 <__do_global_dtors_aux+0x20>)
  40014e:	f3af 8000 	nop.w
  400152:	2301      	movs	r3, #1
  400154:	7023      	strb	r3, [r4, #0]
  400156:	bd10      	pop	{r4, pc}
  400158:	204009d0 	.word	0x204009d0
  40015c:	00000000 	.word	0x00000000
  400160:	0040714c 	.word	0x0040714c

00400164 <frame_dummy>:
  400164:	4b0c      	ldr	r3, [pc, #48]	; (400198 <frame_dummy+0x34>)
  400166:	b143      	cbz	r3, 40017a <frame_dummy+0x16>
  400168:	480c      	ldr	r0, [pc, #48]	; (40019c <frame_dummy+0x38>)
  40016a:	490d      	ldr	r1, [pc, #52]	; (4001a0 <frame_dummy+0x3c>)
  40016c:	b510      	push	{r4, lr}
  40016e:	f3af 8000 	nop.w
  400172:	480c      	ldr	r0, [pc, #48]	; (4001a4 <frame_dummy+0x40>)
  400174:	6803      	ldr	r3, [r0, #0]
  400176:	b923      	cbnz	r3, 400182 <frame_dummy+0x1e>
  400178:	bd10      	pop	{r4, pc}
  40017a:	480a      	ldr	r0, [pc, #40]	; (4001a4 <frame_dummy+0x40>)
  40017c:	6803      	ldr	r3, [r0, #0]
  40017e:	b933      	cbnz	r3, 40018e <frame_dummy+0x2a>
  400180:	4770      	bx	lr
  400182:	4b09      	ldr	r3, [pc, #36]	; (4001a8 <frame_dummy+0x44>)
  400184:	2b00      	cmp	r3, #0
  400186:	d0f7      	beq.n	400178 <frame_dummy+0x14>
  400188:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40018c:	4718      	bx	r3
  40018e:	4b06      	ldr	r3, [pc, #24]	; (4001a8 <frame_dummy+0x44>)
  400190:	2b00      	cmp	r3, #0
  400192:	d0f5      	beq.n	400180 <frame_dummy+0x1c>
  400194:	4718      	bx	r3
  400196:	bf00      	nop
  400198:	00000000 	.word	0x00000000
  40019c:	0040714c 	.word	0x0040714c
  4001a0:	204009d4 	.word	0x204009d4
  4001a4:	0040714c 	.word	0x0040714c
  4001a8:	00000000 	.word	0x00000000

004001ac <rtt_init>:
 * \return 0 if successful.
 */
uint32_t rtt_init(Rtt *p_rtt, uint16_t us_prescaler)
{
#if (SAM4N || SAM4S || SAM4E || SAM4C || SAMG51 || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	p_rtt->RTT_MR = (us_prescaler | RTT_MR_RTTRST | g_wobits_in_rtt_mr);
  4001ac:	4b03      	ldr	r3, [pc, #12]	; (4001bc <rtt_init+0x10>)
  4001ae:	681b      	ldr	r3, [r3, #0]
  4001b0:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
  4001b4:	4319      	orrs	r1, r3
  4001b6:	6001      	str	r1, [r0, #0]
#else
	p_rtt->RTT_MR = (us_prescaler | RTT_MR_RTTRST);
#endif
	return 0;
}
  4001b8:	2000      	movs	r0, #0
  4001ba:	4770      	bx	lr
  4001bc:	204009ec 	.word	0x204009ec

004001c0 <rtt_sel_source>:
 * \param p_rtt Pointer to an RTT instance.
 * \param is_rtc_sel RTC 1Hz Clock Selection.
 */
void rtt_sel_source(Rtt *p_rtt, bool is_rtc_sel)
{
	if(is_rtc_sel) {
  4001c0:	b941      	cbnz	r1, 4001d4 <rtt_sel_source+0x14>
		g_wobits_in_rtt_mr |= RTT_MR_RTC1HZ;
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
	} else {
		g_wobits_in_rtt_mr &= ~RTT_MR_RTC1HZ;
  4001c2:	4a09      	ldr	r2, [pc, #36]	; (4001e8 <rtt_sel_source+0x28>)
  4001c4:	6813      	ldr	r3, [r2, #0]
  4001c6:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
  4001ca:	6013      	str	r3, [r2, #0]
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
  4001cc:	6802      	ldr	r2, [r0, #0]
  4001ce:	4313      	orrs	r3, r2
  4001d0:	6003      	str	r3, [r0, #0]
  4001d2:	4770      	bx	lr
		g_wobits_in_rtt_mr |= RTT_MR_RTC1HZ;
  4001d4:	4a04      	ldr	r2, [pc, #16]	; (4001e8 <rtt_sel_source+0x28>)
  4001d6:	6813      	ldr	r3, [r2, #0]
  4001d8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  4001dc:	6013      	str	r3, [r2, #0]
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
  4001de:	6802      	ldr	r2, [r0, #0]
  4001e0:	4313      	orrs	r3, r2
  4001e2:	6003      	str	r3, [r0, #0]
  4001e4:	4770      	bx	lr
  4001e6:	bf00      	nop
  4001e8:	204009ec 	.word	0x204009ec

004001ec <rtt_enable_interrupt>:
 */
void rtt_enable_interrupt(Rtt *p_rtt, uint32_t ul_sources)
{
	uint32_t temp;

	temp = p_rtt->RTT_MR;
  4001ec:	6802      	ldr	r2, [r0, #0]
	temp |= ul_sources;
#if (SAM4N || SAM4S || SAM4E || SAM4C || SAMG51 || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	temp |= g_wobits_in_rtt_mr;
  4001ee:	4b03      	ldr	r3, [pc, #12]	; (4001fc <rtt_enable_interrupt+0x10>)
  4001f0:	681b      	ldr	r3, [r3, #0]
  4001f2:	4319      	orrs	r1, r3
  4001f4:	4311      	orrs	r1, r2
#endif
	p_rtt->RTT_MR = temp;
  4001f6:	6001      	str	r1, [r0, #0]
  4001f8:	4770      	bx	lr
  4001fa:	bf00      	nop
  4001fc:	204009ec 	.word	0x204009ec

00400200 <rtt_disable_interrupt>:
 */
void rtt_disable_interrupt(Rtt *p_rtt, uint32_t ul_sources)
{
	uint32_t temp = 0;

	temp = p_rtt->RTT_MR;
  400200:	6803      	ldr	r3, [r0, #0]
	temp &= (~ul_sources);
  400202:	ea23 0101 	bic.w	r1, r3, r1
#if (SAM4N || SAM4S || SAM4E || SAM4C || SAMG51 || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	temp |= g_wobits_in_rtt_mr;
  400206:	4b02      	ldr	r3, [pc, #8]	; (400210 <rtt_disable_interrupt+0x10>)
  400208:	681b      	ldr	r3, [r3, #0]
  40020a:	4319      	orrs	r1, r3
#endif
	p_rtt->RTT_MR = temp;
  40020c:	6001      	str	r1, [r0, #0]
  40020e:	4770      	bx	lr
  400210:	204009ec 	.word	0x204009ec

00400214 <rtt_read_timer_value>:
 *
 * \return The current Real-time Timer value.
 */
uint32_t rtt_read_timer_value(Rtt *p_rtt)
{
	uint32_t rtt_val = p_rtt->RTT_VR;
  400214:	6882      	ldr	r2, [r0, #8]

	while (rtt_val != p_rtt->RTT_VR) {
  400216:	6883      	ldr	r3, [r0, #8]
  400218:	429a      	cmp	r2, r3
  40021a:	d003      	beq.n	400224 <rtt_read_timer_value+0x10>
		rtt_val = p_rtt->RTT_VR;
  40021c:	6882      	ldr	r2, [r0, #8]
	while (rtt_val != p_rtt->RTT_VR) {
  40021e:	6883      	ldr	r3, [r0, #8]
  400220:	4293      	cmp	r3, r2
  400222:	d1fb      	bne.n	40021c <rtt_read_timer_value+0x8>
	}

	return rtt_val;
}
  400224:	4618      	mov	r0, r3
  400226:	4770      	bx	lr

00400228 <rtt_get_status>:
 *
 * \return The Real-time Timer status.
 */
uint32_t rtt_get_status(Rtt *p_rtt)
{
	return p_rtt->RTT_SR;
  400228:	68c0      	ldr	r0, [r0, #12]
}
  40022a:	4770      	bx	lr

0040022c <rtt_write_alarm_time>:
 * \param ul_alarm_time Alarm time,Alarm time = ALMV + 1.
 *
 * \retval 0 Configuration is done.
 */
uint32_t rtt_write_alarm_time(Rtt *p_rtt, uint32_t ul_alarm_time)
{
  40022c:	b570      	push	{r4, r5, r6, lr}
  40022e:	4606      	mov	r6, r0
  400230:	460d      	mov	r5, r1
	uint32_t flag;

	flag = p_rtt->RTT_MR & RTT_MR_ALMIEN;
  400232:	6804      	ldr	r4, [r0, #0]
  400234:	f404 3480 	and.w	r4, r4, #65536	; 0x10000

	rtt_disable_interrupt(RTT, RTT_MR_ALMIEN);
  400238:	f44f 3180 	mov.w	r1, #65536	; 0x10000
  40023c:	4809      	ldr	r0, [pc, #36]	; (400264 <rtt_write_alarm_time+0x38>)
  40023e:	4b0a      	ldr	r3, [pc, #40]	; (400268 <rtt_write_alarm_time+0x3c>)
  400240:	4798      	blx	r3

	/**
	 * Alarm time = ALMV + 1,If the incoming parameter 
	 * is 0, the ALMV is set to 0xFFFFFFFF.
	*/
	if(ul_alarm_time == 0) {
  400242:	b92d      	cbnz	r5, 400250 <rtt_write_alarm_time+0x24>
		p_rtt->RTT_AR = 0xFFFFFFFF;
  400244:	f04f 33ff 	mov.w	r3, #4294967295
  400248:	6073      	str	r3, [r6, #4]
	}
	else {
		p_rtt->RTT_AR = ul_alarm_time - 1;
	}

	if (flag) {
  40024a:	b924      	cbnz	r4, 400256 <rtt_write_alarm_time+0x2a>
		rtt_enable_interrupt(RTT, RTT_MR_ALMIEN);
	}

	return 0;
}
  40024c:	2000      	movs	r0, #0
  40024e:	bd70      	pop	{r4, r5, r6, pc}
		p_rtt->RTT_AR = ul_alarm_time - 1;
  400250:	3d01      	subs	r5, #1
  400252:	6075      	str	r5, [r6, #4]
  400254:	e7f9      	b.n	40024a <rtt_write_alarm_time+0x1e>
		rtt_enable_interrupt(RTT, RTT_MR_ALMIEN);
  400256:	f44f 3180 	mov.w	r1, #65536	; 0x10000
  40025a:	4802      	ldr	r0, [pc, #8]	; (400264 <rtt_write_alarm_time+0x38>)
  40025c:	4b03      	ldr	r3, [pc, #12]	; (40026c <rtt_write_alarm_time+0x40>)
  40025e:	4798      	blx	r3
  400260:	e7f4      	b.n	40024c <rtt_write_alarm_time+0x20>
  400262:	bf00      	nop
  400264:	400e1830 	.word	0x400e1830
  400268:	00400201 	.word	0x00400201
  40026c:	004001ed 	.word	0x004001ed

00400270 <spi_enable_clock>:
 * \brief Enable SPI clock.
 *
 * \param p_spi Pointer to an SPI instance.
 */
void spi_enable_clock(Spi *p_spi)
{
  400270:	b508      	push	{r3, lr}
#if (SAM4S || SAM3S || SAM3N || SAM3U || SAM4E || SAM4N || SAMG51|| SAMG53|| SAMG54)
	UNUSED(p_spi);
	sysclk_enable_peripheral_clock(ID_SPI);
#elif (SAM3XA || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	if (p_spi == SPI0) {
  400272:	4b07      	ldr	r3, [pc, #28]	; (400290 <spi_enable_clock+0x20>)
  400274:	4298      	cmp	r0, r3
  400276:	d003      	beq.n	400280 <spi_enable_clock+0x10>
		sysclk_enable_peripheral_clock(ID_SPI0);
	}
	#ifdef SPI1
	else if (p_spi == SPI1) {
  400278:	4b06      	ldr	r3, [pc, #24]	; (400294 <spi_enable_clock+0x24>)
  40027a:	4298      	cmp	r0, r3
  40027c:	d004      	beq.n	400288 <spi_enable_clock+0x18>
  40027e:	bd08      	pop	{r3, pc}
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  400280:	2015      	movs	r0, #21
  400282:	4b05      	ldr	r3, [pc, #20]	; (400298 <spi_enable_clock+0x28>)
  400284:	4798      	blx	r3
  400286:	bd08      	pop	{r3, pc}
  400288:	202a      	movs	r0, #42	; 0x2a
  40028a:	4b03      	ldr	r3, [pc, #12]	; (400298 <spi_enable_clock+0x28>)
  40028c:	4798      	blx	r3
	}
	#endif
#elif SAM4L
	sysclk_enable_peripheral_clock(p_spi);
#endif
}
  40028e:	e7f6      	b.n	40027e <spi_enable_clock+0xe>
  400290:	40008000 	.word	0x40008000
  400294:	40058000 	.word	0x40058000
  400298:	00401289 	.word	0x00401289

0040029c <spi_set_peripheral_chip_select_value>:
 *                 \ref spi_enable_peripheral_select_decode,
 *                 \ref spi_disable_peripheral_select_decode.
 */
void spi_set_peripheral_chip_select_value(Spi *p_spi, uint32_t ul_value)
{
	p_spi->SPI_MR &= (~SPI_MR_PCS_Msk);
  40029c:	6843      	ldr	r3, [r0, #4]
  40029e:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  4002a2:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_PCS(ul_value);
  4002a4:	6843      	ldr	r3, [r0, #4]
  4002a6:	0409      	lsls	r1, r1, #16
  4002a8:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  4002ac:	4319      	orrs	r1, r3
  4002ae:	6041      	str	r1, [r0, #4]
  4002b0:	4770      	bx	lr

004002b2 <spi_write>:
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_write(Spi *p_spi, uint16_t us_data,
		uint8_t uc_pcs, uint8_t uc_last)
{
  4002b2:	b430      	push	{r4, r5}
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
  4002b4:	f643 2499 	movw	r4, #15001	; 0x3a99
  4002b8:	6905      	ldr	r5, [r0, #16]
  4002ba:	f015 0f02 	tst.w	r5, #2
  4002be:	d103      	bne.n	4002c8 <spi_write+0x16>
		if (!timeout--) {
  4002c0:	3c01      	subs	r4, #1
  4002c2:	d1f9      	bne.n	4002b8 <spi_write+0x6>
			return SPI_ERROR_TIMEOUT;
  4002c4:	2001      	movs	r0, #1
  4002c6:	e00c      	b.n	4002e2 <spi_write+0x30>
 *
 * \return 1 for Variable mode, 0 for fixed mode.
 */
static inline uint32_t spi_get_peripheral_select_mode(Spi *p_spi)
{
	if (p_spi->SPI_MR & SPI_MR_PS) {
  4002c8:	6844      	ldr	r4, [r0, #4]
		}
	}

	if (spi_get_peripheral_select_mode(p_spi)) {
  4002ca:	f014 0f02 	tst.w	r4, #2
  4002ce:	d006      	beq.n	4002de <spi_write+0x2c>
		value = SPI_TDR_TD(us_data) | SPI_TDR_PCS(uc_pcs);
  4002d0:	0412      	lsls	r2, r2, #16
  4002d2:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
  4002d6:	4311      	orrs	r1, r2
		if (uc_last) {
  4002d8:	b10b      	cbz	r3, 4002de <spi_write+0x2c>
			value |= SPI_TDR_LASTXFER;
  4002da:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
		}
	} else {
		value = SPI_TDR_TD(us_data);
	}

	p_spi->SPI_TDR = value;
  4002de:	60c1      	str	r1, [r0, #12]

	return SPI_OK;
  4002e0:	2000      	movs	r0, #0
}
  4002e2:	bc30      	pop	{r4, r5}
  4002e4:	4770      	bx	lr

004002e6 <spi_set_clock_polarity>:
 * \param ul_polarity Default clock state is logical one(high)/zero(low).
 */
void spi_set_clock_polarity(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_polarity)
{
	if (ul_polarity) {
  4002e6:	b932      	cbnz	r2, 4002f6 <spi_set_clock_polarity+0x10>
  4002e8:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CPOL);
  4002ec:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002ee:	f023 0301 	bic.w	r3, r3, #1
  4002f2:	6303      	str	r3, [r0, #48]	; 0x30
  4002f4:	4770      	bx	lr
  4002f6:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
  4002fa:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002fc:	f043 0301 	orr.w	r3, r3, #1
  400300:	6303      	str	r3, [r0, #48]	; 0x30
  400302:	4770      	bx	lr

00400304 <spi_set_clock_phase>:
 *  \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 *  \param ul_phase Data capture on the rising/falling edge of clock.
 */
void spi_set_clock_phase(Spi *p_spi, uint32_t ul_pcs_ch, uint32_t ul_phase)
{
	if (ul_phase) {
  400304:	b932      	cbnz	r2, 400314 <spi_set_clock_phase+0x10>
  400306:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_NCPHA);
  40030a:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40030c:	f023 0302 	bic.w	r3, r3, #2
  400310:	6303      	str	r3, [r0, #48]	; 0x30
  400312:	4770      	bx	lr
  400314:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
  400318:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40031a:	f043 0302 	orr.w	r3, r3, #2
  40031e:	6303      	str	r3, [r0, #48]	; 0x30
  400320:	4770      	bx	lr

00400322 <spi_configure_cs_behavior>:
 * \param ul_cs_behavior Behavior of the Chip Select after transfer.
 */
void spi_configure_cs_behavior(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_cs_behavior)
{
	if (ul_cs_behavior == SPI_CS_RISE_FORCED) {
  400322:	2a04      	cmp	r2, #4
  400324:	d003      	beq.n	40032e <spi_configure_cs_behavior+0xc>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
	} else if (ul_cs_behavior == SPI_CS_RISE_NO_TX) {
  400326:	b16a      	cbz	r2, 400344 <spi_configure_cs_behavior+0x22>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
	} else if (ul_cs_behavior == SPI_CS_KEEP_LOW) {
  400328:	2a08      	cmp	r2, #8
  40032a:	d016      	beq.n	40035a <spi_configure_cs_behavior+0x38>
  40032c:	4770      	bx	lr
  40032e:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  400332:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400334:	f023 0308 	bic.w	r3, r3, #8
  400338:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
  40033a:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40033c:	f043 0304 	orr.w	r3, r3, #4
  400340:	6303      	str	r3, [r0, #48]	; 0x30
  400342:	4770      	bx	lr
  400344:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  400348:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40034a:	f023 0308 	bic.w	r3, r3, #8
  40034e:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
  400350:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400352:	f023 0304 	bic.w	r3, r3, #4
  400356:	6303      	str	r3, [r0, #48]	; 0x30
  400358:	4770      	bx	lr
  40035a:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSAAT;
  40035e:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400360:	f043 0308 	orr.w	r3, r3, #8
  400364:	6303      	str	r3, [r0, #48]	; 0x30
	}
}
  400366:	e7e1      	b.n	40032c <spi_configure_cs_behavior+0xa>

00400368 <spi_set_bits_per_transfer>:
 * \param ul_bits Number of bits (8~16), use the pattern defined
 *        in the device header file.
 */
void spi_set_bits_per_transfer(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_bits)
{
  400368:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_BITS_Msk);
  40036c:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  40036e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  400372:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= ul_bits;
  400374:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  400376:	431a      	orrs	r2, r3
  400378:	630a      	str	r2, [r1, #48]	; 0x30
  40037a:	4770      	bx	lr

0040037c <spi_calc_baudrate_div>:
 *   \retval > 0  Success.
 *   \retval < 0  Error.
 */
int16_t spi_calc_baudrate_div(const uint32_t baudrate, uint32_t mck)
{
	int baud_div = div_ceil(mck, baudrate);
  40037c:	1e43      	subs	r3, r0, #1
  40037e:	4419      	add	r1, r3
  400380:	fbb1 f0f0 	udiv	r0, r1, r0

	/* The value of baud_div is from 1 to 255 in the SCBR field. */
	if (baud_div <= 0 || baud_div > 255) {
  400384:	1e43      	subs	r3, r0, #1
  400386:	2bfe      	cmp	r3, #254	; 0xfe
		return -1;
	}

	return baud_div;
  400388:	bf94      	ite	ls
  40038a:	b200      	sxthls	r0, r0
		return -1;
  40038c:	f04f 30ff 	movhi.w	r0, #4294967295
}
  400390:	4770      	bx	lr

00400392 <spi_set_baudrate_div>:
 */
int16_t spi_set_baudrate_div(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_baudrate_divider)
{
    /* Programming the SCBR field to 0 is forbidden */
    if (!uc_baudrate_divider)
  400392:	b17a      	cbz	r2, 4003b4 <spi_set_baudrate_div+0x22>
{
  400394:	b410      	push	{r4}
  400396:	4614      	mov	r4, r2
  400398:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        return -1;

	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_SCBR_Msk);
  40039c:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  40039e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
  4003a2:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_SCBR(uc_baudrate_divider);
  4003a4:	6b0a      	ldr	r2, [r1, #48]	; 0x30
  4003a6:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
  4003aa:	630a      	str	r2, [r1, #48]	; 0x30
    return 0;
  4003ac:	2000      	movs	r0, #0
}
  4003ae:	f85d 4b04 	ldr.w	r4, [sp], #4
  4003b2:	4770      	bx	lr
        return -1;
  4003b4:	f04f 30ff 	mov.w	r0, #4294967295
  4003b8:	4770      	bx	lr
	...

004003bc <wave>:
#include "helpers.h"

void wave(void){
  4003bc:	b510      	push	{r4, lr}
	pio_set(TRIG_PIO, TRIG_IDX_MASK);
  4003be:	4c07      	ldr	r4, [pc, #28]	; (4003dc <wave+0x20>)
  4003c0:	2104      	movs	r1, #4
  4003c2:	4620      	mov	r0, r4
  4003c4:	4b06      	ldr	r3, [pc, #24]	; (4003e0 <wave+0x24>)
  4003c6:	4798      	blx	r3
	delay_us(10);
  4003c8:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  4003cc:	4b05      	ldr	r3, [pc, #20]	; (4003e4 <wave+0x28>)
  4003ce:	4798      	blx	r3
	pio_clear(TRIG_PIO, TRIG_IDX_MASK);
  4003d0:	2104      	movs	r1, #4
  4003d2:	4620      	mov	r0, r4
  4003d4:	4b04      	ldr	r3, [pc, #16]	; (4003e8 <wave+0x2c>)
  4003d6:	4798      	blx	r3
  4003d8:	bd10      	pop	{r4, pc}
  4003da:	bf00      	nop
  4003dc:	400e0e00 	.word	0x400e0e00
  4003e0:	00400e63 	.word	0x00400e63
  4003e4:	20400001 	.word	0x20400001
  4003e8:	00400e67 	.word	0x00400e67

004003ec <clear_display>:
}

void clear_display(void) {
  4003ec:	b510      	push	{r4, lr}
	gfx_mono_draw_string("          ", 0, 0, &sysfont);
  4003ee:	4b03      	ldr	r3, [pc, #12]	; (4003fc <clear_display+0x10>)
  4003f0:	2200      	movs	r2, #0
  4003f2:	4611      	mov	r1, r2
  4003f4:	4802      	ldr	r0, [pc, #8]	; (400400 <clear_display+0x14>)
  4003f6:	4c03      	ldr	r4, [pc, #12]	; (400404 <clear_display+0x18>)
  4003f8:	47a0      	blx	r4
  4003fa:	bd10      	pop	{r4, pc}
  4003fc:	2040000c 	.word	0x2040000c
  400400:	00406420 	.word	0x00406420
  400404:	0040089d 	.word	0x0040089d

00400408 <RTT_Handler>:
}

void RTT_Handler(void) {
  400408:	b508      	push	{r3, lr}
	uint32_t ul_status;

	/* Get RTT status - ACK */
	ul_status = rtt_get_status(RTT);
  40040a:	4806      	ldr	r0, [pc, #24]	; (400424 <RTT_Handler+0x1c>)
  40040c:	4b06      	ldr	r3, [pc, #24]	; (400428 <RTT_Handler+0x20>)
  40040e:	4798      	blx	r3

	/* IRQ due to Alarm */
	if ((ul_status & RTT_SR_ALMS) == RTT_SR_ALMS) {
  400410:	f010 0f01 	tst.w	r0, #1
  400414:	d004      	beq.n	400420 <RTT_Handler+0x18>
		RTT->RTT_MR = RTT->RTT_MR | 1 << 18;
  400416:	4a03      	ldr	r2, [pc, #12]	; (400424 <RTT_Handler+0x1c>)
  400418:	6813      	ldr	r3, [r2, #0]
  40041a:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
  40041e:	6013      	str	r3, [r2, #0]
  400420:	bd08      	pop	{r3, pc}
  400422:	bf00      	nop
  400424:	400e1830 	.word	0x400e1830
  400428:	00400229 	.word	0x00400229

0040042c <RTT_init>:
	/* IRQ due to Time has changed */
	if ((ul_status & RTT_SR_RTTINC) == RTT_SR_RTTINC) {
	}
}

void RTT_init(float freqPrescale, uint32_t IrqNPulses, uint32_t rttIRQSource) {
  40042c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400430:	ed2d 8b02 	vpush	{d8}
  400434:	b082      	sub	sp, #8
  400436:	ee08 0a10 	vmov	s16, r0
  40043a:	4688      	mov	r8, r1
  40043c:	4617      	mov	r7, r2

	uint16_t pllPreScale = (int)(((float)32768) / freqPrescale);

	rtt_sel_source(RTT, false);
  40043e:	4c20      	ldr	r4, [pc, #128]	; (4004c0 <RTT_init+0x94>)
  400440:	2100      	movs	r1, #0
  400442:	4620      	mov	r0, r4
  400444:	4b1f      	ldr	r3, [pc, #124]	; (4004c4 <RTT_init+0x98>)
  400446:	4798      	blx	r3
	uint16_t pllPreScale = (int)(((float)32768) / freqPrescale);
  400448:	ed9f 7a1f 	vldr	s14, [pc, #124]	; 4004c8 <RTT_init+0x9c>
  40044c:	eec7 7a08 	vdiv.f32	s15, s14, s16
  400450:	eefd 7ae7 	vcvt.s32.f32	s15, s15
  400454:	edcd 7a01 	vstr	s15, [sp, #4]
	rtt_init(RTT, pllPreScale);
  400458:	f8bd 1004 	ldrh.w	r1, [sp, #4]
  40045c:	4620      	mov	r0, r4
  40045e:	4b1b      	ldr	r3, [pc, #108]	; (4004cc <RTT_init+0xa0>)
  400460:	4798      	blx	r3

	if (rttIRQSource & RTT_MR_ALMIEN) {
  400462:	f417 3f80 	tst.w	r7, #65536	; 0x10000
  400466:	d116      	bne.n	400496 <RTT_init+0x6a>

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  400468:	4b19      	ldr	r3, [pc, #100]	; (4004d0 <RTT_init+0xa4>)
  40046a:	2208      	movs	r2, #8
  40046c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  400470:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHPR[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  400474:	2180      	movs	r1, #128	; 0x80
  400476:	f883 1303 	strb.w	r1, [r3, #771]	; 0x303
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  40047a:	601a      	str	r2, [r3, #0]
	NVIC_ClearPendingIRQ(RTT_IRQn);
	NVIC_SetPriority(RTT_IRQn, 4);
	NVIC_EnableIRQ(RTT_IRQn);

	/* Enable RTT interrupt */
	if (rttIRQSource & (RTT_MR_RTTINCIEN | RTT_MR_ALMIEN))
  40047c:	f417 3f40 	tst.w	r7, #196608	; 0x30000
  400480:	d119      	bne.n	4004b6 <RTT_init+0x8a>
	rtt_enable_interrupt(RTT, rttIRQSource);
	else
	rtt_disable_interrupt(RTT, RTT_MR_RTTINCIEN | RTT_MR_ALMIEN);
  400482:	f44f 3140 	mov.w	r1, #196608	; 0x30000
  400486:	480e      	ldr	r0, [pc, #56]	; (4004c0 <RTT_init+0x94>)
  400488:	4b12      	ldr	r3, [pc, #72]	; (4004d4 <RTT_init+0xa8>)
  40048a:	4798      	blx	r3
}
  40048c:	b002      	add	sp, #8
  40048e:	ecbd 8b02 	vpop	{d8}
  400492:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		ul_previous_time = rtt_read_timer_value(RTT);
  400496:	4620      	mov	r0, r4
  400498:	4b0f      	ldr	r3, [pc, #60]	; (4004d8 <RTT_init+0xac>)
  40049a:	4798      	blx	r3
  40049c:	4604      	mov	r4, r0
		while (ul_previous_time == rtt_read_timer_value(RTT))
  40049e:	4e08      	ldr	r6, [pc, #32]	; (4004c0 <RTT_init+0x94>)
  4004a0:	4d0d      	ldr	r5, [pc, #52]	; (4004d8 <RTT_init+0xac>)
  4004a2:	4630      	mov	r0, r6
  4004a4:	47a8      	blx	r5
  4004a6:	4284      	cmp	r4, r0
  4004a8:	d0fb      	beq.n	4004a2 <RTT_init+0x76>
		rtt_write_alarm_time(RTT, IrqNPulses + ul_previous_time);
  4004aa:	eb04 0108 	add.w	r1, r4, r8
  4004ae:	4804      	ldr	r0, [pc, #16]	; (4004c0 <RTT_init+0x94>)
  4004b0:	4b0a      	ldr	r3, [pc, #40]	; (4004dc <RTT_init+0xb0>)
  4004b2:	4798      	blx	r3
  4004b4:	e7d8      	b.n	400468 <RTT_init+0x3c>
	rtt_enable_interrupt(RTT, rttIRQSource);
  4004b6:	4639      	mov	r1, r7
  4004b8:	4801      	ldr	r0, [pc, #4]	; (4004c0 <RTT_init+0x94>)
  4004ba:	4b09      	ldr	r3, [pc, #36]	; (4004e0 <RTT_init+0xb4>)
  4004bc:	4798      	blx	r3
  4004be:	e7e5      	b.n	40048c <RTT_init+0x60>
  4004c0:	400e1830 	.word	0x400e1830
  4004c4:	004001c1 	.word	0x004001c1
  4004c8:	47000000 	.word	0x47000000
  4004cc:	004001ad 	.word	0x004001ad
  4004d0:	e000e100 	.word	0xe000e100
  4004d4:	00400201 	.word	0x00400201
  4004d8:	00400215 	.word	0x00400215
  4004dc:	0040022d 	.word	0x0040022d
  4004e0:	004001ed 	.word	0x004001ed

004004e4 <io_init>:

void io_init(void) {
  4004e4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  4004e8:	b083      	sub	sp, #12

	pmc_enable_periph_clk(BUT2_PIO_ID);
  4004ea:	200c      	movs	r0, #12
  4004ec:	4f2c      	ldr	r7, [pc, #176]	; (4005a0 <io_init+0xbc>)
  4004ee:	47b8      	blx	r7
	pio_configure(BUT2_PIO, PIO_INPUT, BUT2_IDX_MASK, PIO_PULLUP | PIO_DEBOUNCE);
  4004f0:	4d2c      	ldr	r5, [pc, #176]	; (4005a4 <io_init+0xc0>)
  4004f2:	2309      	movs	r3, #9
  4004f4:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
  4004f8:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  4004fc:	4628      	mov	r0, r5
  4004fe:	4e2a      	ldr	r6, [pc, #168]	; (4005a8 <io_init+0xc4>)
  400500:	47b0      	blx	r6
	pio_set_debounce_filter(BUT2_PIO, BUT2_IDX_MASK, 60);
  400502:	223c      	movs	r2, #60	; 0x3c
  400504:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  400508:	4628      	mov	r0, r5
  40050a:	f8df 90b4 	ldr.w	r9, [pc, #180]	; 4005c0 <io_init+0xdc>
  40050e:	47c8      	blx	r9
	pio_handler_set(BUT2_PIO,
  400510:	4b26      	ldr	r3, [pc, #152]	; (4005ac <io_init+0xc8>)
  400512:	9300      	str	r3, [sp, #0]
  400514:	2370      	movs	r3, #112	; 0x70
  400516:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
  40051a:	210c      	movs	r1, #12
  40051c:	4628      	mov	r0, r5
  40051e:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 4005c4 <io_init+0xe0>
  400522:	47c0      	blx	r8
	BUT2_PIO_ID,
	BUT2_IDX_MASK,
	PIO_IT_RISE_EDGE,
	but2_callback);

	pmc_enable_periph_clk(TRIG_PIO_ID);
  400524:	200a      	movs	r0, #10
  400526:	47b8      	blx	r7
	pio_configure(TRIG_PIO, PIO_OUTPUT_1, TRIG_IDX_MASK, PIO_PULLUP);
  400528:	4c21      	ldr	r4, [pc, #132]	; (4005b0 <io_init+0xcc>)
  40052a:	2301      	movs	r3, #1
  40052c:	2204      	movs	r2, #4
  40052e:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400532:	4620      	mov	r0, r4
  400534:	47b0      	blx	r6

	pmc_enable_periph_clk(ECHO_PIO_ID);
  400536:	200a      	movs	r0, #10
  400538:	47b8      	blx	r7
	pio_configure(ECHO_PIO, PIO_INPUT, ECHO_IDX_MASK, PIO_DEFAULT);
  40053a:	2300      	movs	r3, #0
  40053c:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
  400540:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  400544:	4620      	mov	r0, r4
  400546:	47b0      	blx	r6
	pio_set_debounce_filter(ECHO_PIO, ECHO_IDX_MASK, 60);
  400548:	223c      	movs	r2, #60	; 0x3c
  40054a:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
  40054e:	4620      	mov	r0, r4
  400550:	47c8      	blx	r9
	pio_handler_set(ECHO_PIO,
  400552:	4b18      	ldr	r3, [pc, #96]	; (4005b4 <io_init+0xd0>)
  400554:	9300      	str	r3, [sp, #0]
  400556:	2340      	movs	r3, #64	; 0x40
  400558:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
  40055c:	210a      	movs	r1, #10
  40055e:	4620      	mov	r0, r4
  400560:	47c0      	blx	r8
	ECHO_PIO_ID,
	ECHO_IDX_MASK,
	PIO_IT_EDGE,
	echo_callback);

	pio_enable_interrupt(ECHO_PIO, ECHO_IDX_MASK);
  400562:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
  400566:	4620      	mov	r0, r4
  400568:	f8df 805c 	ldr.w	r8, [pc, #92]	; 4005c8 <io_init+0xe4>
  40056c:	47c0      	blx	r8
	pio_get_interrupt_status(ECHO_PIO);
  40056e:	4620      	mov	r0, r4
  400570:	4f11      	ldr	r7, [pc, #68]	; (4005b8 <io_init+0xd4>)
  400572:	47b8      	blx	r7
  400574:	4c11      	ldr	r4, [pc, #68]	; (4005bc <io_init+0xd8>)
  400576:	f44f 6380 	mov.w	r3, #1024	; 0x400
  40057a:	6023      	str	r3, [r4, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  40057c:	2680      	movs	r6, #128	; 0x80
  40057e:	f884 630a 	strb.w	r6, [r4, #778]	; 0x30a
	NVIC_EnableIRQ(ECHO_PIO_ID);
	NVIC_SetPriority(ECHO_PIO_ID, 4);

	pio_enable_interrupt(BUT2_PIO, BUT2_IDX_MASK);
  400582:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  400586:	4628      	mov	r0, r5
  400588:	47c0      	blx	r8
	pio_get_interrupt_status(BUT2_PIO);
  40058a:	4628      	mov	r0, r5
  40058c:	47b8      	blx	r7
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  40058e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  400592:	6023      	str	r3, [r4, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  400594:	f884 630c 	strb.w	r6, [r4, #780]	; 0x30c
	NVIC_EnableIRQ(BUT2_PIO_ID);
	NVIC_SetPriority(BUT2_PIO_ID, 4);
  400598:	b003      	add	sp, #12
  40059a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  40059e:	bf00      	nop
  4005a0:	00401289 	.word	0x00401289
  4005a4:	400e1200 	.word	0x400e1200
  4005a8:	00400f75 	.word	0x00400f75
  4005ac:	0040183d 	.word	0x0040183d
  4005b0:	400e0e00 	.word	0x400e0e00
  4005b4:	00401849 	.word	0x00401849
  4005b8:	0040103b 	.word	0x0040103b
  4005bc:	e000e100 	.word	0xe000e100
  4005c0:	00400e49 	.word	0x00400e49
  4005c4:	00401095 	.word	0x00401095
  4005c8:	00401037 	.word	0x00401037

004005cc <gfx_mono_set_framebuffer>:
	gfx_mono_set_framebuffer(framebuffer);
\endcode
 */
void gfx_mono_set_framebuffer(uint8_t *framebuffer)
{
	fbpointer = framebuffer;
  4005cc:	4b01      	ldr	r3, [pc, #4]	; (4005d4 <gfx_mono_set_framebuffer+0x8>)
  4005ce:	6018      	str	r0, [r3, #0]
  4005d0:	4770      	bx	lr
  4005d2:	bf00      	nop
  4005d4:	204009f0 	.word	0x204009f0

004005d8 <gfx_mono_framebuffer_put_byte>:
\endcode
 */
void gfx_mono_framebuffer_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data)
{
	*(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column) = data;
  4005d8:	4b02      	ldr	r3, [pc, #8]	; (4005e4 <gfx_mono_framebuffer_put_byte+0xc>)
  4005da:	681b      	ldr	r3, [r3, #0]
  4005dc:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
  4005e0:	5442      	strb	r2, [r0, r1]
  4005e2:	4770      	bx	lr
  4005e4:	204009f0 	.word	0x204009f0

004005e8 <gfx_mono_framebuffer_get_byte>:
	data = gfx_mono_framebuffer_get_byte(0, 0);
\endcode
 */
uint8_t gfx_mono_framebuffer_get_byte(gfx_coord_t page, gfx_coord_t column)
{
	return *(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column);
  4005e8:	4b02      	ldr	r3, [pc, #8]	; (4005f4 <gfx_mono_framebuffer_get_byte+0xc>)
  4005ea:	681b      	ldr	r3, [r3, #0]
  4005ec:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
}
  4005f0:	5c40      	ldrb	r0, [r0, r1]
  4005f2:	4770      	bx	lr
  4005f4:	204009f0 	.word	0x204009f0

004005f8 <gfx_mono_generic_draw_horizontal_line>:
 * \param[in]  length     Length of the line in pixels.
 * \param[in]  color      Pixel operation of the line.
 */
void gfx_mono_generic_draw_horizontal_line(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t length, enum gfx_mono_color color)
{
  4005f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	uint8_t page;
	uint8_t pixelmask;
	uint8_t temp;

	/* Clip line length if too long */
	if (x + length > GFX_MONO_LCD_WIDTH) {
  4005fc:	1884      	adds	r4, r0, r2
  4005fe:	2c80      	cmp	r4, #128	; 0x80
  400600:	dd02      	ble.n	400608 <gfx_mono_generic_draw_horizontal_line+0x10>
		length = GFX_MONO_LCD_WIDTH - x;
  400602:	f1c0 0480 	rsb	r4, r0, #128	; 0x80
  400606:	b2e2      	uxtb	r2, r4
	}

	page = y / 8;
	pixelmask = (1 << (y - (page * 8)));

	if (length == 0) {
  400608:	b322      	cbz	r2, 400654 <gfx_mono_generic_draw_horizontal_line+0x5c>
	page = y / 8;
  40060a:	08cd      	lsrs	r5, r1, #3
	pixelmask = (1 << (y - (page * 8)));
  40060c:	eba1 01c5 	sub.w	r1, r1, r5, lsl #3
  400610:	2601      	movs	r6, #1
  400612:	fa06 f101 	lsl.w	r1, r6, r1
  400616:	b2ce      	uxtb	r6, r1
		/* Nothing to do. Move along. */
		return;
	}

	switch (color) {
  400618:	2b01      	cmp	r3, #1
  40061a:	d01d      	beq.n	400658 <gfx_mono_generic_draw_horizontal_line+0x60>
  40061c:	2b00      	cmp	r3, #0
  40061e:	d035      	beq.n	40068c <gfx_mono_generic_draw_horizontal_line+0x94>
  400620:	2b02      	cmp	r3, #2
  400622:	d117      	bne.n	400654 <gfx_mono_generic_draw_horizontal_line+0x5c>
  400624:	3801      	subs	r0, #1
  400626:	b2c7      	uxtb	r7, r0
  400628:	19d4      	adds	r4, r2, r7
  40062a:	b2e4      	uxtb	r4, r4
		}
		break;

	case GFX_PIXEL_XOR:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
  40062c:	f8df a090 	ldr.w	sl, [pc, #144]	; 4006c0 <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp ^= pixelmask;
			gfx_mono_put_byte(page, x + length, temp);
  400630:	f04f 0900 	mov.w	r9, #0
  400634:	f8df 808c 	ldr.w	r8, [pc, #140]	; 4006c4 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  400638:	4621      	mov	r1, r4
  40063a:	4628      	mov	r0, r5
  40063c:	47d0      	blx	sl
			temp ^= pixelmask;
  40063e:	ea86 0200 	eor.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  400642:	464b      	mov	r3, r9
  400644:	b2d2      	uxtb	r2, r2
  400646:	4621      	mov	r1, r4
  400648:	4628      	mov	r0, r5
  40064a:	47c0      	blx	r8
  40064c:	3c01      	subs	r4, #1
  40064e:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  400650:	42bc      	cmp	r4, r7
  400652:	d1f1      	bne.n	400638 <gfx_mono_generic_draw_horizontal_line+0x40>
  400654:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  400658:	3801      	subs	r0, #1
  40065a:	b2c7      	uxtb	r7, r0
  40065c:	19d4      	adds	r4, r2, r7
  40065e:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  400660:	f8df a05c 	ldr.w	sl, [pc, #92]	; 4006c0 <gfx_mono_generic_draw_horizontal_line+0xc8>
			gfx_mono_put_byte(page, x + length, temp);
  400664:	f04f 0900 	mov.w	r9, #0
  400668:	f8df 8058 	ldr.w	r8, [pc, #88]	; 4006c4 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  40066c:	4621      	mov	r1, r4
  40066e:	4628      	mov	r0, r5
  400670:	47d0      	blx	sl
			temp |= pixelmask;
  400672:	ea46 0200 	orr.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  400676:	464b      	mov	r3, r9
  400678:	b2d2      	uxtb	r2, r2
  40067a:	4621      	mov	r1, r4
  40067c:	4628      	mov	r0, r5
  40067e:	47c0      	blx	r8
  400680:	3c01      	subs	r4, #1
  400682:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  400684:	42bc      	cmp	r4, r7
  400686:	d1f1      	bne.n	40066c <gfx_mono_generic_draw_horizontal_line+0x74>
  400688:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40068c:	3801      	subs	r0, #1
  40068e:	b2c7      	uxtb	r7, r0
  400690:	19d4      	adds	r4, r2, r7
  400692:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  400694:	f8df 8028 	ldr.w	r8, [pc, #40]	; 4006c0 <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp &= ~pixelmask;
  400698:	43ce      	mvns	r6, r1
			gfx_mono_put_byte(page, x + length, temp);
  40069a:	f8df 9028 	ldr.w	r9, [pc, #40]	; 4006c4 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  40069e:	4621      	mov	r1, r4
  4006a0:	4628      	mov	r0, r5
  4006a2:	47c0      	blx	r8
			temp &= ~pixelmask;
  4006a4:	ea06 0200 	and.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  4006a8:	2300      	movs	r3, #0
  4006aa:	b2d2      	uxtb	r2, r2
  4006ac:	4621      	mov	r1, r4
  4006ae:	4628      	mov	r0, r5
  4006b0:	47c8      	blx	r9
  4006b2:	3c01      	subs	r4, #1
  4006b4:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  4006b6:	42bc      	cmp	r4, r7
  4006b8:	d1f1      	bne.n	40069e <gfx_mono_generic_draw_horizontal_line+0xa6>
  4006ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4006be:	bf00      	nop
  4006c0:	004009e9 	.word	0x004009e9
  4006c4:	004008e5 	.word	0x004008e5

004006c8 <gfx_mono_generic_draw_vertical_line>:
 * \param[in]  color      Pixel operation of the line.
 */
void gfx_mono_generic_draw_vertical_line(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t length, enum gfx_mono_color color)
{
	if (length == 0) {
  4006c8:	2a00      	cmp	r2, #0
  4006ca:	d048      	beq.n	40075e <gfx_mono_generic_draw_vertical_line+0x96>
{
  4006cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4006d0:	4614      	mov	r4, r2
  4006d2:	461f      	mov	r7, r3
  4006d4:	4606      	mov	r6, r0
		return;
	}

	gfx_coord_t y2 = y + length - 1;
  4006d6:	1e4a      	subs	r2, r1, #1
  4006d8:	4422      	add	r2, r4
  4006da:	b2d2      	uxtb	r2, r2

	if (y == y2) {
  4006dc:	4291      	cmp	r1, r2
  4006de:	d031      	beq.n	400744 <gfx_mono_generic_draw_vertical_line+0x7c>
  4006e0:	2a1f      	cmp	r2, #31
  4006e2:	bf28      	it	cs
  4006e4:	221f      	movcs	r2, #31
  4006e6:	4615      	mov	r5, r2

	if (y2 >= GFX_MONO_LCD_HEIGHT - 1) {
		y2 = GFX_MONO_LCD_HEIGHT - 1;
	}

	gfx_coord_t y1page = y / 8;
  4006e8:	08cc      	lsrs	r4, r1, #3
	gfx_coord_t y2page = y2 / 8;
  4006ea:	ea4f 08d2 	mov.w	r8, r2, lsr #3

	uint8_t y1bitpos = y & 0x07;
	uint8_t y2bitpos = y2 & 0x07;

	uint8_t y1pixelmask = 0xFF << y1bitpos;
  4006ee:	f001 0207 	and.w	r2, r1, #7
  4006f2:	23ff      	movs	r3, #255	; 0xff
  4006f4:	fa03 f202 	lsl.w	r2, r3, r2
  4006f8:	b2d2      	uxtb	r2, r2
	uint8_t y2pixelmask = 0xFF >> (7 - y2bitpos);
  4006fa:	f005 0507 	and.w	r5, r5, #7
  4006fe:	f1c5 0507 	rsb	r5, r5, #7
  400702:	fa43 f505 	asr.w	r5, r3, r5
  400706:	b2ed      	uxtb	r5, r5

	/* The pixels are on the same page; combine masks */
	if (y1page == y2page) {
  400708:	4544      	cmp	r4, r8
  40070a:	d020      	beq.n	40074e <gfx_mono_generic_draw_vertical_line+0x86>
		uint8_t pixelmask = y1pixelmask & y2pixelmask;
		gfx_mono_mask_byte(y1page, x, pixelmask, color);
	} else {
		gfx_mono_mask_byte(y1page, x, y1pixelmask, color);
  40070c:	463b      	mov	r3, r7
  40070e:	4601      	mov	r1, r0
  400710:	4620      	mov	r0, r4
  400712:	f8df 904c 	ldr.w	r9, [pc, #76]	; 400760 <gfx_mono_generic_draw_vertical_line+0x98>
  400716:	47c8      	blx	r9

		while (++y1page < y2page) {
  400718:	3401      	adds	r4, #1
  40071a:	45a0      	cmp	r8, r4
  40071c:	d90a      	bls.n	400734 <gfx_mono_generic_draw_vertical_line+0x6c>
			gfx_mono_mask_byte(y1page, x, 0xFF, color);
  40071e:	f04f 0aff 	mov.w	sl, #255	; 0xff
  400722:	463b      	mov	r3, r7
  400724:	4652      	mov	r2, sl
  400726:	4631      	mov	r1, r6
  400728:	4620      	mov	r0, r4
  40072a:	47c8      	blx	r9
		while (++y1page < y2page) {
  40072c:	3401      	adds	r4, #1
  40072e:	b2e4      	uxtb	r4, r4
  400730:	45a0      	cmp	r8, r4
  400732:	d8f6      	bhi.n	400722 <gfx_mono_generic_draw_vertical_line+0x5a>
		}

		gfx_mono_mask_byte(y2page, x, y2pixelmask, color);
  400734:	463b      	mov	r3, r7
  400736:	462a      	mov	r2, r5
  400738:	4631      	mov	r1, r6
  40073a:	4640      	mov	r0, r8
  40073c:	4c08      	ldr	r4, [pc, #32]	; (400760 <gfx_mono_generic_draw_vertical_line+0x98>)
  40073e:	47a0      	blx	r4
  400740:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		gfx_mono_draw_pixel(x, y, color);
  400744:	461a      	mov	r2, r3
  400746:	4b07      	ldr	r3, [pc, #28]	; (400764 <gfx_mono_generic_draw_vertical_line+0x9c>)
  400748:	4798      	blx	r3
		return;
  40074a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		gfx_mono_mask_byte(y1page, x, pixelmask, color);
  40074e:	463b      	mov	r3, r7
  400750:	402a      	ands	r2, r5
  400752:	4601      	mov	r1, r0
  400754:	4620      	mov	r0, r4
  400756:	4c02      	ldr	r4, [pc, #8]	; (400760 <gfx_mono_generic_draw_vertical_line+0x98>)
  400758:	47a0      	blx	r4
  40075a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40075e:	4770      	bx	lr
  400760:	004009f5 	.word	0x004009f5
  400764:	00400985 	.word	0x00400985

00400768 <gfx_mono_generic_draw_rect>:
 * \param[in] color       Pixel operation of the line.
 */
void gfx_mono_generic_draw_rect(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t width, gfx_coord_t height,
		enum gfx_mono_color color)
{
  400768:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40076c:	4604      	mov	r4, r0
  40076e:	460f      	mov	r7, r1
  400770:	4616      	mov	r6, r2
  400772:	4698      	mov	r8, r3
  400774:	f89d 5020 	ldrb.w	r5, [sp, #32]
	gfx_mono_draw_horizontal_line(x, y, width, color);
  400778:	462b      	mov	r3, r5
  40077a:	f8df 9034 	ldr.w	r9, [pc, #52]	; 4007b0 <gfx_mono_generic_draw_rect+0x48>
  40077e:	47c8      	blx	r9
	gfx_mono_draw_horizontal_line(x, y + height - 1, width, color);
  400780:	f108 31ff 	add.w	r1, r8, #4294967295
  400784:	4439      	add	r1, r7
  400786:	462b      	mov	r3, r5
  400788:	4632      	mov	r2, r6
  40078a:	b2c9      	uxtb	r1, r1
  40078c:	4620      	mov	r0, r4
  40078e:	47c8      	blx	r9

	gfx_mono_draw_vertical_line(x, y, height, color);
  400790:	462b      	mov	r3, r5
  400792:	4642      	mov	r2, r8
  400794:	4639      	mov	r1, r7
  400796:	4620      	mov	r0, r4
  400798:	f8df 9018 	ldr.w	r9, [pc, #24]	; 4007b4 <gfx_mono_generic_draw_rect+0x4c>
  40079c:	47c8      	blx	r9
	gfx_mono_draw_vertical_line(x + width - 1, y, height, color);
  40079e:	1e70      	subs	r0, r6, #1
  4007a0:	4420      	add	r0, r4
  4007a2:	462b      	mov	r3, r5
  4007a4:	4642      	mov	r2, r8
  4007a6:	4639      	mov	r1, r7
  4007a8:	b2c0      	uxtb	r0, r0
  4007aa:	47c8      	blx	r9
  4007ac:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4007b0:	004005f9 	.word	0x004005f9
  4007b4:	004006c9 	.word	0x004006c9

004007b8 <gfx_mono_generic_draw_filled_rect>:
 * \param[in]  color       Pixel operation of the line
 */
void gfx_mono_generic_draw_filled_rect(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t width, gfx_coord_t height,
		enum gfx_mono_color color)
{
  4007b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4007bc:	f89d 7020 	ldrb.w	r7, [sp, #32]
	if (height == 0) {
  4007c0:	b18b      	cbz	r3, 4007e6 <gfx_mono_generic_draw_filled_rect+0x2e>
  4007c2:	461c      	mov	r4, r3
  4007c4:	4690      	mov	r8, r2
  4007c6:	4606      	mov	r6, r0
  4007c8:	1e4d      	subs	r5, r1, #1
  4007ca:	b2ed      	uxtb	r5, r5
  4007cc:	442c      	add	r4, r5
  4007ce:	b2e4      	uxtb	r4, r4
		/* Nothing to do. Move along. */
		return;
	}

	while (height-- > 0) {
		gfx_mono_draw_horizontal_line(x, y + height, width, color);
  4007d0:	f8df 9018 	ldr.w	r9, [pc, #24]	; 4007ec <gfx_mono_generic_draw_filled_rect+0x34>
  4007d4:	463b      	mov	r3, r7
  4007d6:	4642      	mov	r2, r8
  4007d8:	4621      	mov	r1, r4
  4007da:	4630      	mov	r0, r6
  4007dc:	47c8      	blx	r9
  4007de:	3c01      	subs	r4, #1
  4007e0:	b2e4      	uxtb	r4, r4
	while (height-- > 0) {
  4007e2:	42ac      	cmp	r4, r5
  4007e4:	d1f6      	bne.n	4007d4 <gfx_mono_generic_draw_filled_rect+0x1c>
  4007e6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4007ea:	bf00      	nop
  4007ec:	004005f9 	.word	0x004005f9

004007f0 <gfx_mono_draw_char>:
 * \param[in] y        Y coordinate on screen.
 * \param[in] font     Font to draw character in
 */
void gfx_mono_draw_char(const char c, const gfx_coord_t x, const gfx_coord_t y,
		const struct font *font)
{
  4007f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4007f4:	b083      	sub	sp, #12
  4007f6:	4604      	mov	r4, r0
  4007f8:	4688      	mov	r8, r1
  4007fa:	4691      	mov	r9, r2
  4007fc:	469b      	mov	fp, r3
	gfx_mono_draw_filled_rect(x, y, font->width, font->height,
  4007fe:	7a5b      	ldrb	r3, [r3, #9]
  400800:	f89b 2008 	ldrb.w	r2, [fp, #8]
  400804:	2100      	movs	r1, #0
  400806:	9100      	str	r1, [sp, #0]
  400808:	4649      	mov	r1, r9
  40080a:	4640      	mov	r0, r8
  40080c:	4d21      	ldr	r5, [pc, #132]	; (400894 <gfx_mono_draw_char+0xa4>)
  40080e:	47a8      	blx	r5
			GFX_PIXEL_CLR);

	switch (font->type) {
  400810:	f89b 3000 	ldrb.w	r3, [fp]
  400814:	b113      	cbz	r3, 40081c <gfx_mono_draw_char+0x2c>
	default:
		/* Unsupported mode, call assert */
		Assert(false);
		break;
	}
}
  400816:	b003      	add	sp, #12
  400818:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	char_row_size = font->width / CONFIG_FONT_PIXELS_PER_BYTE;
  40081c:	f89b 2008 	ldrb.w	r2, [fp, #8]
  400820:	08d3      	lsrs	r3, r2, #3
	if (font->width % CONFIG_FONT_PIXELS_PER_BYTE) {
  400822:	f012 0f07 	tst.w	r2, #7
		char_row_size++;
  400826:	bf18      	it	ne
  400828:	3301      	addne	r3, #1
	glyph_data_offset = char_row_size * font->height *
  40082a:	f89b a009 	ldrb.w	sl, [fp, #9]
			((uint8_t)ch - font->first_char);
  40082e:	f89b 700a 	ldrb.w	r7, [fp, #10]
  400832:	1be7      	subs	r7, r4, r7
	glyph_data_offset = char_row_size * font->height *
  400834:	fb17 f70a 	smulbb	r7, r7, sl
  400838:	fb17 f703 	smulbb	r7, r7, r3
	glyph_data = font->data.progmem + glyph_data_offset;
  40083c:	f8db 3004 	ldr.w	r3, [fp, #4]
  400840:	fa13 f787 	uxtah	r7, r3, r7
  400844:	e01f      	b.n	400886 <gfx_mono_draw_char+0x96>
			glyph_byte <<= 1;
  400846:	0064      	lsls	r4, r4, #1
  400848:	b2e4      	uxtb	r4, r4
  40084a:	3501      	adds	r5, #1
		for (i = 0; i < pixelsToDraw; i++) {
  40084c:	b2eb      	uxtb	r3, r5
  40084e:	429e      	cmp	r6, r3
  400850:	d910      	bls.n	400874 <gfx_mono_draw_char+0x84>
  400852:	b2eb      	uxtb	r3, r5
  400854:	eb08 0003 	add.w	r0, r8, r3
  400858:	b2c0      	uxtb	r0, r0
			if (i % CONFIG_FONT_PIXELS_PER_BYTE == 0) {
  40085a:	f013 0f07 	tst.w	r3, #7
				glyph_byte = PROGMEM_READ_BYTE(glyph_data);
  40085e:	bf08      	it	eq
  400860:	f817 4b01 	ldrbeq.w	r4, [r7], #1
			if ((glyph_byte & 0x80)) {
  400864:	f014 0f80 	tst.w	r4, #128	; 0x80
  400868:	d0ed      	beq.n	400846 <gfx_mono_draw_char+0x56>
				gfx_mono_draw_pixel(inc_x, inc_y,
  40086a:	2201      	movs	r2, #1
  40086c:	4649      	mov	r1, r9
  40086e:	4b0a      	ldr	r3, [pc, #40]	; (400898 <gfx_mono_draw_char+0xa8>)
  400870:	4798      	blx	r3
  400872:	e7e8      	b.n	400846 <gfx_mono_draw_char+0x56>
		inc_y += 1;
  400874:	f109 0901 	add.w	r9, r9, #1
  400878:	fa5f f989 	uxtb.w	r9, r9
		rows_left--;
  40087c:	f10a 3aff 	add.w	sl, sl, #4294967295
	} while (rows_left > 0);
  400880:	f01a 0aff 	ands.w	sl, sl, #255	; 0xff
  400884:	d0c7      	beq.n	400816 <gfx_mono_draw_char+0x26>
		uint8_t pixelsToDraw = font->width;
  400886:	f89b 6008 	ldrb.w	r6, [fp, #8]
		for (i = 0; i < pixelsToDraw; i++) {
  40088a:	2e00      	cmp	r6, #0
  40088c:	d0f2      	beq.n	400874 <gfx_mono_draw_char+0x84>
  40088e:	2500      	movs	r5, #0
  400890:	462c      	mov	r4, r5
  400892:	e7de      	b.n	400852 <gfx_mono_draw_char+0x62>
  400894:	004007b9 	.word	0x004007b9
  400898:	00400985 	.word	0x00400985

0040089c <gfx_mono_draw_string>:
 * \param[in] y         Y coordinate on screen.
 * \param[in] font      Font to draw string in
 */
void gfx_mono_draw_string(const char *str, gfx_coord_t x, gfx_coord_t y,
		const struct font *font)
{
  40089c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4008a0:	4604      	mov	r4, r0
  4008a2:	4690      	mov	r8, r2
  4008a4:	461d      	mov	r5, r3
  4008a6:	4689      	mov	r9, r1
			x = start_of_string_position_x;
			y += font->height + 1;
		} else if (*str == '\r') {
			/* Skip '\r' characters. */
		} else {
			gfx_mono_draw_char(*str, x, y, font);
  4008a8:	4f0d      	ldr	r7, [pc, #52]	; (4008e0 <gfx_mono_draw_string+0x44>)
			x = start_of_string_position_x;
  4008aa:	460e      	mov	r6, r1
  4008ac:	e008      	b.n	4008c0 <gfx_mono_draw_string+0x24>
			y += font->height + 1;
  4008ae:	7a6a      	ldrb	r2, [r5, #9]
  4008b0:	3201      	adds	r2, #1
  4008b2:	4442      	add	r2, r8
  4008b4:	fa5f f882 	uxtb.w	r8, r2
			x = start_of_string_position_x;
  4008b8:	46b1      	mov	r9, r6
			x += font->width;
		}
	} while (*(++str));
  4008ba:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  4008be:	b16b      	cbz	r3, 4008dc <gfx_mono_draw_string+0x40>
		if (*str == '\n') {
  4008c0:	7820      	ldrb	r0, [r4, #0]
  4008c2:	280a      	cmp	r0, #10
  4008c4:	d0f3      	beq.n	4008ae <gfx_mono_draw_string+0x12>
		} else if (*str == '\r') {
  4008c6:	280d      	cmp	r0, #13
  4008c8:	d0f7      	beq.n	4008ba <gfx_mono_draw_string+0x1e>
			gfx_mono_draw_char(*str, x, y, font);
  4008ca:	462b      	mov	r3, r5
  4008cc:	4642      	mov	r2, r8
  4008ce:	4649      	mov	r1, r9
  4008d0:	47b8      	blx	r7
			x += font->width;
  4008d2:	7a2b      	ldrb	r3, [r5, #8]
  4008d4:	4499      	add	r9, r3
  4008d6:	fa5f f989 	uxtb.w	r9, r9
  4008da:	e7ee      	b.n	4008ba <gfx_mono_draw_string+0x1e>
}
  4008dc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4008e0:	004007f1 	.word	0x004007f1

004008e4 <gfx_mono_ssd1306_put_byte>:
	gfx_mono_ssd1306_put_byte(0, 0, 0xFF, false);
\endcode
  */
 void gfx_mono_ssd1306_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data, bool force)
{
  4008e4:	b570      	push	{r4, r5, r6, lr}
  4008e6:	4604      	mov	r4, r0
  4008e8:	460d      	mov	r5, r1
  4008ea:	4616      	mov	r6, r2
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	if (!force && data == gfx_mono_framebuffer_get_byte(page, column)) {
  4008ec:	b91b      	cbnz	r3, 4008f6 <gfx_mono_ssd1306_put_byte+0x12>
  4008ee:	4b0d      	ldr	r3, [pc, #52]	; (400924 <gfx_mono_ssd1306_put_byte+0x40>)
  4008f0:	4798      	blx	r3
  4008f2:	42b0      	cmp	r0, r6
  4008f4:	d015      	beq.n	400922 <gfx_mono_ssd1306_put_byte+0x3e>
		return;
	}
	gfx_mono_framebuffer_put_byte(page, column, data);
  4008f6:	4632      	mov	r2, r6
  4008f8:	4629      	mov	r1, r5
  4008fa:	4620      	mov	r0, r4
  4008fc:	4b0a      	ldr	r3, [pc, #40]	; (400928 <gfx_mono_ssd1306_put_byte+0x44>)
  4008fe:	4798      	blx	r3
 * \param address the page address
 */
static inline void ssd1306_set_page_address(uint8_t address)
{
	// Make sure that the address is 4 bits (only 8 pages)
	address &= 0x0F;
  400900:	f004 000f 	and.w	r0, r4, #15
	ssd1306_write_command(SSD1306_CMD_SET_PAGE_START_ADDRESS(address));
  400904:	f040 00b0 	orr.w	r0, r0, #176	; 0xb0
  400908:	4c08      	ldr	r4, [pc, #32]	; (40092c <gfx_mono_ssd1306_put_byte+0x48>)
  40090a:	47a0      	blx	r4
 */
static inline void ssd1306_set_column_address(uint8_t address)
{
	// Make sure the address is 7 bits
	address &= 0x7F;
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_MSB(address >> 4));
  40090c:	f3c5 1002 	ubfx	r0, r5, #4, #3
  400910:	f040 0010 	orr.w	r0, r0, #16
  400914:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_LSB(address & 0x0F));
  400916:	f005 000f 	and.w	r0, r5, #15
  40091a:	47a0      	blx	r4
#endif

	ssd1306_set_page_address(page);
	ssd1306_set_column_address(column);

	ssd1306_write_data(data);
  40091c:	4630      	mov	r0, r6
  40091e:	4b04      	ldr	r3, [pc, #16]	; (400930 <gfx_mono_ssd1306_put_byte+0x4c>)
  400920:	4798      	blx	r3
  400922:	bd70      	pop	{r4, r5, r6, pc}
  400924:	004005e9 	.word	0x004005e9
  400928:	004005d9 	.word	0x004005d9
  40092c:	00400a39 	.word	0x00400a39
  400930:	00400c59 	.word	0x00400c59

00400934 <gfx_mono_ssd1306_init>:
{
  400934:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	gfx_mono_set_framebuffer(framebuffer);
  400938:	480d      	ldr	r0, [pc, #52]	; (400970 <gfx_mono_ssd1306_init+0x3c>)
  40093a:	4b0e      	ldr	r3, [pc, #56]	; (400974 <gfx_mono_ssd1306_init+0x40>)
  40093c:	4798      	blx	r3
	ssd1306_init();
  40093e:	4b0e      	ldr	r3, [pc, #56]	; (400978 <gfx_mono_ssd1306_init+0x44>)
  400940:	4798      	blx	r3
 */
static inline void ssd1306_set_display_start_line_address(uint8_t address)
{
	// Make sure address is 6 bits
	address &= 0x3F;
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(address));
  400942:	2040      	movs	r0, #64	; 0x40
  400944:	4b0d      	ldr	r3, [pc, #52]	; (40097c <gfx_mono_ssd1306_init+0x48>)
  400946:	4798      	blx	r3
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  400948:	2500      	movs	r5, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  40094a:	f04f 0801 	mov.w	r8, #1
  40094e:	462f      	mov	r7, r5
  400950:	4e0b      	ldr	r6, [pc, #44]	; (400980 <gfx_mono_ssd1306_init+0x4c>)
{
  400952:	2400      	movs	r4, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  400954:	4643      	mov	r3, r8
  400956:	463a      	mov	r2, r7
  400958:	b2e1      	uxtb	r1, r4
  40095a:	4628      	mov	r0, r5
  40095c:	47b0      	blx	r6
  40095e:	3401      	adds	r4, #1
		for (column = 0; column < GFX_MONO_LCD_WIDTH; column++) {
  400960:	2c80      	cmp	r4, #128	; 0x80
  400962:	d1f7      	bne.n	400954 <gfx_mono_ssd1306_init+0x20>
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  400964:	3501      	adds	r5, #1
  400966:	b2ed      	uxtb	r5, r5
  400968:	2d04      	cmp	r5, #4
  40096a:	d1f2      	bne.n	400952 <gfx_mono_ssd1306_init+0x1e>
  40096c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400970:	204009f4 	.word	0x204009f4
  400974:	004005cd 	.word	0x004005cd
  400978:	00400a79 	.word	0x00400a79
  40097c:	00400a39 	.word	0x00400a39
  400980:	004008e5 	.word	0x004008e5

00400984 <gfx_mono_ssd1306_draw_pixel>:
	if ((x > GFX_MONO_LCD_WIDTH - 1) || (y > GFX_MONO_LCD_HEIGHT - 1)) {
  400984:	09c3      	lsrs	r3, r0, #7
  400986:	d12a      	bne.n	4009de <gfx_mono_ssd1306_draw_pixel+0x5a>
  400988:	291f      	cmp	r1, #31
  40098a:	d828      	bhi.n	4009de <gfx_mono_ssd1306_draw_pixel+0x5a>
{
  40098c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400990:	4614      	mov	r4, r2
  400992:	4605      	mov	r5, r0
	page = y / GFX_MONO_LCD_PIXELS_PER_BYTE;
  400994:	08ce      	lsrs	r6, r1, #3
	pixel_mask = (1 << (y - (page * 8)));
  400996:	eba1 01c6 	sub.w	r1, r1, r6, lsl #3
  40099a:	2201      	movs	r2, #1
  40099c:	fa02 f701 	lsl.w	r7, r2, r1
  4009a0:	fa5f f887 	uxtb.w	r8, r7
\endcode
 */
uint8_t gfx_mono_ssd1306_get_byte(gfx_coord_t page, gfx_coord_t column)
{
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	return gfx_mono_framebuffer_get_byte(page, column);
  4009a4:	4601      	mov	r1, r0
  4009a6:	4630      	mov	r0, r6
  4009a8:	4b0d      	ldr	r3, [pc, #52]	; (4009e0 <gfx_mono_ssd1306_draw_pixel+0x5c>)
  4009aa:	4798      	blx	r3
  4009ac:	4602      	mov	r2, r0
	switch (color) {
  4009ae:	2c01      	cmp	r4, #1
  4009b0:	d009      	beq.n	4009c6 <gfx_mono_ssd1306_draw_pixel+0x42>
  4009b2:	b164      	cbz	r4, 4009ce <gfx_mono_ssd1306_draw_pixel+0x4a>
  4009b4:	2c02      	cmp	r4, #2
  4009b6:	d00e      	beq.n	4009d6 <gfx_mono_ssd1306_draw_pixel+0x52>
	gfx_mono_put_byte(page, x, pixel_value);
  4009b8:	2300      	movs	r3, #0
  4009ba:	4629      	mov	r1, r5
  4009bc:	4630      	mov	r0, r6
  4009be:	4c09      	ldr	r4, [pc, #36]	; (4009e4 <gfx_mono_ssd1306_draw_pixel+0x60>)
  4009c0:	47a0      	blx	r4
  4009c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		pixel_value |= pixel_mask;
  4009c6:	ea48 0200 	orr.w	r2, r8, r0
  4009ca:	b2d2      	uxtb	r2, r2
		break;
  4009cc:	e7f4      	b.n	4009b8 <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value &= ~pixel_mask;
  4009ce:	ea20 0207 	bic.w	r2, r0, r7
  4009d2:	b2d2      	uxtb	r2, r2
		break;
  4009d4:	e7f0      	b.n	4009b8 <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value ^= pixel_mask;
  4009d6:	ea88 0200 	eor.w	r2, r8, r0
  4009da:	b2d2      	uxtb	r2, r2
		break;
  4009dc:	e7ec      	b.n	4009b8 <gfx_mono_ssd1306_draw_pixel+0x34>
  4009de:	4770      	bx	lr
  4009e0:	004005e9 	.word	0x004005e9
  4009e4:	004008e5 	.word	0x004008e5

004009e8 <gfx_mono_ssd1306_get_byte>:
{
  4009e8:	b508      	push	{r3, lr}
	return gfx_mono_framebuffer_get_byte(page, column);
  4009ea:	4b01      	ldr	r3, [pc, #4]	; (4009f0 <gfx_mono_ssd1306_get_byte+0x8>)
  4009ec:	4798      	blx	r3
	ssd1306_set_column_address(column);

	return ssd1306_read_data();

#endif
}
  4009ee:	bd08      	pop	{r3, pc}
  4009f0:	004005e9 	.word	0x004005e9

004009f4 <gfx_mono_ssd1306_mask_byte>:
	gfx_mono_ssd1306_mask_byte(0,0,0xAA,GFX_PIXEL_XOR);
\endcode
 */
void gfx_mono_ssd1306_mask_byte(gfx_coord_t page, gfx_coord_t column,
		gfx_mono_color_t pixel_mask, gfx_mono_color_t color)
{
  4009f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4009f6:	4605      	mov	r5, r0
  4009f8:	460e      	mov	r6, r1
  4009fa:	4617      	mov	r7, r2
  4009fc:	461c      	mov	r4, r3
	return gfx_mono_framebuffer_get_byte(page, column);
  4009fe:	4b0c      	ldr	r3, [pc, #48]	; (400a30 <gfx_mono_ssd1306_mask_byte+0x3c>)
  400a00:	4798      	blx	r3
  400a02:	4602      	mov	r2, r0
	gfx_mono_color_t temp = gfx_mono_get_byte(page, column);

	switch (color) {
  400a04:	2c01      	cmp	r4, #1
  400a06:	d008      	beq.n	400a1a <gfx_mono_ssd1306_mask_byte+0x26>
  400a08:	b154      	cbz	r4, 400a20 <gfx_mono_ssd1306_mask_byte+0x2c>
  400a0a:	2c02      	cmp	r4, #2
  400a0c:	d00c      	beq.n	400a28 <gfx_mono_ssd1306_mask_byte+0x34>

	default:
		break;
	}

	gfx_mono_put_byte(page, column, temp);
  400a0e:	2300      	movs	r3, #0
  400a10:	4631      	mov	r1, r6
  400a12:	4628      	mov	r0, r5
  400a14:	4c07      	ldr	r4, [pc, #28]	; (400a34 <gfx_mono_ssd1306_mask_byte+0x40>)
  400a16:	47a0      	blx	r4
  400a18:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		temp |= pixel_mask;
  400a1a:	433a      	orrs	r2, r7
  400a1c:	b2d2      	uxtb	r2, r2
		break;
  400a1e:	e7f6      	b.n	400a0e <gfx_mono_ssd1306_mask_byte+0x1a>
		temp &= ~pixel_mask;
  400a20:	ea20 0207 	bic.w	r2, r0, r7
  400a24:	b2d2      	uxtb	r2, r2
		break;
  400a26:	e7f2      	b.n	400a0e <gfx_mono_ssd1306_mask_byte+0x1a>
		temp ^= pixel_mask;
  400a28:	407a      	eors	r2, r7
  400a2a:	b2d2      	uxtb	r2, r2
		break;
  400a2c:	e7ef      	b.n	400a0e <gfx_mono_ssd1306_mask_byte+0x1a>
  400a2e:	bf00      	nop
  400a30:	004005e9 	.word	0x004005e9
  400a34:	004008e5 	.word	0x004008e5

00400a38 <ssd1306_write_command>:
 * data write function is called based on the selected interface.
 *
 * \param command the command to write
 */
void ssd1306_write_command(uint8_t command)
{
  400a38:	b538      	push	{r3, r4, r5, lr}
  400a3a:	4605      	mov	r5, r0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  400a3c:	2208      	movs	r2, #8
  400a3e:	4b09      	ldr	r3, [pc, #36]	; (400a64 <ssd1306_write_command+0x2c>)
  400a40:	635a      	str	r2, [r3, #52]	; 0x34
	ioport_set_pin_level(SSD1306_DC_PIN, false);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  400a42:	4c09      	ldr	r4, [pc, #36]	; (400a68 <ssd1306_write_command+0x30>)
  400a44:	2101      	movs	r1, #1
  400a46:	4620      	mov	r0, r4
  400a48:	4b08      	ldr	r3, [pc, #32]	; (400a6c <ssd1306_write_command+0x34>)
  400a4a:	4798      	blx	r3
	spi_write(SPI0, command, 1, 1);
  400a4c:	2301      	movs	r3, #1
  400a4e:	461a      	mov	r2, r3
  400a50:	4629      	mov	r1, r5
  400a52:	4620      	mov	r0, r4
  400a54:	4c06      	ldr	r4, [pc, #24]	; (400a70 <ssd1306_write_command+0x38>)
  400a56:	47a0      	blx	r4
	delay_us(10);
  400a58:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  400a5c:	4b05      	ldr	r3, [pc, #20]	; (400a74 <ssd1306_write_command+0x3c>)
  400a5e:	4798      	blx	r3
  400a60:	bd38      	pop	{r3, r4, r5, pc}
  400a62:	bf00      	nop
  400a64:	400e1000 	.word	0x400e1000
  400a68:	40008000 	.word	0x40008000
  400a6c:	0040029d 	.word	0x0040029d
  400a70:	004002b3 	.word	0x004002b3
  400a74:	20400001 	.word	0x20400001

00400a78 <ssd1306_init>:
{
  400a78:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400a7c:	4d66      	ldr	r5, [pc, #408]	; (400c18 <ssd1306_init+0x1a0>)
  400a7e:	f44f 3600 	mov.w	r6, #131072	; 0x20000
  400a82:	612e      	str	r6, [r5, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400a84:	f8c5 60a0 	str.w	r6, [r5, #160]	; 0xa0
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400a88:	4b64      	ldr	r3, [pc, #400]	; (400c1c <ssd1306_init+0x1a4>)
  400a8a:	2708      	movs	r7, #8
  400a8c:	611f      	str	r7, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400a8e:	f8c3 70a0 	str.w	r7, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  400a92:	666e      	str	r6, [r5, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400a94:	f8c5 6090 	str.w	r6, [r5, #144]	; 0x90
		base->PIO_MDDR = mask;
  400a98:	656e      	str	r6, [r5, #84]	; 0x54
		base->PIO_IFDR = mask;
  400a9a:	626e      	str	r6, [r5, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400a9c:	f8c5 6080 	str.w	r6, [r5, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400aa0:	6f2a      	ldr	r2, [r5, #112]	; 0x70
  400aa2:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  400aa6:	672a      	str	r2, [r5, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400aa8:	6f6a      	ldr	r2, [r5, #116]	; 0x74
  400aaa:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  400aae:	676a      	str	r2, [r5, #116]	; 0x74
		base->PIO_PUER = mask;
  400ab0:	665f      	str	r7, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400ab2:	f8c3 7090 	str.w	r7, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  400ab6:	655f      	str	r7, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  400ab8:	625f      	str	r7, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400aba:	f8c3 7080 	str.w	r7, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400abe:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  400ac0:	f022 0208 	bic.w	r2, r2, #8
  400ac4:	671a      	str	r2, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400ac6:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  400ac8:	f022 0208 	bic.w	r2, r2, #8
  400acc:	675a      	str	r2, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PER = mask;
  400ace:	601f      	str	r7, [r3, #0]
  400ad0:	602e      	str	r6, [r5, #0]
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400ad2:	631f      	str	r7, [r3, #48]	; 0x30
  400ad4:	632e      	str	r6, [r5, #48]	; 0x30
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  400ad6:	f8df 817c 	ldr.w	r8, [pc, #380]	; 400c54 <ssd1306_init+0x1dc>
  400ada:	2300      	movs	r3, #0
  400adc:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  400ae0:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400ae4:	4640      	mov	r0, r8
  400ae6:	4c4e      	ldr	r4, [pc, #312]	; (400c20 <ssd1306_init+0x1a8>)
  400ae8:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  400aea:	2300      	movs	r3, #0
  400aec:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  400af0:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400af4:	4640      	mov	r0, r8
  400af6:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  400af8:	2300      	movs	r3, #0
  400afa:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  400afe:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400b02:	4640      	mov	r0, r8
  400b04:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  400b06:	2300      	movs	r3, #0
  400b08:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  400b0c:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400b10:	4640      	mov	r0, r8
  400b12:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  400b14:	2300      	movs	r3, #0
  400b16:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  400b1a:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400b1e:	4640      	mov	r0, r8
  400b20:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  400b22:	2300      	movs	r3, #0
  400b24:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  400b28:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400b2c:	4640      	mov	r0, r8
  400b2e:	47a0      	blx	r4
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  400b30:	4c3c      	ldr	r4, [pc, #240]	; (400c24 <ssd1306_init+0x1ac>)
  400b32:	f04f 0902 	mov.w	r9, #2
  400b36:	f8c4 9000 	str.w	r9, [r4]
	p_spi->SPI_CR = SPI_CR_SWRST;
  400b3a:	f04f 0880 	mov.w	r8, #128	; 0x80
  400b3e:	f8c4 8000 	str.w	r8, [r4]
	p_spi->SPI_MR |= SPI_MR_MSTR;
  400b42:	6863      	ldr	r3, [r4, #4]
  400b44:	f043 0301 	orr.w	r3, r3, #1
  400b48:	6063      	str	r3, [r4, #4]
		spi_configure_cs_behavior(SPI0, 1, SPI_CS_KEEP_LOW);
  400b4a:	463a      	mov	r2, r7
  400b4c:	2101      	movs	r1, #1
  400b4e:	4620      	mov	r0, r4
  400b50:	4b35      	ldr	r3, [pc, #212]	; (400c28 <ssd1306_init+0x1b0>)
  400b52:	4798      	blx	r3
		spi_set_clock_polarity(SPI0, 1, 0);
  400b54:	2200      	movs	r2, #0
  400b56:	2101      	movs	r1, #1
  400b58:	4620      	mov	r0, r4
  400b5a:	4b34      	ldr	r3, [pc, #208]	; (400c2c <ssd1306_init+0x1b4>)
  400b5c:	4798      	blx	r3
		spi_set_clock_phase(SPI0, 1, 0);
  400b5e:	2200      	movs	r2, #0
  400b60:	2101      	movs	r1, #1
  400b62:	4620      	mov	r0, r4
  400b64:	4b32      	ldr	r3, [pc, #200]	; (400c30 <ssd1306_init+0x1b8>)
  400b66:	4798      	blx	r3
	p_spi->SPI_MR &= (~SPI_MR_PS);
  400b68:	6863      	ldr	r3, [r4, #4]
  400b6a:	f023 0302 	bic.w	r3, r3, #2
  400b6e:	6063      	str	r3, [r4, #4]
		spi_set_bits_per_transfer(SPI0, 1, SPI_CSR_BITS_8_BIT);
  400b70:	2200      	movs	r2, #0
  400b72:	2101      	movs	r1, #1
  400b74:	4620      	mov	r0, r4
  400b76:	4b2f      	ldr	r3, [pc, #188]	; (400c34 <ssd1306_init+0x1bc>)
  400b78:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_loopback(Spi *p_spi)
{
	p_spi->SPI_MR &= (~SPI_MR_LLB);
  400b7a:	6863      	ldr	r3, [r4, #4]
  400b7c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  400b80:	6063      	str	r3, [r4, #4]
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  400b82:	6863      	ldr	r3, [r4, #4]
  400b84:	f043 0310 	orr.w	r3, r3, #16
  400b88:	6063      	str	r3, [r4, #4]
		int div = spi_calc_baudrate_div(2000000, sysclk_get_peripheral_hz());
  400b8a:	492b      	ldr	r1, [pc, #172]	; (400c38 <ssd1306_init+0x1c0>)
  400b8c:	482b      	ldr	r0, [pc, #172]	; (400c3c <ssd1306_init+0x1c4>)
  400b8e:	4b2c      	ldr	r3, [pc, #176]	; (400c40 <ssd1306_init+0x1c8>)
  400b90:	4798      	blx	r3
		spi_set_baudrate_div(SPI0,1, div);
  400b92:	b2c2      	uxtb	r2, r0
  400b94:	2101      	movs	r1, #1
  400b96:	4620      	mov	r0, r4
  400b98:	4b2a      	ldr	r3, [pc, #168]	; (400c44 <ssd1306_init+0x1cc>)
  400b9a:	4798      	blx	r3
		spi_enable_clock(SPI0);
  400b9c:	4620      	mov	r0, r4
  400b9e:	4b2a      	ldr	r3, [pc, #168]	; (400c48 <ssd1306_init+0x1d0>)
  400ba0:	4798      	blx	r3
	p_spi->SPI_CR = SPI_CR_SPIEN;
  400ba2:	2301      	movs	r3, #1
  400ba4:	6023      	str	r3, [r4, #0]
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  400ba6:	636e      	str	r6, [r5, #52]	; 0x34
	delay_cycles(delay_10us); // At lest 10us
  400ba8:	f640 30b8 	movw	r0, #3000	; 0xbb8
  400bac:	4c27      	ldr	r4, [pc, #156]	; (400c4c <ssd1306_init+0x1d4>)
  400bae:	47a0      	blx	r4
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400bb0:	632e      	str	r6, [r5, #48]	; 0x30
	delay_cycles(delay_10us); // At lest 10us
  400bb2:	f640 30b8 	movw	r0, #3000	; 0xbb8
  400bb6:	47a0      	blx	r4
  400bb8:	632e      	str	r6, [r5, #48]	; 0x30
	ssd1306_write_command(SSD1306_CMD_SET_MULTIPLEX_RATIO);
  400bba:	20a8      	movs	r0, #168	; 0xa8
  400bbc:	4c24      	ldr	r4, [pc, #144]	; (400c50 <ssd1306_init+0x1d8>)
  400bbe:	47a0      	blx	r4
	ssd1306_write_command(0x1F);
  400bc0:	201f      	movs	r0, #31
  400bc2:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_OFFSET);
  400bc4:	20d3      	movs	r0, #211	; 0xd3
  400bc6:	47a0      	blx	r4
	ssd1306_write_command(0x00);
  400bc8:	2000      	movs	r0, #0
  400bca:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(0x00));
  400bcc:	2040      	movs	r0, #64	; 0x40
  400bce:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_SEGMENT_RE_MAP_COL127_SEG0);
  400bd0:	20a1      	movs	r0, #161	; 0xa1
  400bd2:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_OUTPUT_SCAN_DOWN);
  400bd4:	20c8      	movs	r0, #200	; 0xc8
  400bd6:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_PINS);
  400bd8:	20da      	movs	r0, #218	; 0xda
  400bda:	47a0      	blx	r4
	ssd1306_write_command(0x02);
  400bdc:	4648      	mov	r0, r9
  400bde:	47a0      	blx	r4
 *
 * \retval contrast the contrast value written to the OLED controller
 */
static inline uint8_t ssd1306_set_contrast(uint8_t contrast)
{
	ssd1306_write_command(SSD1306_CMD_SET_CONTRAST_CONTROL_FOR_BANK0);
  400be0:	2081      	movs	r0, #129	; 0x81
  400be2:	47a0      	blx	r4
	ssd1306_write_command(contrast);
  400be4:	208f      	movs	r0, #143	; 0x8f
  400be6:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_ENTIRE_DISPLAY_AND_GDDRAM_ON);
  400be8:	20a4      	movs	r0, #164	; 0xa4
  400bea:	47a0      	blx	r4
 * This function will disable invert on all pixels on the OLED
 *
 */
static inline void ssd1306_display_invert_disable(void)
{
	ssd1306_write_command(SSD1306_CMD_SET_NORMAL_DISPLAY);
  400bec:	20a6      	movs	r0, #166	; 0xa6
  400bee:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_CLOCK_DIVIDE_RATIO);
  400bf0:	20d5      	movs	r0, #213	; 0xd5
  400bf2:	47a0      	blx	r4
	ssd1306_write_command(0x80);
  400bf4:	4640      	mov	r0, r8
  400bf6:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_CHARGE_PUMP_SETTING);
  400bf8:	208d      	movs	r0, #141	; 0x8d
  400bfa:	47a0      	blx	r4
	ssd1306_write_command(0x14);
  400bfc:	2014      	movs	r0, #20
  400bfe:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_VCOMH_DESELECT_LEVEL);
  400c00:	20db      	movs	r0, #219	; 0xdb
  400c02:	47a0      	blx	r4
	ssd1306_write_command(0x40); // Default => 0x20 (0.77*VCC)
  400c04:	2040      	movs	r0, #64	; 0x40
  400c06:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_PRE_CHARGE_PERIOD);
  400c08:	20d9      	movs	r0, #217	; 0xd9
  400c0a:	47a0      	blx	r4
	ssd1306_write_command(0xF1);
  400c0c:	20f1      	movs	r0, #241	; 0xf1
  400c0e:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_ON);
  400c10:	20af      	movs	r0, #175	; 0xaf
  400c12:	47a0      	blx	r4
  400c14:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400c18:	400e1200 	.word	0x400e1200
  400c1c:	400e1000 	.word	0x400e1000
  400c20:	00400f75 	.word	0x00400f75
  400c24:	40008000 	.word	0x40008000
  400c28:	00400323 	.word	0x00400323
  400c2c:	004002e7 	.word	0x004002e7
  400c30:	00400305 	.word	0x00400305
  400c34:	00400369 	.word	0x00400369
  400c38:	08f0d180 	.word	0x08f0d180
  400c3c:	001e8480 	.word	0x001e8480
  400c40:	0040037d 	.word	0x0040037d
  400c44:	00400393 	.word	0x00400393
  400c48:	00400271 	.word	0x00400271
  400c4c:	20400001 	.word	0x20400001
  400c50:	00400a39 	.word	0x00400a39
  400c54:	400e1400 	.word	0x400e1400

00400c58 <ssd1306_write_data>:
 * data write function is called based on the selected interface.
 *
 * \param data the data to write
 */
void ssd1306_write_data(uint8_t data)
{
  400c58:	b538      	push	{r3, r4, r5, lr}
  400c5a:	4605      	mov	r5, r0
  400c5c:	2208      	movs	r2, #8
  400c5e:	4b09      	ldr	r3, [pc, #36]	; (400c84 <ssd1306_write_data+0x2c>)
  400c60:	631a      	str	r2, [r3, #48]	; 0x30
	ioport_set_pin_level(SSD1306_DC_PIN, true);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  400c62:	4c09      	ldr	r4, [pc, #36]	; (400c88 <ssd1306_write_data+0x30>)
  400c64:	2101      	movs	r1, #1
  400c66:	4620      	mov	r0, r4
  400c68:	4b08      	ldr	r3, [pc, #32]	; (400c8c <ssd1306_write_data+0x34>)
  400c6a:	4798      	blx	r3
	spi_write(SPI0, data, 1, 1);
  400c6c:	2301      	movs	r3, #1
  400c6e:	461a      	mov	r2, r3
  400c70:	4629      	mov	r1, r5
  400c72:	4620      	mov	r0, r4
  400c74:	4c06      	ldr	r4, [pc, #24]	; (400c90 <ssd1306_write_data+0x38>)
  400c76:	47a0      	blx	r4
	delay_us(10);
  400c78:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  400c7c:	4b05      	ldr	r3, [pc, #20]	; (400c94 <ssd1306_write_data+0x3c>)
  400c7e:	4798      	blx	r3
  400c80:	bd38      	pop	{r3, r4, r5, pc}
  400c82:	bf00      	nop
  400c84:	400e1000 	.word	0x400e1000
  400c88:	40008000 	.word	0x40008000
  400c8c:	0040029d 	.word	0x0040029d
  400c90:	004002b3 	.word	0x004002b3
  400c94:	20400001 	.word	0x20400001

00400c98 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400c98:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  400c9a:	4810      	ldr	r0, [pc, #64]	; (400cdc <sysclk_init+0x44>)
  400c9c:	4b10      	ldr	r3, [pc, #64]	; (400ce0 <sysclk_init+0x48>)
  400c9e:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400ca0:	213e      	movs	r1, #62	; 0x3e
  400ca2:	2000      	movs	r0, #0
  400ca4:	4b0f      	ldr	r3, [pc, #60]	; (400ce4 <sysclk_init+0x4c>)
  400ca6:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400ca8:	4c0f      	ldr	r4, [pc, #60]	; (400ce8 <sysclk_init+0x50>)
  400caa:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  400cac:	2800      	cmp	r0, #0
  400cae:	d0fc      	beq.n	400caa <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400cb0:	4b0e      	ldr	r3, [pc, #56]	; (400cec <sysclk_init+0x54>)
  400cb2:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400cb4:	4a0e      	ldr	r2, [pc, #56]	; (400cf0 <sysclk_init+0x58>)
  400cb6:	4b0f      	ldr	r3, [pc, #60]	; (400cf4 <sysclk_init+0x5c>)
  400cb8:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
	return pmc_is_locked_pllack();
  400cba:	4c0f      	ldr	r4, [pc, #60]	; (400cf8 <sysclk_init+0x60>)
  400cbc:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  400cbe:	2800      	cmp	r0, #0
  400cc0:	d0fc      	beq.n	400cbc <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
  400cc2:	2002      	movs	r0, #2
  400cc4:	4b0d      	ldr	r3, [pc, #52]	; (400cfc <sysclk_init+0x64>)
  400cc6:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400cc8:	2000      	movs	r0, #0
  400cca:	4b0d      	ldr	r3, [pc, #52]	; (400d00 <sysclk_init+0x68>)
  400ccc:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}
	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400cce:	4b0d      	ldr	r3, [pc, #52]	; (400d04 <sysclk_init+0x6c>)
  400cd0:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  400cd2:	4802      	ldr	r0, [pc, #8]	; (400cdc <sysclk_init+0x44>)
  400cd4:	4b02      	ldr	r3, [pc, #8]	; (400ce0 <sysclk_init+0x48>)
  400cd6:	4798      	blx	r3
  400cd8:	bd10      	pop	{r4, pc}
  400cda:	bf00      	nop
  400cdc:	11e1a300 	.word	0x11e1a300
  400ce0:	00401779 	.word	0x00401779
  400ce4:	00401205 	.word	0x00401205
  400ce8:	00401259 	.word	0x00401259
  400cec:	00401269 	.word	0x00401269
  400cf0:	20183f01 	.word	0x20183f01
  400cf4:	400e0600 	.word	0x400e0600
  400cf8:	00401279 	.word	0x00401279
  400cfc:	00401169 	.word	0x00401169
  400d00:	004011a1 	.word	0x004011a1
  400d04:	0040166d 	.word	0x0040166d

00400d08 <board_init>:
	__ISB();
}
#endif

void board_init(void)
{
  400d08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  400d0a:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400d0e:	4b48      	ldr	r3, [pc, #288]	; (400e30 <board_init+0x128>)
  400d10:	605a      	str	r2, [r3, #4]
    This function acts as a special kind of Data Memory Barrier.
    It completes when all explicit memory accesses before this instruction complete.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
{
  __ASM volatile ("dsb");
  400d12:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400d16:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache(void)
{
  #if (__ICACHE_PRESENT == 1)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0;                       // invalidate I-Cache
  400d1a:	4b46      	ldr	r3, [pc, #280]	; (400e34 <board_init+0x12c>)
  400d1c:	2200      	movs	r2, #0
  400d1e:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
    SCB->CCR |=  SCB_CCR_IC_Msk;            // enable I-Cache
  400d22:	695a      	ldr	r2, [r3, #20]
  400d24:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
  400d28:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb");
  400d2a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400d2e:	f3bf 8f6f 	isb	sy
{
  #if (__DCACHE_PRESENT == 1)
    uint32_t ccsidr, sshift, wshift, sw;
    uint32_t sets, ways;

    ccsidr  = SCB->CCSIDR;
  400d32:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80
    sets    = CCSIDR_SETS(ccsidr);
  400d36:	f3c7 364e 	ubfx	r6, r7, #13, #15
    sshift  = CCSIDR_LSSHIFT(ccsidr) + 4;
  400d3a:	f007 0007 	and.w	r0, r7, #7
  400d3e:	3004      	adds	r0, #4
    ways    = CCSIDR_WAYS(ccsidr);
  400d40:	f3c7 07c9 	ubfx	r7, r7, #3, #10
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
  400d44:	fab7 fe87 	clz	lr, r7
    wshift  = __CLZ(ways) & 0x1f;
  400d48:	f00e 0e1f 	and.w	lr, lr, #31
  __ASM volatile ("dsb");
  400d4c:	f3bf 8f4f 	dsb	sy
  400d50:	f04f 34ff 	mov.w	r4, #4294967295
  400d54:	fa04 fc00 	lsl.w	ip, r4, r0
  400d58:	fa06 f000 	lsl.w	r0, r6, r0
  400d5c:	fa04 f40e 	lsl.w	r4, r4, lr
  400d60:	fa07 fe0e 	lsl.w	lr, r7, lr

    do {                                    // invalidate D-Cache
         int32_t tmpways = ways;
         do {
              sw = ((tmpways << wshift) | (sets << sshift));
              SCB->DCISW = sw;
  400d64:	461d      	mov	r5, r3
         int32_t tmpways = ways;
  400d66:	463a      	mov	r2, r7
  400d68:	4673      	mov	r3, lr
              sw = ((tmpways << wshift) | (sets << sshift));
  400d6a:	ea40 0103 	orr.w	r1, r0, r3
              SCB->DCISW = sw;
  400d6e:	f8c5 1260 	str.w	r1, [r5, #608]	; 0x260
            } while(tmpways--);
  400d72:	3a01      	subs	r2, #1
  400d74:	4423      	add	r3, r4
  400d76:	f1b2 3fff 	cmp.w	r2, #4294967295
  400d7a:	d1f6      	bne.n	400d6a <board_init+0x62>
        } while(sets--);
  400d7c:	3e01      	subs	r6, #1
  400d7e:	4460      	add	r0, ip
  400d80:	f1b6 3fff 	cmp.w	r6, #4294967295
  400d84:	d1ef      	bne.n	400d66 <board_init+0x5e>
  400d86:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  SCB_CCR_DC_Msk;            // enable D-Cache
  400d8a:	4b2a      	ldr	r3, [pc, #168]	; (400e34 <board_init+0x12c>)
  400d8c:	695a      	ldr	r2, [r3, #20]
  400d8e:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  400d92:	615a      	str	r2, [r3, #20]
  400d94:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400d98:	f3bf 8f6f 	isb	sy
		*dst++ = *src++;
	}
#endif
#else
	/* TCM Configuration */
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400d9c:	4a26      	ldr	r2, [pc, #152]	; (400e38 <board_init+0x130>)
  400d9e:	4927      	ldr	r1, [pc, #156]	; (400e3c <board_init+0x134>)
  400da0:	6051      	str	r1, [r2, #4]
					| EEFC_FCR_FARG(8));
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400da2:	f5a1 7180 	sub.w	r1, r1, #256	; 0x100
  400da6:	6051      	str	r1, [r2, #4]
  __ASM volatile ("dsb");
  400da8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400dac:	f3bf 8f6f 	isb	sy
	SCB->ITCMCR &= ~(uint32_t)(1UL);
  400db0:	f8d3 2290 	ldr.w	r2, [r3, #656]	; 0x290
  400db4:	f022 0201 	bic.w	r2, r2, #1
  400db8:	f8c3 2290 	str.w	r2, [r3, #656]	; 0x290
	SCB->DTCMCR &= ~(uint32_t)SCB_DTCMCR_EN_Msk;
  400dbc:	f8d3 2294 	ldr.w	r2, [r3, #660]	; 0x294
  400dc0:	f022 0201 	bic.w	r2, r2, #1
  400dc4:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  __ASM volatile ("dsb");
  400dc8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400dcc:	f3bf 8f6f 	isb	sy
  400dd0:	200a      	movs	r0, #10
  400dd2:	4c1b      	ldr	r4, [pc, #108]	; (400e40 <board_init+0x138>)
  400dd4:	47a0      	blx	r4
  400dd6:	200b      	movs	r0, #11
  400dd8:	47a0      	blx	r4
  400dda:	200c      	movs	r0, #12
  400ddc:	47a0      	blx	r4
  400dde:	2010      	movs	r0, #16
  400de0:	47a0      	blx	r4
  400de2:	2011      	movs	r0, #17
  400de4:	47a0      	blx	r4
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400de6:	4b17      	ldr	r3, [pc, #92]	; (400e44 <board_init+0x13c>)
  400de8:	f44f 7280 	mov.w	r2, #256	; 0x100
  400dec:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400dee:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400df2:	631a      	str	r2, [r3, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  400df4:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
  400df8:	f44f 6200 	mov.w	r2, #2048	; 0x800
  400dfc:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400dfe:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  400e02:	665a      	str	r2, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400e04:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  400e08:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFER = mask;
  400e0a:	621a      	str	r2, [r3, #32]
		base->PIO_IFSCER = mask;
  400e0c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
		base->PIO_ABCDSR[0] &= ~mask;
  400e10:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400e12:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400e16:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400e18:	6f59      	ldr	r1, [r3, #116]	; 0x74
  400e1a:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400e1e:	6759      	str	r1, [r3, #116]	; 0x74
	case IOPORT_SENSE_FALLING:
		base->PIO_ESR = mask;
		base->PIO_FELLSR = mask;
		break;
	case IOPORT_SENSE_RISING:
		base->PIO_ESR = mask;
  400e20:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
		base->PIO_REHLSR = mask;
  400e24:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
		break;
	default:
		base->PIO_AIMDR = mask;
		return;
	}
	base->PIO_AIMER = mask;
  400e28:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
  400e2c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400e2e:	bf00      	nop
  400e30:	400e1850 	.word	0x400e1850
  400e34:	e000ed00 	.word	0xe000ed00
  400e38:	400e0c00 	.word	0x400e0c00
  400e3c:	5a00080c 	.word	0x5a00080c
  400e40:	00401289 	.word	0x00401289
  400e44:	400e1200 	.word	0x400e1200

00400e48 <pio_set_debounce_filter>:
void pio_set_debounce_filter(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_cut_off)
{
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	/* Set Debouncing, 0 bit field no effect */
	p_pio->PIO_IFSCER = ul_mask;
  400e48:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
	/*
	 * The debouncing filter can filter a pulse of less than 1/2 Period of a
	 * programmable Divided Slow Clock:
	 * Tdiv_slclk = ((DIV+1)*2).Tslow_clock
	 */
	p_pio->PIO_SCDR = PIO_SCDR_DIV((FREQ_SLOW_CLOCK_EXT /
  400e4c:	0053      	lsls	r3, r2, #1
  400e4e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400e52:	fbb2 f2f3 	udiv	r2, r2, r3
  400e56:	3a01      	subs	r2, #1
  400e58:	f3c2 020d 	ubfx	r2, r2, #0, #14
  400e5c:	f8c0 208c 	str.w	r2, [r0, #140]	; 0x8c
  400e60:	4770      	bx	lr

00400e62 <pio_set>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_SODR = ul_mask;
  400e62:	6301      	str	r1, [r0, #48]	; 0x30
  400e64:	4770      	bx	lr

00400e66 <pio_clear>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_clear(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_CODR = ul_mask;
  400e66:	6341      	str	r1, [r0, #52]	; 0x34
  400e68:	4770      	bx	lr

00400e6a <pio_get>:
uint32_t pio_get(Pio *p_pio, const pio_type_t ul_type,
		const uint32_t ul_mask)
{
	uint32_t ul_reg;

	if ((ul_type == PIO_OUTPUT_0) || (ul_type == PIO_OUTPUT_1)) {
  400e6a:	f021 6100 	bic.w	r1, r1, #134217728	; 0x8000000
  400e6e:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400e72:	d105      	bne.n	400e80 <pio_get+0x16>
		ul_reg = p_pio->PIO_ODSR;
  400e74:	6b83      	ldr	r3, [r0, #56]	; 0x38
	} else {
		ul_reg = p_pio->PIO_PDSR;
	}

	if ((ul_reg & ul_mask) == 0) {
  400e76:	4213      	tst	r3, r2
		return 0;
	} else {
		return 1;
	}
}
  400e78:	bf14      	ite	ne
  400e7a:	2001      	movne	r0, #1
  400e7c:	2000      	moveq	r0, #0
  400e7e:	4770      	bx	lr
		ul_reg = p_pio->PIO_PDSR;
  400e80:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
  400e82:	e7f8      	b.n	400e76 <pio_get+0xc>

00400e84 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  400e84:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  400e86:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400e8a:	d03a      	beq.n	400f02 <pio_set_peripheral+0x7e>
  400e8c:	d813      	bhi.n	400eb6 <pio_set_peripheral+0x32>
  400e8e:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400e92:	d025      	beq.n	400ee0 <pio_set_peripheral+0x5c>
  400e94:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400e98:	d10a      	bne.n	400eb0 <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  400e9a:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400e9c:	4313      	orrs	r3, r2
  400e9e:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400ea0:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400ea2:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400ea4:	400b      	ands	r3, r1
  400ea6:	ea23 0302 	bic.w	r3, r3, r2
  400eaa:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  400eac:	6042      	str	r2, [r0, #4]
  400eae:	4770      	bx	lr
	switch (ul_type) {
  400eb0:	2900      	cmp	r1, #0
  400eb2:	d1fb      	bne.n	400eac <pio_set_peripheral+0x28>
  400eb4:	4770      	bx	lr
  400eb6:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400eba:	d021      	beq.n	400f00 <pio_set_peripheral+0x7c>
  400ebc:	d809      	bhi.n	400ed2 <pio_set_peripheral+0x4e>
  400ebe:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400ec2:	d1f3      	bne.n	400eac <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  400ec4:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400ec6:	4313      	orrs	r3, r2
  400ec8:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400eca:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400ecc:	4313      	orrs	r3, r2
  400ece:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400ed0:	e7ec      	b.n	400eac <pio_set_peripheral+0x28>
	switch (ul_type) {
  400ed2:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400ed6:	d013      	beq.n	400f00 <pio_set_peripheral+0x7c>
  400ed8:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400edc:	d010      	beq.n	400f00 <pio_set_peripheral+0x7c>
  400ede:	e7e5      	b.n	400eac <pio_set_peripheral+0x28>
{
  400ee0:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  400ee2:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400ee4:	6f04      	ldr	r4, [r0, #112]	; 0x70
  400ee6:	43d3      	mvns	r3, r2
  400ee8:	4021      	ands	r1, r4
  400eea:	461c      	mov	r4, r3
  400eec:	4019      	ands	r1, r3
  400eee:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400ef0:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400ef2:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400ef4:	400b      	ands	r3, r1
  400ef6:	4023      	ands	r3, r4
  400ef8:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  400efa:	6042      	str	r2, [r0, #4]
}
  400efc:	f85d 4b04 	ldr.w	r4, [sp], #4
  400f00:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400f02:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400f04:	6f01      	ldr	r1, [r0, #112]	; 0x70
  400f06:	400b      	ands	r3, r1
  400f08:	ea23 0302 	bic.w	r3, r3, r2
  400f0c:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400f0e:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400f10:	4313      	orrs	r3, r2
  400f12:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400f14:	e7ca      	b.n	400eac <pio_set_peripheral+0x28>

00400f16 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400f16:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400f18:	f012 0f01 	tst.w	r2, #1
  400f1c:	d10d      	bne.n	400f3a <pio_set_input+0x24>
		p_pio->PIO_PUDR = ul_mask;
  400f1e:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400f20:	f012 0f0a 	tst.w	r2, #10
  400f24:	d00b      	beq.n	400f3e <pio_set_input+0x28>
		p_pio->PIO_IFER = ul_mask;
  400f26:	6201      	str	r1, [r0, #32]
	if (ul_attribute & PIO_DEGLITCH) {
  400f28:	f012 0f02 	tst.w	r2, #2
  400f2c:	d109      	bne.n	400f42 <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  400f2e:	f012 0f08 	tst.w	r2, #8
  400f32:	d008      	beq.n	400f46 <pio_set_input+0x30>
			p_pio->PIO_IFSCER = ul_mask;
  400f34:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
  400f38:	e005      	b.n	400f46 <pio_set_input+0x30>
		p_pio->PIO_PUER = ul_mask;
  400f3a:	6641      	str	r1, [r0, #100]	; 0x64
  400f3c:	e7f0      	b.n	400f20 <pio_set_input+0xa>
		p_pio->PIO_IFDR = ul_mask;
  400f3e:	6241      	str	r1, [r0, #36]	; 0x24
  400f40:	e7f2      	b.n	400f28 <pio_set_input+0x12>
		p_pio->PIO_IFSCDR = ul_mask;
  400f42:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
	p_pio->PIO_ODR = ul_mask;
  400f46:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400f48:	6001      	str	r1, [r0, #0]
  400f4a:	4770      	bx	lr

00400f4c <pio_set_output>:
{
  400f4c:	b410      	push	{r4}
  400f4e:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  400f50:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400f52:	b94c      	cbnz	r4, 400f68 <pio_set_output+0x1c>
		p_pio->PIO_PUDR = ul_mask;
  400f54:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400f56:	b14b      	cbz	r3, 400f6c <pio_set_output+0x20>
		p_pio->PIO_MDER = ul_mask;
  400f58:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  400f5a:	b94a      	cbnz	r2, 400f70 <pio_set_output+0x24>
		p_pio->PIO_CODR = ul_mask;
  400f5c:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  400f5e:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400f60:	6001      	str	r1, [r0, #0]
}
  400f62:	f85d 4b04 	ldr.w	r4, [sp], #4
  400f66:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400f68:	6641      	str	r1, [r0, #100]	; 0x64
  400f6a:	e7f4      	b.n	400f56 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  400f6c:	6541      	str	r1, [r0, #84]	; 0x54
  400f6e:	e7f4      	b.n	400f5a <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  400f70:	6301      	str	r1, [r0, #48]	; 0x30
  400f72:	e7f4      	b.n	400f5e <pio_set_output+0x12>

00400f74 <pio_configure>:
{
  400f74:	b570      	push	{r4, r5, r6, lr}
  400f76:	b082      	sub	sp, #8
  400f78:	4605      	mov	r5, r0
  400f7a:	4616      	mov	r6, r2
  400f7c:	461c      	mov	r4, r3
	switch (ul_type) {
  400f7e:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400f82:	d014      	beq.n	400fae <pio_configure+0x3a>
  400f84:	d90a      	bls.n	400f9c <pio_configure+0x28>
  400f86:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400f8a:	d024      	beq.n	400fd6 <pio_configure+0x62>
  400f8c:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400f90:	d021      	beq.n	400fd6 <pio_configure+0x62>
  400f92:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400f96:	d017      	beq.n	400fc8 <pio_configure+0x54>
		return 0;
  400f98:	2000      	movs	r0, #0
  400f9a:	e01a      	b.n	400fd2 <pio_configure+0x5e>
	switch (ul_type) {
  400f9c:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400fa0:	d005      	beq.n	400fae <pio_configure+0x3a>
  400fa2:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400fa6:	d002      	beq.n	400fae <pio_configure+0x3a>
  400fa8:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400fac:	d1f4      	bne.n	400f98 <pio_configure+0x24>
		pio_set_peripheral(p_pio, ul_type, ul_mask);
  400fae:	4632      	mov	r2, r6
  400fb0:	4628      	mov	r0, r5
  400fb2:	4b11      	ldr	r3, [pc, #68]	; (400ff8 <pio_configure+0x84>)
  400fb4:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400fb6:	f014 0f01 	tst.w	r4, #1
  400fba:	d102      	bne.n	400fc2 <pio_configure+0x4e>
		p_pio->PIO_PUDR = ul_mask;
  400fbc:	662e      	str	r6, [r5, #96]	; 0x60
	return 1;
  400fbe:	2001      	movs	r0, #1
  400fc0:	e007      	b.n	400fd2 <pio_configure+0x5e>
		p_pio->PIO_PUER = ul_mask;
  400fc2:	666e      	str	r6, [r5, #100]	; 0x64
	return 1;
  400fc4:	2001      	movs	r0, #1
  400fc6:	e004      	b.n	400fd2 <pio_configure+0x5e>
		pio_set_input(p_pio, ul_mask, ul_attribute);
  400fc8:	461a      	mov	r2, r3
  400fca:	4631      	mov	r1, r6
  400fcc:	4b0b      	ldr	r3, [pc, #44]	; (400ffc <pio_configure+0x88>)
  400fce:	4798      	blx	r3
	return 1;
  400fd0:	2001      	movs	r0, #1
}
  400fd2:	b002      	add	sp, #8
  400fd4:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_output(p_pio, ul_mask, (ul_type == PIO_OUTPUT_1),
  400fd6:	f004 0301 	and.w	r3, r4, #1
  400fda:	9300      	str	r3, [sp, #0]
  400fdc:	f3c4 0380 	ubfx	r3, r4, #2, #1
  400fe0:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400fe4:	bf14      	ite	ne
  400fe6:	2200      	movne	r2, #0
  400fe8:	2201      	moveq	r2, #1
  400fea:	4631      	mov	r1, r6
  400fec:	4628      	mov	r0, r5
  400fee:	4c04      	ldr	r4, [pc, #16]	; (401000 <pio_configure+0x8c>)
  400ff0:	47a0      	blx	r4
	return 1;
  400ff2:	2001      	movs	r0, #1
		break;
  400ff4:	e7ed      	b.n	400fd2 <pio_configure+0x5e>
  400ff6:	bf00      	nop
  400ff8:	00400e85 	.word	0x00400e85
  400ffc:	00400f17 	.word	0x00400f17
  401000:	00400f4d 	.word	0x00400f4d

00401004 <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
  401004:	f012 0f10 	tst.w	r2, #16
  401008:	d012      	beq.n	401030 <pio_configure_interrupt+0x2c>
		p_pio->PIO_AIMER = ul_mask;
  40100a:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
  40100e:	f012 0f20 	tst.w	r2, #32
  401012:	d007      	beq.n	401024 <pio_configure_interrupt+0x20>
			p_pio->PIO_REHLSR = ul_mask;
  401014:	f8c0 10d4 	str.w	r1, [r0, #212]	; 0xd4
		if (ul_attr & PIO_IT_EDGE) {
  401018:	f012 0f40 	tst.w	r2, #64	; 0x40
  40101c:	d005      	beq.n	40102a <pio_configure_interrupt+0x26>
			p_pio->PIO_ESR = ul_mask;
  40101e:	f8c0 10c0 	str.w	r1, [r0, #192]	; 0xc0
  401022:	4770      	bx	lr
			p_pio->PIO_FELLSR = ul_mask;
  401024:	f8c0 10d0 	str.w	r1, [r0, #208]	; 0xd0
  401028:	e7f6      	b.n	401018 <pio_configure_interrupt+0x14>
			p_pio->PIO_LSR = ul_mask;
  40102a:	f8c0 10c4 	str.w	r1, [r0, #196]	; 0xc4
  40102e:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
  401030:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  401034:	4770      	bx	lr

00401036 <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
  401036:	6401      	str	r1, [r0, #64]	; 0x40
  401038:	4770      	bx	lr

0040103a <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  40103a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  40103c:	4770      	bx	lr

0040103e <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  40103e:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  401040:	4770      	bx	lr
	...

00401044 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  401044:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401048:	4604      	mov	r4, r0
  40104a:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  40104c:	4b0e      	ldr	r3, [pc, #56]	; (401088 <pio_handler_process+0x44>)
  40104e:	4798      	blx	r3
  401050:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  401052:	4620      	mov	r0, r4
  401054:	4b0d      	ldr	r3, [pc, #52]	; (40108c <pio_handler_process+0x48>)
  401056:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  401058:	4005      	ands	r5, r0
  40105a:	d013      	beq.n	401084 <pio_handler_process+0x40>
  40105c:	4c0c      	ldr	r4, [pc, #48]	; (401090 <pio_handler_process+0x4c>)
  40105e:	f104 0660 	add.w	r6, r4, #96	; 0x60
  401062:	e003      	b.n	40106c <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  401064:	42b4      	cmp	r4, r6
  401066:	d00d      	beq.n	401084 <pio_handler_process+0x40>
  401068:	3410      	adds	r4, #16
		while (status != 0) {
  40106a:	b15d      	cbz	r5, 401084 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  40106c:	6820      	ldr	r0, [r4, #0]
  40106e:	4540      	cmp	r0, r8
  401070:	d1f8      	bne.n	401064 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  401072:	6861      	ldr	r1, [r4, #4]
  401074:	4229      	tst	r1, r5
  401076:	d0f5      	beq.n	401064 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  401078:	68e3      	ldr	r3, [r4, #12]
  40107a:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  40107c:	6863      	ldr	r3, [r4, #4]
  40107e:	ea25 0503 	bic.w	r5, r5, r3
  401082:	e7ef      	b.n	401064 <pio_handler_process+0x20>
  401084:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401088:	0040103b 	.word	0x0040103b
  40108c:	0040103f 	.word	0x0040103f
  401090:	20400bf4 	.word	0x20400bf4

00401094 <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  401094:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  401096:	4c18      	ldr	r4, [pc, #96]	; (4010f8 <pio_handler_set+0x64>)
  401098:	6826      	ldr	r6, [r4, #0]
  40109a:	2e06      	cmp	r6, #6
  40109c:	d82a      	bhi.n	4010f4 <pio_handler_set+0x60>
  40109e:	f04f 0c00 	mov.w	ip, #0
  4010a2:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  4010a4:	4f15      	ldr	r7, [pc, #84]	; (4010fc <pio_handler_set+0x68>)
  4010a6:	e004      	b.n	4010b2 <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  4010a8:	3401      	adds	r4, #1
  4010aa:	b2e4      	uxtb	r4, r4
  4010ac:	46a4      	mov	ip, r4
  4010ae:	42a6      	cmp	r6, r4
  4010b0:	d309      	bcc.n	4010c6 <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
  4010b2:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  4010b4:	0125      	lsls	r5, r4, #4
  4010b6:	597d      	ldr	r5, [r7, r5]
  4010b8:	428d      	cmp	r5, r1
  4010ba:	d1f5      	bne.n	4010a8 <pio_handler_set+0x14>
  4010bc:	eb07 1504 	add.w	r5, r7, r4, lsl #4
  4010c0:	686d      	ldr	r5, [r5, #4]
  4010c2:	4295      	cmp	r5, r2
  4010c4:	d1f0      	bne.n	4010a8 <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  4010c6:	4d0d      	ldr	r5, [pc, #52]	; (4010fc <pio_handler_set+0x68>)
  4010c8:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
  4010cc:	eb05 040e 	add.w	r4, r5, lr
  4010d0:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
  4010d4:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
  4010d6:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
  4010d8:	9906      	ldr	r1, [sp, #24]
  4010da:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
  4010dc:	3601      	adds	r6, #1
  4010de:	4566      	cmp	r6, ip
  4010e0:	d005      	beq.n	4010ee <pio_handler_set+0x5a>
  4010e2:	4611      	mov	r1, r2
		gs_ul_nb_sources++;
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  4010e4:	461a      	mov	r2, r3
  4010e6:	4b06      	ldr	r3, [pc, #24]	; (401100 <pio_handler_set+0x6c>)
  4010e8:	4798      	blx	r3

	return 0;
  4010ea:	2000      	movs	r0, #0
  4010ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		gs_ul_nb_sources++;
  4010ee:	4902      	ldr	r1, [pc, #8]	; (4010f8 <pio_handler_set+0x64>)
  4010f0:	600e      	str	r6, [r1, #0]
  4010f2:	e7f6      	b.n	4010e2 <pio_handler_set+0x4e>
		return 1;
  4010f4:	2001      	movs	r0, #1
}
  4010f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4010f8:	20400c64 	.word	0x20400c64
  4010fc:	20400bf4 	.word	0x20400bf4
  401100:	00401005 	.word	0x00401005

00401104 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  401104:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  401106:	210a      	movs	r1, #10
  401108:	4801      	ldr	r0, [pc, #4]	; (401110 <PIOA_Handler+0xc>)
  40110a:	4b02      	ldr	r3, [pc, #8]	; (401114 <PIOA_Handler+0x10>)
  40110c:	4798      	blx	r3
  40110e:	bd08      	pop	{r3, pc}
  401110:	400e0e00 	.word	0x400e0e00
  401114:	00401045 	.word	0x00401045

00401118 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  401118:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  40111a:	210b      	movs	r1, #11
  40111c:	4801      	ldr	r0, [pc, #4]	; (401124 <PIOB_Handler+0xc>)
  40111e:	4b02      	ldr	r3, [pc, #8]	; (401128 <PIOB_Handler+0x10>)
  401120:	4798      	blx	r3
  401122:	bd08      	pop	{r3, pc}
  401124:	400e1000 	.word	0x400e1000
  401128:	00401045 	.word	0x00401045

0040112c <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  40112c:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  40112e:	210c      	movs	r1, #12
  401130:	4801      	ldr	r0, [pc, #4]	; (401138 <PIOC_Handler+0xc>)
  401132:	4b02      	ldr	r3, [pc, #8]	; (40113c <PIOC_Handler+0x10>)
  401134:	4798      	blx	r3
  401136:	bd08      	pop	{r3, pc}
  401138:	400e1200 	.word	0x400e1200
  40113c:	00401045 	.word	0x00401045

00401140 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
  401140:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
  401142:	2110      	movs	r1, #16
  401144:	4801      	ldr	r0, [pc, #4]	; (40114c <PIOD_Handler+0xc>)
  401146:	4b02      	ldr	r3, [pc, #8]	; (401150 <PIOD_Handler+0x10>)
  401148:	4798      	blx	r3
  40114a:	bd08      	pop	{r3, pc}
  40114c:	400e1400 	.word	0x400e1400
  401150:	00401045 	.word	0x00401045

00401154 <PIOE_Handler>:
/**
 * \brief Parallel IO Controller E interrupt handler.
 * Redefined PIOE interrupt handler for NVIC interrupt table.
 */
void PIOE_Handler(void)
{
  401154:	b508      	push	{r3, lr}
	pio_handler_process(PIOE, ID_PIOE);
  401156:	2111      	movs	r1, #17
  401158:	4801      	ldr	r0, [pc, #4]	; (401160 <PIOE_Handler+0xc>)
  40115a:	4b02      	ldr	r3, [pc, #8]	; (401164 <PIOE_Handler+0x10>)
  40115c:	4798      	blx	r3
  40115e:	bd08      	pop	{r3, pc}
  401160:	400e1600 	.word	0x400e1600
  401164:	00401045 	.word	0x00401045

00401168 <pmc_mck_set_division>:
 *
 * \param ul_div Division value.
 */
void pmc_mck_set_division(uint32_t ul_div)
{
	switch (ul_div) {
  401168:	2803      	cmp	r0, #3
  40116a:	d011      	beq.n	401190 <pmc_mck_set_division+0x28>
  40116c:	2804      	cmp	r0, #4
  40116e:	d012      	beq.n	401196 <pmc_mck_set_division+0x2e>
		case 1:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
  401170:	2802      	cmp	r0, #2
  401172:	bf0c      	ite	eq
  401174:	f44f 7180 	moveq.w	r1, #256	; 0x100
  401178:	2100      	movne	r1, #0
		default:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
			break;
	}
	PMC->PMC_MCKR =
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  40117a:	4a08      	ldr	r2, [pc, #32]	; (40119c <pmc_mck_set_division+0x34>)
  40117c:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40117e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  401182:	430b      	orrs	r3, r1
	PMC->PMC_MCKR =
  401184:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  401186:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401188:	f013 0f08 	tst.w	r3, #8
  40118c:	d0fb      	beq.n	401186 <pmc_mck_set_division+0x1e>
}
  40118e:	4770      	bx	lr
			ul_div = PMC_MCKR_MDIV_PCK_DIV3;
  401190:	f44f 7140 	mov.w	r1, #768	; 0x300
			break;
  401194:	e7f1      	b.n	40117a <pmc_mck_set_division+0x12>
			ul_div = PMC_MCKR_MDIV_PCK_DIV4;
  401196:	f44f 7100 	mov.w	r1, #512	; 0x200
			break;
  40119a:	e7ee      	b.n	40117a <pmc_mck_set_division+0x12>
  40119c:	400e0600 	.word	0x400e0600

004011a0 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  4011a0:	4a17      	ldr	r2, [pc, #92]	; (401200 <pmc_switch_mck_to_pllack+0x60>)
  4011a2:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4011a4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  4011a8:	4318      	orrs	r0, r3
  4011aa:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  4011ac:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4011ae:	f013 0f08 	tst.w	r3, #8
  4011b2:	d10a      	bne.n	4011ca <pmc_switch_mck_to_pllack+0x2a>
  4011b4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  4011b8:	4911      	ldr	r1, [pc, #68]	; (401200 <pmc_switch_mck_to_pllack+0x60>)
  4011ba:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  4011bc:	f012 0f08 	tst.w	r2, #8
  4011c0:	d103      	bne.n	4011ca <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  4011c2:	3b01      	subs	r3, #1
  4011c4:	d1f9      	bne.n	4011ba <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  4011c6:	2001      	movs	r0, #1
  4011c8:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  4011ca:	4a0d      	ldr	r2, [pc, #52]	; (401200 <pmc_switch_mck_to_pllack+0x60>)
  4011cc:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4011ce:	f023 0303 	bic.w	r3, r3, #3
  4011d2:	f043 0302 	orr.w	r3, r3, #2
  4011d6:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  4011d8:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4011da:	f013 0f08 	tst.w	r3, #8
  4011de:	d10a      	bne.n	4011f6 <pmc_switch_mck_to_pllack+0x56>
  4011e0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  4011e4:	4906      	ldr	r1, [pc, #24]	; (401200 <pmc_switch_mck_to_pllack+0x60>)
  4011e6:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  4011e8:	f012 0f08 	tst.w	r2, #8
  4011ec:	d105      	bne.n	4011fa <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  4011ee:	3b01      	subs	r3, #1
  4011f0:	d1f9      	bne.n	4011e6 <pmc_switch_mck_to_pllack+0x46>
			return 1;
  4011f2:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  4011f4:	4770      	bx	lr
	return 0;
  4011f6:	2000      	movs	r0, #0
  4011f8:	4770      	bx	lr
  4011fa:	2000      	movs	r0, #0
  4011fc:	4770      	bx	lr
  4011fe:	bf00      	nop
  401200:	400e0600 	.word	0x400e0600

00401204 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  401204:	b9a0      	cbnz	r0, 401230 <pmc_switch_mainck_to_xtal+0x2c>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  401206:	480e      	ldr	r0, [pc, #56]	; (401240 <pmc_switch_mainck_to_xtal+0x3c>)
  401208:	6a03      	ldr	r3, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  40120a:	0209      	lsls	r1, r1, #8
  40120c:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  40120e:	4a0d      	ldr	r2, [pc, #52]	; (401244 <pmc_switch_mainck_to_xtal+0x40>)
  401210:	401a      	ands	r2, r3
  401212:	4b0d      	ldr	r3, [pc, #52]	; (401248 <pmc_switch_mainck_to_xtal+0x44>)
  401214:	4313      	orrs	r3, r2
  401216:	4319      	orrs	r1, r3
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  401218:	6201      	str	r1, [r0, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  40121a:	4602      	mov	r2, r0
  40121c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40121e:	f013 0f01 	tst.w	r3, #1
  401222:	d0fb      	beq.n	40121c <pmc_switch_mainck_to_xtal+0x18>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  401224:	4a06      	ldr	r2, [pc, #24]	; (401240 <pmc_switch_mainck_to_xtal+0x3c>)
  401226:	6a11      	ldr	r1, [r2, #32]
  401228:	4b08      	ldr	r3, [pc, #32]	; (40124c <pmc_switch_mainck_to_xtal+0x48>)
  40122a:	430b      	orrs	r3, r1
  40122c:	6213      	str	r3, [r2, #32]
  40122e:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401230:	4903      	ldr	r1, [pc, #12]	; (401240 <pmc_switch_mainck_to_xtal+0x3c>)
  401232:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  401234:	4a06      	ldr	r2, [pc, #24]	; (401250 <pmc_switch_mainck_to_xtal+0x4c>)
  401236:	401a      	ands	r2, r3
  401238:	4b06      	ldr	r3, [pc, #24]	; (401254 <pmc_switch_mainck_to_xtal+0x50>)
  40123a:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  40123c:	620b      	str	r3, [r1, #32]
  40123e:	4770      	bx	lr
  401240:	400e0600 	.word	0x400e0600
  401244:	ffc8fffc 	.word	0xffc8fffc
  401248:	00370001 	.word	0x00370001
  40124c:	01370000 	.word	0x01370000
  401250:	fec8fffc 	.word	0xfec8fffc
  401254:	01370002 	.word	0x01370002

00401258 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  401258:	4b02      	ldr	r3, [pc, #8]	; (401264 <pmc_osc_is_ready_mainck+0xc>)
  40125a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  40125c:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  401260:	4770      	bx	lr
  401262:	bf00      	nop
  401264:	400e0600 	.word	0x400e0600

00401268 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  401268:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  40126c:	4b01      	ldr	r3, [pc, #4]	; (401274 <pmc_disable_pllack+0xc>)
  40126e:	629a      	str	r2, [r3, #40]	; 0x28
  401270:	4770      	bx	lr
  401272:	bf00      	nop
  401274:	400e0600 	.word	0x400e0600

00401278 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  401278:	4b02      	ldr	r3, [pc, #8]	; (401284 <pmc_is_locked_pllack+0xc>)
  40127a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  40127c:	f000 0002 	and.w	r0, r0, #2
  401280:	4770      	bx	lr
  401282:	bf00      	nop
  401284:	400e0600 	.word	0x400e0600

00401288 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  401288:	283f      	cmp	r0, #63	; 0x3f
  40128a:	d81e      	bhi.n	4012ca <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  40128c:	281f      	cmp	r0, #31
  40128e:	d80c      	bhi.n	4012aa <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  401290:	4b11      	ldr	r3, [pc, #68]	; (4012d8 <pmc_enable_periph_clk+0x50>)
  401292:	699a      	ldr	r2, [r3, #24]
  401294:	2301      	movs	r3, #1
  401296:	4083      	lsls	r3, r0
  401298:	4393      	bics	r3, r2
  40129a:	d018      	beq.n	4012ce <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  40129c:	2301      	movs	r3, #1
  40129e:	fa03 f000 	lsl.w	r0, r3, r0
  4012a2:	4b0d      	ldr	r3, [pc, #52]	; (4012d8 <pmc_enable_periph_clk+0x50>)
  4012a4:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  4012a6:	2000      	movs	r0, #0
  4012a8:	4770      	bx	lr
		ul_id -= 32;
  4012aa:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  4012ac:	4b0a      	ldr	r3, [pc, #40]	; (4012d8 <pmc_enable_periph_clk+0x50>)
  4012ae:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  4012b2:	2301      	movs	r3, #1
  4012b4:	4083      	lsls	r3, r0
  4012b6:	4393      	bics	r3, r2
  4012b8:	d00b      	beq.n	4012d2 <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  4012ba:	2301      	movs	r3, #1
  4012bc:	fa03 f000 	lsl.w	r0, r3, r0
  4012c0:	4b05      	ldr	r3, [pc, #20]	; (4012d8 <pmc_enable_periph_clk+0x50>)
  4012c2:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  4012c6:	2000      	movs	r0, #0
  4012c8:	4770      	bx	lr
		return 1;
  4012ca:	2001      	movs	r0, #1
  4012cc:	4770      	bx	lr
	return 0;
  4012ce:	2000      	movs	r0, #0
  4012d0:	4770      	bx	lr
  4012d2:	2000      	movs	r0, #0
}
  4012d4:	4770      	bx	lr
  4012d6:	bf00      	nop
  4012d8:	400e0600 	.word	0x400e0600

004012dc <pmc_set_flash_in_wait_mode>:
 *
 * \param ul_flash_state PMC_WAIT_MODE_FLASH_STANDBY flash in standby mode,
 * PMC_WAIT_MODE_FLASH_DEEP_POWERDOWN flash in deep power down mode.
 */
void pmc_set_flash_in_wait_mode(uint32_t ul_flash_state)
{
  4012dc:	4770      	bx	lr
	...

004012e0 <pmc_enable_waitmode>:
void pmc_enable_waitmode(void)
{
	uint32_t i;

	/* Flash in wait mode */
	i = PMC->PMC_FSMR;
  4012e0:	4a10      	ldr	r2, [pc, #64]	; (401324 <pmc_enable_waitmode+0x44>)
  4012e2:	6f13      	ldr	r3, [r2, #112]	; 0x70
	i &= ~PMC_FSMR_FLPM_Msk;
  4012e4:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
#if !(SAMV71 || SAMV70 || SAME70 || SAMS70)
	i |= ul_flash_in_wait_mode;
#else
	i |= PMC_WAIT_MODE_FLASH_IDLE;
  4012e8:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
#endif
	PMC->PMC_FSMR = i;
  4012ec:	6713      	str	r3, [r2, #112]	; 0x70

	/* Set the WAITMODE bit = 1 */
	PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_WAITMODE;
  4012ee:	6a11      	ldr	r1, [r2, #32]
  4012f0:	4b0d      	ldr	r3, [pc, #52]	; (401328 <pmc_enable_waitmode+0x48>)
  4012f2:	430b      	orrs	r3, r1
  4012f4:	6213      	str	r3, [r2, #32]

	/* Waiting for Master Clock Ready MCKRDY = 1 */
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  4012f6:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4012f8:	f013 0f08 	tst.w	r3, #8
  4012fc:	d0fb      	beq.n	4012f6 <pmc_enable_waitmode+0x16>
  4012fe:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
  __ASM volatile ("nop");
  401302:	bf00      	nop

	/* Waiting for MOSCRCEN bit cleared is strongly recommended
	 * to ensure that the core will not execute undesired instructions
	 */
	for (i = 0; i < 500; i++) {
  401304:	3b01      	subs	r3, #1
  401306:	d1fc      	bne.n	401302 <pmc_enable_waitmode+0x22>
		__NOP();
	}
	while (!(PMC->CKGR_MOR & CKGR_MOR_MOSCRCEN));
  401308:	4a06      	ldr	r2, [pc, #24]	; (401324 <pmc_enable_waitmode+0x44>)
  40130a:	6a13      	ldr	r3, [r2, #32]
  40130c:	f013 0f08 	tst.w	r3, #8
  401310:	d0fb      	beq.n	40130a <pmc_enable_waitmode+0x2a>

#if (!SAMG)
	/* Restore Flash in idle mode */
	i = PMC->PMC_FSMR;
  401312:	4a04      	ldr	r2, [pc, #16]	; (401324 <pmc_enable_waitmode+0x44>)
  401314:	6f13      	ldr	r3, [r2, #112]	; 0x70
	i &= ~PMC_FSMR_FLPM_Msk;
  401316:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
	i |= PMC_WAIT_MODE_FLASH_IDLE;
  40131a:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
	PMC->PMC_FSMR = i;
  40131e:	6713      	str	r3, [r2, #112]	; 0x70
  401320:	4770      	bx	lr
  401322:	bf00      	nop
  401324:	400e0600 	.word	0x400e0600
  401328:	00370004 	.word	0x00370004

0040132c <pmc_sleep>:
static volatile bool b_is_sleep_clock_used = false;
/** Callback invoked once when clocks are restored */
static pmc_callback_wakeup_clocks_restored_t callback_clocks_restored = NULL;

void pmc_sleep(int sleep_mode)
{
  40132c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	switch (sleep_mode) {
  401330:	1e43      	subs	r3, r0, #1
  401332:	2b04      	cmp	r3, #4
  401334:	f200 8107 	bhi.w	401546 <pmc_sleep+0x21a>
  401338:	e8df f013 	tbh	[pc, r3, lsl #1]
  40133c:	00050005 	.word	0x00050005
  401340:	00150015 	.word	0x00150015
  401344:	00f6      	.short	0x00f6
	case SAM_PM_SMODE_SLEEP_WFI:
	case SAM_PM_SMODE_SLEEP_WFE:
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG || SAMV71 || SAMV70 || SAMS70 || SAME70)
		SCB->SCR &= (uint32_t)~SCR_SLEEPDEEP;
  401346:	4a81      	ldr	r2, [pc, #516]	; (40154c <pmc_sleep+0x220>)
  401348:	6913      	ldr	r3, [r2, #16]
  40134a:	f023 0304 	bic.w	r3, r3, #4
  40134e:	6113      	str	r3, [r2, #16]
		cpu_irq_enable();
  401350:	2201      	movs	r2, #1
  401352:	4b7f      	ldr	r3, [pc, #508]	; (401550 <pmc_sleep+0x224>)
  401354:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  401356:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
  40135a:	b662      	cpsie	i
  __ASM volatile ("dsb");
  40135c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("wfi");
  401360:	bf30      	wfi
  401362:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  401366:	4604      	mov	r4, r0
#if defined(EFC1)
		uint32_t fmr1;
#endif
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG || SAMV71 || SAMV70 || SAMS70 || SAME70)
		(sleep_mode == SAM_PM_SMODE_WAIT_FAST) ?
				pmc_set_flash_in_wait_mode(PMC_FSMR_FLPM_FLASH_STANDBY) :
  401368:	2803      	cmp	r0, #3
  40136a:	bf0c      	ite	eq
  40136c:	2000      	moveq	r0, #0
				pmc_set_flash_in_wait_mode(PMC_FSMR_FLPM_FLASH_DEEP_POWERDOWN);
  40136e:	f44f 1000 	movne.w	r0, #2097152	; 0x200000
  401372:	4b78      	ldr	r3, [pc, #480]	; (401554 <pmc_sleep+0x228>)
  401374:	4798      	blx	r3
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
  401376:	b672      	cpsid	i
  __ASM volatile ("dmb");
  401378:	f3bf 8f5f 	dmb	sy
#endif
		cpu_irq_disable();
  40137c:	2200      	movs	r2, #0
  40137e:	4b74      	ldr	r3, [pc, #464]	; (401550 <pmc_sleep+0x224>)
  401380:	701a      	strb	r2, [r3, #0]
		b_is_sleep_clock_used = true;
  401382:	2201      	movs	r2, #1
  401384:	4b74      	ldr	r3, [pc, #464]	; (401558 <pmc_sleep+0x22c>)
  401386:	701a      	strb	r2, [r3, #0]
	uint32_t mor  = PMC->CKGR_MOR;
  401388:	4b74      	ldr	r3, [pc, #464]	; (40155c <pmc_sleep+0x230>)
  40138a:	6a1f      	ldr	r7, [r3, #32]
	uint32_t mckr = PMC->PMC_MCKR;
  40138c:	6b1d      	ldr	r5, [r3, #48]	; 0x30
	uint32_t fmr  = EFC0->EEFC_FMR;
  40138e:	4a74      	ldr	r2, [pc, #464]	; (401560 <pmc_sleep+0x234>)
  401390:	f8d2 8000 	ldr.w	r8, [r2]
		*p_pll0_setting = PMC->CKGR_PLLAR;
  401394:	6a9e      	ldr	r6, [r3, #40]	; 0x28
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor | CKGR_MOR_MOSCRCEN;
  401396:	4a73      	ldr	r2, [pc, #460]	; (401564 <pmc_sleep+0x238>)
  401398:	433a      	orrs	r2, r7
  40139a:	621a      	str	r2, [r3, #32]
	if ((mckr & PMC_MCKR_CSS_Msk) > PMC_MCKR_CSS_MAIN_CLK) {
  40139c:	f005 0903 	and.w	r9, r5, #3
  4013a0:	f1b9 0f01 	cmp.w	r9, #1
  4013a4:	f240 8089 	bls.w	4014ba <pmc_sleep+0x18e>
		mckr = (mckr & (~PMC_MCKR_CSS_Msk)) | PMC_MCKR_CSS_MAIN_CLK;
  4013a8:	f025 0103 	bic.w	r1, r5, #3
  4013ac:	f041 0101 	orr.w	r1, r1, #1
		PMC->PMC_MCKR = mckr;
  4013b0:	6319      	str	r1, [r3, #48]	; 0x30
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
  4013b2:	461a      	mov	r2, r3
  4013b4:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4013b6:	f013 0f08 	tst.w	r3, #8
  4013ba:	d0fb      	beq.n	4013b4 <pmc_sleep+0x88>
	if (mckr & PMC_MCKR_PRES_Msk) {
  4013bc:	f011 0f70 	tst.w	r1, #112	; 0x70
  4013c0:	d008      	beq.n	4013d4 <pmc_sleep+0xa8>
		mckr = (mckr & (~PMC_MCKR_PRES_Msk));
  4013c2:	f021 0170 	bic.w	r1, r1, #112	; 0x70
		PMC->PMC_MCKR = mckr;
  4013c6:	4b65      	ldr	r3, [pc, #404]	; (40155c <pmc_sleep+0x230>)
  4013c8:	6319      	str	r1, [r3, #48]	; 0x30
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
  4013ca:	461a      	mov	r2, r3
  4013cc:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4013ce:	f013 0f08 	tst.w	r3, #8
  4013d2:	d0fb      	beq.n	4013cc <pmc_sleep+0xa0>
	pmc_disable_pllack();
  4013d4:	4b64      	ldr	r3, [pc, #400]	; (401568 <pmc_sleep+0x23c>)
  4013d6:	4798      	blx	r3
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  4013d8:	4a60      	ldr	r2, [pc, #384]	; (40155c <pmc_sleep+0x230>)
  4013da:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4013dc:	f413 3f00 	tst.w	r3, #131072	; 0x20000
  4013e0:	d0fb      	beq.n	4013da <pmc_sleep+0xae>
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCSEL) |
  4013e2:	4a5e      	ldr	r2, [pc, #376]	; (40155c <pmc_sleep+0x230>)
  4013e4:	6a11      	ldr	r1, [r2, #32]
  4013e6:	4b61      	ldr	r3, [pc, #388]	; (40156c <pmc_sleep+0x240>)
  4013e8:	400b      	ands	r3, r1
  4013ea:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  4013ee:	6213      	str	r3, [r2, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
  4013f0:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4013f2:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  4013f6:	d0fb      	beq.n	4013f0 <pmc_sleep+0xc4>
	EFC0->EEFC_FMR = fmr & (~EEFC_FMR_FWS_Msk);
  4013f8:	f428 6370 	bic.w	r3, r8, #3840	; 0xf00
  4013fc:	4a58      	ldr	r2, [pc, #352]	; (401560 <pmc_sleep+0x234>)
  4013fe:	6013      	str	r3, [r2, #0]
	if (disable_xtal) {
  401400:	2c04      	cmp	r4, #4
  401402:	d05c      	beq.n	4014be <pmc_sleep+0x192>
				&fmr1,
#endif
				(sleep_mode == SAM_PM_SMODE_WAIT));

		/* Enter wait mode */
		cpu_irq_enable();
  401404:	4c52      	ldr	r4, [pc, #328]	; (401550 <pmc_sleep+0x224>)
  401406:	2301      	movs	r3, #1
  401408:	7023      	strb	r3, [r4, #0]
  40140a:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  40140e:	b662      	cpsie	i

		pmc_enable_waitmode();
  401410:	4b57      	ldr	r3, [pc, #348]	; (401570 <pmc_sleep+0x244>)
  401412:	4798      	blx	r3
  __ASM volatile ("cpsid i" : : : "memory");
  401414:	b672      	cpsid	i
  401416:	f3bf 8f5f 	dmb	sy

		cpu_irq_disable();
  40141a:	2300      	movs	r3, #0
  40141c:	7023      	strb	r3, [r4, #0]
	if (CKGR_MOR_MOSCXTBY == (osc_setting & CKGR_MOR_MOSCXTBY)) {
  40141e:	f017 0f02 	tst.w	r7, #2
  401422:	d055      	beq.n	4014d0 <pmc_sleep+0x1a4>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401424:	4a4d      	ldr	r2, [pc, #308]	; (40155c <pmc_sleep+0x230>)
  401426:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  401428:	4952      	ldr	r1, [pc, #328]	; (401574 <pmc_sleep+0x248>)
  40142a:	4019      	ands	r1, r3
  40142c:	4b52      	ldr	r3, [pc, #328]	; (401578 <pmc_sleep+0x24c>)
  40142e:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401430:	6213      	str	r3, [r2, #32]
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  401432:	6a11      	ldr	r1, [r2, #32]
				| CKGR_MOR_KEY_PASSWD;
  401434:	4b51      	ldr	r3, [pc, #324]	; (40157c <pmc_sleep+0x250>)
  401436:	400b      	ands	r3, r1
  401438:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  40143c:	6213      	str	r3, [r2, #32]
	if (pll0_setting & CKGR_PLLAR_MULA_Msk) {
  40143e:	4b50      	ldr	r3, [pc, #320]	; (401580 <pmc_sleep+0x254>)
  401440:	4033      	ands	r3, r6
  401442:	2b00      	cmp	r3, #0
  401444:	d06e      	beq.n	401524 <pmc_sleep+0x1f8>
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | pll0_setting;
  401446:	f046 5600 	orr.w	r6, r6, #536870912	; 0x20000000
  40144a:	4b44      	ldr	r3, [pc, #272]	; (40155c <pmc_sleep+0x230>)
  40144c:	629e      	str	r6, [r3, #40]	; 0x28
		pll_sr |= PMC_SR_LOCKA;
  40144e:	2102      	movs	r1, #2
	switch(mck_setting & PMC_MCKR_CSS_Msk) {
  401450:	f1b9 0f02 	cmp.w	r9, #2
  401454:	d104      	bne.n	401460 <pmc_sleep+0x134>
		while (!(PMC->PMC_SR & PMC_SR_LOCKA));
  401456:	4a41      	ldr	r2, [pc, #260]	; (40155c <pmc_sleep+0x230>)
  401458:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40145a:	f013 0f02 	tst.w	r3, #2
  40145e:	d0fb      	beq.n	401458 <pmc_sleep+0x12c>
	mckr = PMC->PMC_MCKR;
  401460:	4a3e      	ldr	r2, [pc, #248]	; (40155c <pmc_sleep+0x230>)
  401462:	6b13      	ldr	r3, [r2, #48]	; 0x30
	PMC->PMC_MCKR = (mckr & ~PMC_MCKR_PRES_Msk)
  401464:	f023 0370 	bic.w	r3, r3, #112	; 0x70
		| (mck_setting & PMC_MCKR_PRES_Msk);
  401468:	f005 0070 	and.w	r0, r5, #112	; 0x70
  40146c:	4303      	orrs	r3, r0
	PMC->PMC_MCKR = (mckr & ~PMC_MCKR_PRES_Msk)
  40146e:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  401470:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401472:	f013 0f08 	tst.w	r3, #8
  401476:	d0fb      	beq.n	401470 <pmc_sleep+0x144>
	EFC0->EEFC_FMR = fmr_setting;
  401478:	4b39      	ldr	r3, [pc, #228]	; (401560 <pmc_sleep+0x234>)
  40147a:	f8c3 8000 	str.w	r8, [r3]
	PMC->PMC_MCKR = mck_setting;
  40147e:	f5a3 63c0 	sub.w	r3, r3, #1536	; 0x600
  401482:	631d      	str	r5, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  401484:	461a      	mov	r2, r3
  401486:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401488:	f013 0f08 	tst.w	r3, #8
  40148c:	d0fb      	beq.n	401486 <pmc_sleep+0x15a>
	while (!(PMC->PMC_SR & pll_sr));
  40148e:	4a33      	ldr	r2, [pc, #204]	; (40155c <pmc_sleep+0x230>)
  401490:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401492:	420b      	tst	r3, r1
  401494:	d0fc      	beq.n	401490 <pmc_sleep+0x164>

#if (SAM4C || SAM4CM || SAM4CP)
		/* Restore the sub-system 1 */
		PMC->PMC_SCER = cpclk_backup | PMC_SCER_CPKEY_PASSWD;
#endif
		b_is_sleep_clock_used = false;
  401496:	2200      	movs	r2, #0
  401498:	4b2f      	ldr	r3, [pc, #188]	; (401558 <pmc_sleep+0x22c>)
  40149a:	701a      	strb	r2, [r3, #0]
		if (callback_clocks_restored) {
  40149c:	4b39      	ldr	r3, [pc, #228]	; (401584 <pmc_sleep+0x258>)
  40149e:	681b      	ldr	r3, [r3, #0]
  4014a0:	b11b      	cbz	r3, 4014aa <pmc_sleep+0x17e>
			callback_clocks_restored();
  4014a2:	4798      	blx	r3
			callback_clocks_restored = NULL;
  4014a4:	2200      	movs	r2, #0
  4014a6:	4b37      	ldr	r3, [pc, #220]	; (401584 <pmc_sleep+0x258>)
  4014a8:	601a      	str	r2, [r3, #0]
		}
		cpu_irq_enable();
  4014aa:	2201      	movs	r2, #1
  4014ac:	4b28      	ldr	r3, [pc, #160]	; (401550 <pmc_sleep+0x224>)
  4014ae:	701a      	strb	r2, [r3, #0]
  4014b0:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4014b4:	b662      	cpsie	i
  4014b6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	uint32_t mckr = PMC->PMC_MCKR;
  4014ba:	4629      	mov	r1, r5
  4014bc:	e77e      	b.n	4013bc <pmc_sleep+0x90>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4014be:	f5a2 62c0 	sub.w	r2, r2, #1536	; 0x600
  4014c2:	6a11      	ldr	r1, [r2, #32]
  4014c4:	4b30      	ldr	r3, [pc, #192]	; (401588 <pmc_sleep+0x25c>)
  4014c6:	400b      	ands	r3, r1
  4014c8:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  4014cc:	6213      	str	r3, [r2, #32]
  4014ce:	e799      	b.n	401404 <pmc_sleep+0xd8>
	} else if (CKGR_MOR_MOSCXTEN == (osc_setting & CKGR_MOR_MOSCXTEN)) {
  4014d0:	f017 0f01 	tst.w	r7, #1
  4014d4:	d0b3      	beq.n	40143e <pmc_sleep+0x112>
		if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCXTEN)) {
  4014d6:	4b21      	ldr	r3, [pc, #132]	; (40155c <pmc_sleep+0x230>)
  4014d8:	6a1b      	ldr	r3, [r3, #32]
  4014da:	f013 0f01 	tst.w	r3, #1
  4014de:	d10b      	bne.n	4014f8 <pmc_sleep+0x1cc>
			PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4014e0:	491e      	ldr	r1, [pc, #120]	; (40155c <pmc_sleep+0x230>)
  4014e2:	6a0b      	ldr	r3, [r1, #32]
					CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN;
  4014e4:	4a29      	ldr	r2, [pc, #164]	; (40158c <pmc_sleep+0x260>)
  4014e6:	401a      	ands	r2, r3
  4014e8:	4b29      	ldr	r3, [pc, #164]	; (401590 <pmc_sleep+0x264>)
  4014ea:	4313      	orrs	r3, r2
			PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4014ec:	620b      	str	r3, [r1, #32]
			while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  4014ee:	460a      	mov	r2, r1
  4014f0:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4014f2:	f013 0f01 	tst.w	r3, #1
  4014f6:	d0fb      	beq.n	4014f0 <pmc_sleep+0x1c4>
		if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
  4014f8:	4b18      	ldr	r3, [pc, #96]	; (40155c <pmc_sleep+0x230>)
  4014fa:	6a1b      	ldr	r3, [r3, #32]
  4014fc:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401500:	d108      	bne.n	401514 <pmc_sleep+0x1e8>
			PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  401502:	4a16      	ldr	r2, [pc, #88]	; (40155c <pmc_sleep+0x230>)
  401504:	6a11      	ldr	r1, [r2, #32]
  401506:	4b23      	ldr	r3, [pc, #140]	; (401594 <pmc_sleep+0x268>)
  401508:	430b      	orrs	r3, r1
  40150a:	6213      	str	r3, [r2, #32]
			while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
  40150c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40150e:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  401512:	d0fb      	beq.n	40150c <pmc_sleep+0x1e0>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  401514:	4a11      	ldr	r2, [pc, #68]	; (40155c <pmc_sleep+0x230>)
  401516:	6a11      	ldr	r1, [r2, #32]
					| CKGR_MOR_KEY_PASSWD;
  401518:	4b18      	ldr	r3, [pc, #96]	; (40157c <pmc_sleep+0x250>)
  40151a:	400b      	ands	r3, r1
  40151c:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  401520:	6213      	str	r3, [r2, #32]
  401522:	e78c      	b.n	40143e <pmc_sleep+0x112>
	uint32_t pll_sr = 0;
  401524:	2100      	movs	r1, #0
  401526:	e793      	b.n	401450 <pmc_sleep+0x124>

		break;
	}
#if (!(SAMG51 || SAMG53 || SAMG54))
	case SAM_PM_SMODE_BACKUP:
		SCB->SCR |= SCR_SLEEPDEEP;
  401528:	4a08      	ldr	r2, [pc, #32]	; (40154c <pmc_sleep+0x220>)
  40152a:	6913      	ldr	r3, [r2, #16]
  40152c:	f043 0304 	orr.w	r3, r3, #4
  401530:	6113      	str	r3, [r2, #16]
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAMS70 || SAME70)
		SUPC->SUPC_CR = SUPC_CR_KEY_PASSWD | SUPC_CR_VROFF_STOP_VREG;
  401532:	4a19      	ldr	r2, [pc, #100]	; (401598 <pmc_sleep+0x26c>)
  401534:	4b19      	ldr	r3, [pc, #100]	; (40159c <pmc_sleep+0x270>)
  401536:	601a      	str	r2, [r3, #0]
		cpu_irq_enable();
  401538:	2201      	movs	r2, #1
  40153a:	4b05      	ldr	r3, [pc, #20]	; (401550 <pmc_sleep+0x224>)
  40153c:	701a      	strb	r2, [r3, #0]
  40153e:	f3bf 8f5f 	dmb	sy
  401542:	b662      	cpsie	i
  __ASM volatile ("wfi");
  401544:	bf30      	wfi
  401546:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40154a:	bf00      	nop
  40154c:	e000ed00 	.word	0xe000ed00
  401550:	20400018 	.word	0x20400018
  401554:	004012dd 	.word	0x004012dd
  401558:	20400c68 	.word	0x20400c68
  40155c:	400e0600 	.word	0x400e0600
  401560:	400e0c00 	.word	0x400e0c00
  401564:	00370008 	.word	0x00370008
  401568:	00401269 	.word	0x00401269
  40156c:	fec8ffff 	.word	0xfec8ffff
  401570:	004012e1 	.word	0x004012e1
  401574:	fec8fffc 	.word	0xfec8fffc
  401578:	01370002 	.word	0x01370002
  40157c:	ffc8ff87 	.word	0xffc8ff87
  401580:	07ff0000 	.word	0x07ff0000
  401584:	20400c6c 	.word	0x20400c6c
  401588:	ffc8fffe 	.word	0xffc8fffe
  40158c:	ffc8fffc 	.word	0xffc8fffc
  401590:	00370001 	.word	0x00370001
  401594:	01370000 	.word	0x01370000
  401598:	a5000004 	.word	0xa5000004
  40159c:	400e1810 	.word	0x400e1810

004015a0 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  4015a0:	e7fe      	b.n	4015a0 <Dummy_Handler>
	...

004015a4 <Reset_Handler>:
{
  4015a4:	b500      	push	{lr}
  4015a6:	b083      	sub	sp, #12
        if (pSrc != pDest) {
  4015a8:	4b25      	ldr	r3, [pc, #148]	; (401640 <Reset_Handler+0x9c>)
  4015aa:	4a26      	ldr	r2, [pc, #152]	; (401644 <Reset_Handler+0xa0>)
  4015ac:	429a      	cmp	r2, r3
  4015ae:	d010      	beq.n	4015d2 <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
  4015b0:	4b25      	ldr	r3, [pc, #148]	; (401648 <Reset_Handler+0xa4>)
  4015b2:	4a23      	ldr	r2, [pc, #140]	; (401640 <Reset_Handler+0x9c>)
  4015b4:	429a      	cmp	r2, r3
  4015b6:	d20c      	bcs.n	4015d2 <Reset_Handler+0x2e>
  4015b8:	3b01      	subs	r3, #1
  4015ba:	1a9b      	subs	r3, r3, r2
  4015bc:	f023 0303 	bic.w	r3, r3, #3
  4015c0:	3304      	adds	r3, #4
  4015c2:	4413      	add	r3, r2
  4015c4:	491f      	ldr	r1, [pc, #124]	; (401644 <Reset_Handler+0xa0>)
                        *pDest++ = *pSrc++;
  4015c6:	f851 0b04 	ldr.w	r0, [r1], #4
  4015ca:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  4015ce:	429a      	cmp	r2, r3
  4015d0:	d1f9      	bne.n	4015c6 <Reset_Handler+0x22>
        for (pDest = &_szero; pDest < &_ezero;) {
  4015d2:	4b1e      	ldr	r3, [pc, #120]	; (40164c <Reset_Handler+0xa8>)
  4015d4:	4a1e      	ldr	r2, [pc, #120]	; (401650 <Reset_Handler+0xac>)
  4015d6:	429a      	cmp	r2, r3
  4015d8:	d20a      	bcs.n	4015f0 <Reset_Handler+0x4c>
  4015da:	3b01      	subs	r3, #1
  4015dc:	1a9b      	subs	r3, r3, r2
  4015de:	f023 0303 	bic.w	r3, r3, #3
  4015e2:	3304      	adds	r3, #4
  4015e4:	4413      	add	r3, r2
                *pDest++ = 0;
  4015e6:	2100      	movs	r1, #0
  4015e8:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  4015ec:	4293      	cmp	r3, r2
  4015ee:	d1fb      	bne.n	4015e8 <Reset_Handler+0x44>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  4015f0:	4a18      	ldr	r2, [pc, #96]	; (401654 <Reset_Handler+0xb0>)
  4015f2:	4b19      	ldr	r3, [pc, #100]	; (401658 <Reset_Handler+0xb4>)
  4015f4:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  4015f8:	6093      	str	r3, [r2, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  4015fa:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  4015fe:	fab3 f383 	clz	r3, r3
  401602:	095b      	lsrs	r3, r3, #5
  401604:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  401606:	b672      	cpsid	i
  __ASM volatile ("dmb");
  401608:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  40160c:	2200      	movs	r2, #0
  40160e:	4b13      	ldr	r3, [pc, #76]	; (40165c <Reset_Handler+0xb8>)
  401610:	701a      	strb	r2, [r3, #0]
	return flags;
  401612:	9901      	ldr	r1, [sp, #4]
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  401614:	4a12      	ldr	r2, [pc, #72]	; (401660 <Reset_Handler+0xbc>)
  401616:	6813      	ldr	r3, [r2, #0]
  401618:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  40161c:	6013      	str	r3, [r2, #0]
  __ASM volatile ("dsb");
  40161e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  401622:	f3bf 8f6f 	isb	sy
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  401626:	b129      	cbz	r1, 401634 <Reset_Handler+0x90>
		cpu_irq_enable();
  401628:	2201      	movs	r2, #1
  40162a:	4b0c      	ldr	r3, [pc, #48]	; (40165c <Reset_Handler+0xb8>)
  40162c:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  40162e:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401632:	b662      	cpsie	i
        __libc_init_array();
  401634:	4b0b      	ldr	r3, [pc, #44]	; (401664 <Reset_Handler+0xc0>)
  401636:	4798      	blx	r3
        main();
  401638:	4b0b      	ldr	r3, [pc, #44]	; (401668 <Reset_Handler+0xc4>)
  40163a:	4798      	blx	r3
  40163c:	e7fe      	b.n	40163c <Reset_Handler+0x98>
  40163e:	bf00      	nop
  401640:	20400000 	.word	0x20400000
  401644:	0040714c 	.word	0x0040714c
  401648:	204009d0 	.word	0x204009d0
  40164c:	20400cdc 	.word	0x20400cdc
  401650:	204009d0 	.word	0x204009d0
  401654:	e000ed00 	.word	0xe000ed00
  401658:	00400000 	.word	0x00400000
  40165c:	20400018 	.word	0x20400018
  401660:	e000ed88 	.word	0xe000ed88
  401664:	004022b5 	.word	0x004022b5
  401668:	00401899 	.word	0x00401899

0040166c <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
  /* Determine clock frequency according to clock register values */
  switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk)
  40166c:	4b3b      	ldr	r3, [pc, #236]	; (40175c <SystemCoreClockUpdate+0xf0>)
  40166e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401670:	f003 0303 	and.w	r3, r3, #3
  401674:	2b01      	cmp	r3, #1
  401676:	d01d      	beq.n	4016b4 <SystemCoreClockUpdate+0x48>
  401678:	b183      	cbz	r3, 40169c <SystemCoreClockUpdate+0x30>
  40167a:	2b02      	cmp	r3, #2
  40167c:	d036      	beq.n	4016ec <SystemCoreClockUpdate+0x80>

    default:
    break;
  }

  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  40167e:	4b37      	ldr	r3, [pc, #220]	; (40175c <SystemCoreClockUpdate+0xf0>)
  401680:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401682:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401686:	2b70      	cmp	r3, #112	; 0x70
  401688:	d05f      	beq.n	40174a <SystemCoreClockUpdate+0xde>
  {
    SystemCoreClock /= 3U;
  }
  else
  {
    SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  40168a:	4b34      	ldr	r3, [pc, #208]	; (40175c <SystemCoreClockUpdate+0xf0>)
  40168c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  40168e:	4934      	ldr	r1, [pc, #208]	; (401760 <SystemCoreClockUpdate+0xf4>)
  401690:	f3c2 1202 	ubfx	r2, r2, #4, #3
  401694:	680b      	ldr	r3, [r1, #0]
  401696:	40d3      	lsrs	r3, r2
  401698:	600b      	str	r3, [r1, #0]
  40169a:	4770      	bx	lr
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  40169c:	4b31      	ldr	r3, [pc, #196]	; (401764 <SystemCoreClockUpdate+0xf8>)
  40169e:	695b      	ldr	r3, [r3, #20]
  4016a0:	f013 0f80 	tst.w	r3, #128	; 0x80
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  4016a4:	bf14      	ite	ne
  4016a6:	f44f 4200 	movne.w	r2, #32768	; 0x8000
        SystemCoreClock = CHIP_FREQ_SLCK_RC;
  4016aa:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  4016ae:	4b2c      	ldr	r3, [pc, #176]	; (401760 <SystemCoreClockUpdate+0xf4>)
  4016b0:	601a      	str	r2, [r3, #0]
  4016b2:	e7e4      	b.n	40167e <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  4016b4:	4b29      	ldr	r3, [pc, #164]	; (40175c <SystemCoreClockUpdate+0xf0>)
  4016b6:	6a1b      	ldr	r3, [r3, #32]
  4016b8:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4016bc:	d003      	beq.n	4016c6 <SystemCoreClockUpdate+0x5a>
        SystemCoreClock = CHIP_FREQ_XTAL_12M;
  4016be:	4a2a      	ldr	r2, [pc, #168]	; (401768 <SystemCoreClockUpdate+0xfc>)
  4016c0:	4b27      	ldr	r3, [pc, #156]	; (401760 <SystemCoreClockUpdate+0xf4>)
  4016c2:	601a      	str	r2, [r3, #0]
  4016c4:	e7db      	b.n	40167e <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4016c6:	4a29      	ldr	r2, [pc, #164]	; (40176c <SystemCoreClockUpdate+0x100>)
  4016c8:	4b25      	ldr	r3, [pc, #148]	; (401760 <SystemCoreClockUpdate+0xf4>)
  4016ca:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  4016cc:	4b23      	ldr	r3, [pc, #140]	; (40175c <SystemCoreClockUpdate+0xf0>)
  4016ce:	6a1b      	ldr	r3, [r3, #32]
  4016d0:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4016d4:	2b10      	cmp	r3, #16
  4016d6:	d005      	beq.n	4016e4 <SystemCoreClockUpdate+0x78>
  4016d8:	2b20      	cmp	r3, #32
  4016da:	d1d0      	bne.n	40167e <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 3U;
  4016dc:	4a22      	ldr	r2, [pc, #136]	; (401768 <SystemCoreClockUpdate+0xfc>)
  4016de:	4b20      	ldr	r3, [pc, #128]	; (401760 <SystemCoreClockUpdate+0xf4>)
  4016e0:	601a      	str	r2, [r3, #0]
          break;
  4016e2:	e7cc      	b.n	40167e <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 2U;
  4016e4:	4a22      	ldr	r2, [pc, #136]	; (401770 <SystemCoreClockUpdate+0x104>)
  4016e6:	4b1e      	ldr	r3, [pc, #120]	; (401760 <SystemCoreClockUpdate+0xf4>)
  4016e8:	601a      	str	r2, [r3, #0]
          break;
  4016ea:	e7c8      	b.n	40167e <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  4016ec:	4b1b      	ldr	r3, [pc, #108]	; (40175c <SystemCoreClockUpdate+0xf0>)
  4016ee:	6a1b      	ldr	r3, [r3, #32]
  4016f0:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4016f4:	d016      	beq.n	401724 <SystemCoreClockUpdate+0xb8>
        SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  4016f6:	4a1c      	ldr	r2, [pc, #112]	; (401768 <SystemCoreClockUpdate+0xfc>)
  4016f8:	4b19      	ldr	r3, [pc, #100]	; (401760 <SystemCoreClockUpdate+0xf4>)
  4016fa:	601a      	str	r2, [r3, #0]
      if ( (uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK )
  4016fc:	4b17      	ldr	r3, [pc, #92]	; (40175c <SystemCoreClockUpdate+0xf0>)
  4016fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401700:	f003 0303 	and.w	r3, r3, #3
  401704:	2b02      	cmp	r3, #2
  401706:	d1ba      	bne.n	40167e <SystemCoreClockUpdate+0x12>
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  401708:	4a14      	ldr	r2, [pc, #80]	; (40175c <SystemCoreClockUpdate+0xf0>)
  40170a:	6a91      	ldr	r1, [r2, #40]	; 0x28
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  40170c:	6a92      	ldr	r2, [r2, #40]	; 0x28
  40170e:	4814      	ldr	r0, [pc, #80]	; (401760 <SystemCoreClockUpdate+0xf4>)
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  401710:	f3c1 410a 	ubfx	r1, r1, #16, #11
  401714:	6803      	ldr	r3, [r0, #0]
  401716:	fb01 3303 	mla	r3, r1, r3, r3
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  40171a:	b2d2      	uxtb	r2, r2
  40171c:	fbb3 f3f2 	udiv	r3, r3, r2
  401720:	6003      	str	r3, [r0, #0]
  401722:	e7ac      	b.n	40167e <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  401724:	4a11      	ldr	r2, [pc, #68]	; (40176c <SystemCoreClockUpdate+0x100>)
  401726:	4b0e      	ldr	r3, [pc, #56]	; (401760 <SystemCoreClockUpdate+0xf4>)
  401728:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  40172a:	4b0c      	ldr	r3, [pc, #48]	; (40175c <SystemCoreClockUpdate+0xf0>)
  40172c:	6a1b      	ldr	r3, [r3, #32]
  40172e:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401732:	2b10      	cmp	r3, #16
  401734:	d005      	beq.n	401742 <SystemCoreClockUpdate+0xd6>
  401736:	2b20      	cmp	r3, #32
  401738:	d1e0      	bne.n	4016fc <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 3U;
  40173a:	4a0b      	ldr	r2, [pc, #44]	; (401768 <SystemCoreClockUpdate+0xfc>)
  40173c:	4b08      	ldr	r3, [pc, #32]	; (401760 <SystemCoreClockUpdate+0xf4>)
  40173e:	601a      	str	r2, [r3, #0]
          break;
  401740:	e7dc      	b.n	4016fc <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 2U;
  401742:	4a0b      	ldr	r2, [pc, #44]	; (401770 <SystemCoreClockUpdate+0x104>)
  401744:	4b06      	ldr	r3, [pc, #24]	; (401760 <SystemCoreClockUpdate+0xf4>)
  401746:	601a      	str	r2, [r3, #0]
          break;
  401748:	e7d8      	b.n	4016fc <SystemCoreClockUpdate+0x90>
    SystemCoreClock /= 3U;
  40174a:	4a05      	ldr	r2, [pc, #20]	; (401760 <SystemCoreClockUpdate+0xf4>)
  40174c:	6813      	ldr	r3, [r2, #0]
  40174e:	4909      	ldr	r1, [pc, #36]	; (401774 <SystemCoreClockUpdate+0x108>)
  401750:	fba1 1303 	umull	r1, r3, r1, r3
  401754:	085b      	lsrs	r3, r3, #1
  401756:	6013      	str	r3, [r2, #0]
  401758:	4770      	bx	lr
  40175a:	bf00      	nop
  40175c:	400e0600 	.word	0x400e0600
  401760:	2040001c 	.word	0x2040001c
  401764:	400e1810 	.word	0x400e1810
  401768:	00b71b00 	.word	0x00b71b00
  40176c:	003d0900 	.word	0x003d0900
  401770:	007a1200 	.word	0x007a1200
  401774:	aaaaaaab 	.word	0xaaaaaaab

00401778 <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
  if ( ul_clk < CHIP_FREQ_FWS_0 )
  401778:	4b16      	ldr	r3, [pc, #88]	; (4017d4 <system_init_flash+0x5c>)
  40177a:	4298      	cmp	r0, r3
  40177c:	d913      	bls.n	4017a6 <system_init_flash+0x2e>
  {
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  }
  else
  {
    if (ul_clk < CHIP_FREQ_FWS_1)
  40177e:	4b16      	ldr	r3, [pc, #88]	; (4017d8 <system_init_flash+0x60>)
  401780:	4298      	cmp	r0, r3
  401782:	d915      	bls.n	4017b0 <system_init_flash+0x38>
    {
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
    }
    else
    {
      if (ul_clk < CHIP_FREQ_FWS_2)
  401784:	4b15      	ldr	r3, [pc, #84]	; (4017dc <system_init_flash+0x64>)
  401786:	4298      	cmp	r0, r3
  401788:	d916      	bls.n	4017b8 <system_init_flash+0x40>
      {
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
      }
      else
      {
        if ( ul_clk < CHIP_FREQ_FWS_3 )
  40178a:	4b15      	ldr	r3, [pc, #84]	; (4017e0 <system_init_flash+0x68>)
  40178c:	4298      	cmp	r0, r3
  40178e:	d917      	bls.n	4017c0 <system_init_flash+0x48>
        {
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
        }
        else
        {
          if ( ul_clk < CHIP_FREQ_FWS_4 )
  401790:	4b14      	ldr	r3, [pc, #80]	; (4017e4 <system_init_flash+0x6c>)
  401792:	4298      	cmp	r0, r3
  401794:	d918      	bls.n	4017c8 <system_init_flash+0x50>
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
          }
          else
          {
            if ( ul_clk < CHIP_FREQ_FWS_5 )
  401796:	4b14      	ldr	r3, [pc, #80]	; (4017e8 <system_init_flash+0x70>)
  401798:	4298      	cmp	r0, r3
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  40179a:	bf94      	ite	ls
  40179c:	4a13      	ldrls	r2, [pc, #76]	; (4017ec <system_init_flash+0x74>)
            }
            else
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(6)|EEFC_FMR_CLOE;
  40179e:	4a14      	ldrhi	r2, [pc, #80]	; (4017f0 <system_init_flash+0x78>)
  4017a0:	4b14      	ldr	r3, [pc, #80]	; (4017f4 <system_init_flash+0x7c>)
  4017a2:	601a      	str	r2, [r3, #0]
  4017a4:	4770      	bx	lr
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  4017a6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  4017aa:	4b12      	ldr	r3, [pc, #72]	; (4017f4 <system_init_flash+0x7c>)
  4017ac:	601a      	str	r2, [r3, #0]
  4017ae:	4770      	bx	lr
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  4017b0:	4a11      	ldr	r2, [pc, #68]	; (4017f8 <system_init_flash+0x80>)
  4017b2:	4b10      	ldr	r3, [pc, #64]	; (4017f4 <system_init_flash+0x7c>)
  4017b4:	601a      	str	r2, [r3, #0]
  4017b6:	4770      	bx	lr
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  4017b8:	4a10      	ldr	r2, [pc, #64]	; (4017fc <system_init_flash+0x84>)
  4017ba:	4b0e      	ldr	r3, [pc, #56]	; (4017f4 <system_init_flash+0x7c>)
  4017bc:	601a      	str	r2, [r3, #0]
  4017be:	4770      	bx	lr
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  4017c0:	4a0f      	ldr	r2, [pc, #60]	; (401800 <system_init_flash+0x88>)
  4017c2:	4b0c      	ldr	r3, [pc, #48]	; (4017f4 <system_init_flash+0x7c>)
  4017c4:	601a      	str	r2, [r3, #0]
  4017c6:	4770      	bx	lr
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  4017c8:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  4017cc:	4b09      	ldr	r3, [pc, #36]	; (4017f4 <system_init_flash+0x7c>)
  4017ce:	601a      	str	r2, [r3, #0]
  4017d0:	4770      	bx	lr
  4017d2:	bf00      	nop
  4017d4:	015ef3bf 	.word	0x015ef3bf
  4017d8:	02bde77f 	.word	0x02bde77f
  4017dc:	041cdb3f 	.word	0x041cdb3f
  4017e0:	057bceff 	.word	0x057bceff
  4017e4:	06dac2bf 	.word	0x06dac2bf
  4017e8:	0839b67f 	.word	0x0839b67f
  4017ec:	04000500 	.word	0x04000500
  4017f0:	04000600 	.word	0x04000600
  4017f4:	400e0c00 	.word	0x400e0c00
  4017f8:	04000100 	.word	0x04000100
  4017fc:	04000200 	.word	0x04000200
  401800:	04000300 	.word	0x04000300

00401804 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  401804:	4b0a      	ldr	r3, [pc, #40]	; (401830 <_sbrk+0x2c>)
  401806:	681b      	ldr	r3, [r3, #0]
  401808:	b153      	cbz	r3, 401820 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  40180a:	4b09      	ldr	r3, [pc, #36]	; (401830 <_sbrk+0x2c>)
  40180c:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  40180e:	181a      	adds	r2, r3, r0
  401810:	4908      	ldr	r1, [pc, #32]	; (401834 <_sbrk+0x30>)
  401812:	4291      	cmp	r1, r2
  401814:	db08      	blt.n	401828 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  401816:	4610      	mov	r0, r2
  401818:	4a05      	ldr	r2, [pc, #20]	; (401830 <_sbrk+0x2c>)
  40181a:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  40181c:	4618      	mov	r0, r3
  40181e:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  401820:	4a05      	ldr	r2, [pc, #20]	; (401838 <_sbrk+0x34>)
  401822:	4b03      	ldr	r3, [pc, #12]	; (401830 <_sbrk+0x2c>)
  401824:	601a      	str	r2, [r3, #0]
  401826:	e7f0      	b.n	40180a <_sbrk+0x6>
		return (caddr_t) -1;	
  401828:	f04f 30ff 	mov.w	r0, #4294967295
}
  40182c:	4770      	bx	lr
  40182e:	bf00      	nop
  401830:	20400c70 	.word	0x20400c70
  401834:	2045fffc 	.word	0x2045fffc
  401838:	20402ee0 	.word	0x20402ee0

0040183c <but2_callback>:
volatile char flag_echo = 0;
volatile long rtt_timer = 0;
volatile float dist = 0;

void but2_callback(void) {
	flag_but2 = 1;
  40183c:	2201      	movs	r2, #1
  40183e:	4b01      	ldr	r3, [pc, #4]	; (401844 <but2_callback+0x8>)
  401840:	701a      	strb	r2, [r3, #0]
  401842:	4770      	bx	lr
  401844:	20400c78 	.word	0x20400c78

00401848 <echo_callback>:
}

void echo_callback(void) {
  401848:	b508      	push	{r3, lr}
	if (pio_get(ECHO_PIO, PIO_INPUT, ECHO_IDX_MASK)) {
  40184a:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
  40184e:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  401852:	4809      	ldr	r0, [pc, #36]	; (401878 <echo_callback+0x30>)
  401854:	4b09      	ldr	r3, [pc, #36]	; (40187c <echo_callback+0x34>)
  401856:	4798      	blx	r3
  401858:	b940      	cbnz	r0, 40186c <echo_callback+0x24>
		RTT_init(RTT_FREQ, 0, 0);
	} else {
		rtt_timer = rtt_read_timer_value(RTT);
  40185a:	4809      	ldr	r0, [pc, #36]	; (401880 <echo_callback+0x38>)
  40185c:	4b09      	ldr	r3, [pc, #36]	; (401884 <echo_callback+0x3c>)
  40185e:	4798      	blx	r3
  401860:	4b09      	ldr	r3, [pc, #36]	; (401888 <echo_callback+0x40>)
  401862:	6018      	str	r0, [r3, #0]
		flag_echo = 1;
  401864:	2201      	movs	r2, #1
  401866:	4b09      	ldr	r3, [pc, #36]	; (40188c <echo_callback+0x44>)
  401868:	701a      	strb	r2, [r3, #0]
  40186a:	bd08      	pop	{r3, pc}
		RTT_init(RTT_FREQ, 0, 0);
  40186c:	2200      	movs	r2, #0
  40186e:	4611      	mov	r1, r2
  401870:	4807      	ldr	r0, [pc, #28]	; (401890 <echo_callback+0x48>)
  401872:	4b08      	ldr	r3, [pc, #32]	; (401894 <echo_callback+0x4c>)
  401874:	4798      	blx	r3
  401876:	bd08      	pop	{r3, pc}
  401878:	400e0e00 	.word	0x400e0e00
  40187c:	00400e6b 	.word	0x00400e6b
  401880:	400e1830 	.word	0x400e1830
  401884:	00400215 	.word	0x00400215
  401888:	20400c7c 	.word	0x20400c7c
  40188c:	20400c79 	.word	0x20400c79
  401890:	46fa0000 	.word	0x46fa0000
  401894:	0040042d 	.word	0x0040042d

00401898 <main>:
	}
}

int main(void) {
  401898:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  40189c:	ed2d 8b02 	vpush	{d8}
  4018a0:	b086      	sub	sp, #24
    board_init();
  4018a2:	4b5b      	ldr	r3, [pc, #364]	; (401a10 <main+0x178>)
  4018a4:	4798      	blx	r3
    sysclk_init();
  4018a6:	4b5b      	ldr	r3, [pc, #364]	; (401a14 <main+0x17c>)
  4018a8:	4798      	blx	r3
    delay_init();
    WDT->WDT_MR = WDT_MR_WDDIS;
  4018aa:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4018ae:	4b5a      	ldr	r3, [pc, #360]	; (401a18 <main+0x180>)
  4018b0:	605a      	str	r2, [r3, #4]

    io_init();
  4018b2:	4b5a      	ldr	r3, [pc, #360]	; (401a1c <main+0x184>)
  4018b4:	4798      	blx	r3
	int scan = 0;

    // Init OLED
    gfx_mono_ssd1306_init();
  4018b6:	4b5a      	ldr	r3, [pc, #360]	; (401a20 <main+0x188>)
  4018b8:	4798      	blx	r3
    char str[8];
    sprintf(str, "%d cm   ", dist);
  4018ba:	4b5a      	ldr	r3, [pc, #360]	; (401a24 <main+0x18c>)
  4018bc:	6818      	ldr	r0, [r3, #0]
  4018be:	4b5a      	ldr	r3, [pc, #360]	; (401a28 <main+0x190>)
  4018c0:	4798      	blx	r3
  4018c2:	4602      	mov	r2, r0
  4018c4:	460b      	mov	r3, r1
  4018c6:	4959      	ldr	r1, [pc, #356]	; (401a2c <main+0x194>)
  4018c8:	a804      	add	r0, sp, #16
  4018ca:	4c59      	ldr	r4, [pc, #356]	; (401a30 <main+0x198>)
  4018cc:	47a0      	blx	r4
    gfx_mono_draw_string(str, 0, 0, &sysfont);
  4018ce:	4b59      	ldr	r3, [pc, #356]	; (401a34 <main+0x19c>)
  4018d0:	2200      	movs	r2, #0
  4018d2:	4611      	mov	r1, r2
  4018d4:	a804      	add	r0, sp, #16
  4018d6:	4c58      	ldr	r4, [pc, #352]	; (401a38 <main+0x1a0>)
  4018d8:	47a0      	blx	r4
	int scan = 0;
  4018da:	f04f 0800 	mov.w	r8, #0

    /* Insert application code here, after the board has been initialized. */
    while (1) {
        if (flag_but2) {
  4018de:	f8df 9198 	ldr.w	r9, [pc, #408]	; 401a78 <main+0x1e0>
            wave();
  4018e2:	f8df a198 	ldr.w	sl, [pc, #408]	; 401a7c <main+0x1e4>
            flag_but2 = 0;
        }
        if (flag_echo) {
            dist = rtt_timer * SOUND_V * 100 / (RTT_FREQ*2);
			clear_display();
			if (dist > 2.000 && dist < 400.000) {
  4018e6:	ed9f 8a55 	vldr	s16, [pc, #340]	; 401a3c <main+0x1a4>
  4018ea:	e010      	b.n	40190e <main+0x76>
            wave();
  4018ec:	47d0      	blx	sl
            flag_but2 = 0;
  4018ee:	2300      	movs	r3, #0
  4018f0:	f889 3000 	strb.w	r3, [r9]
  4018f4:	e00f      	b.n	401916 <main+0x7e>
					}
				}
				gfx_mono_draw_rect(scan*8, 16*(2 - dist/400), 8, 16*(dist/400), GFX_PIXEL_SET);
				scan = (scan+1)%16;
			} else {
				gfx_mono_draw_string("SCAN ERROR", 0, 0, &sysfont);
  4018f6:	4b4f      	ldr	r3, [pc, #316]	; (401a34 <main+0x19c>)
  4018f8:	2200      	movs	r2, #0
  4018fa:	4611      	mov	r1, r2
  4018fc:	4850      	ldr	r0, [pc, #320]	; (401a40 <main+0x1a8>)
  4018fe:	4c4e      	ldr	r4, [pc, #312]	; (401a38 <main+0x1a0>)
  401900:	47a0      	blx	r4
			}
            flag_echo = 0;
  401902:	2200      	movs	r2, #0
  401904:	4b4f      	ldr	r3, [pc, #316]	; (401a44 <main+0x1ac>)
  401906:	701a      	strb	r2, [r3, #0]
        }
        pmc_sleep(SAM_PM_SMODE_SLEEP_WFI);
  401908:	2002      	movs	r0, #2
  40190a:	4b4f      	ldr	r3, [pc, #316]	; (401a48 <main+0x1b0>)
  40190c:	4798      	blx	r3
        if (flag_but2) {
  40190e:	f899 3000 	ldrb.w	r3, [r9]
  401912:	2b00      	cmp	r3, #0
  401914:	d1ea      	bne.n	4018ec <main+0x54>
        if (flag_echo) {
  401916:	4b4b      	ldr	r3, [pc, #300]	; (401a44 <main+0x1ac>)
  401918:	781b      	ldrb	r3, [r3, #0]
  40191a:	2b00      	cmp	r3, #0
  40191c:	d0f4      	beq.n	401908 <main+0x70>
            dist = rtt_timer * SOUND_V * 100 / (RTT_FREQ*2);
  40191e:	4b4b      	ldr	r3, [pc, #300]	; (401a4c <main+0x1b4>)
  401920:	6818      	ldr	r0, [r3, #0]
  401922:	4b4b      	ldr	r3, [pc, #300]	; (401a50 <main+0x1b8>)
  401924:	4798      	blx	r3
  401926:	4c4b      	ldr	r4, [pc, #300]	; (401a54 <main+0x1bc>)
  401928:	2200      	movs	r2, #0
  40192a:	4b4b      	ldr	r3, [pc, #300]	; (401a58 <main+0x1c0>)
  40192c:	47a0      	blx	r4
  40192e:	2200      	movs	r2, #0
  401930:	4b4a      	ldr	r3, [pc, #296]	; (401a5c <main+0x1c4>)
  401932:	47a0      	blx	r4
  401934:	2200      	movs	r2, #0
  401936:	4b4a      	ldr	r3, [pc, #296]	; (401a60 <main+0x1c8>)
  401938:	4c4a      	ldr	r4, [pc, #296]	; (401a64 <main+0x1cc>)
  40193a:	47a0      	blx	r4
  40193c:	4b4a      	ldr	r3, [pc, #296]	; (401a68 <main+0x1d0>)
  40193e:	4798      	blx	r3
  401940:	4c38      	ldr	r4, [pc, #224]	; (401a24 <main+0x18c>)
  401942:	6020      	str	r0, [r4, #0]
			clear_display();
  401944:	4b49      	ldr	r3, [pc, #292]	; (401a6c <main+0x1d4>)
  401946:	4798      	blx	r3
			if (dist > 2.000 && dist < 400.000) {
  401948:	ed94 7a00 	vldr	s14, [r4]
  40194c:	eef0 7a00 	vmov.f32	s15, #0	; 0x40000000  2.0
  401950:	eeb4 7ae7 	vcmpe.f32	s14, s15
  401954:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  401958:	ddcd      	ble.n	4018f6 <main+0x5e>
  40195a:	edd4 7a00 	vldr	s15, [r4]
  40195e:	eef4 7ac8 	vcmpe.f32	s15, s16
  401962:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  401966:	d5c6      	bpl.n	4018f6 <main+0x5e>
				sprintf(str, "%0.1f cm", dist);
  401968:	6820      	ldr	r0, [r4, #0]
  40196a:	4b2f      	ldr	r3, [pc, #188]	; (401a28 <main+0x190>)
  40196c:	4798      	blx	r3
  40196e:	4602      	mov	r2, r0
  401970:	460b      	mov	r3, r1
  401972:	493f      	ldr	r1, [pc, #252]	; (401a70 <main+0x1d8>)
  401974:	a804      	add	r0, sp, #16
  401976:	4c2e      	ldr	r4, [pc, #184]	; (401a30 <main+0x198>)
  401978:	47a0      	blx	r4
				gfx_mono_draw_string(str, 0, 0, &sysfont);
  40197a:	4b2e      	ldr	r3, [pc, #184]	; (401a34 <main+0x19c>)
  40197c:	2200      	movs	r2, #0
  40197e:	4611      	mov	r1, r2
  401980:	a804      	add	r0, sp, #16
  401982:	4c2d      	ldr	r4, [pc, #180]	; (401a38 <main+0x1a0>)
  401984:	47a0      	blx	r4
				if (scan == 0) {
  401986:	f1b8 0f00 	cmp.w	r8, #0
  40198a:	d10c      	bne.n	4019a6 <main+0x10e>
  40198c:	4644      	mov	r4, r8
						gfx_mono_draw_rect(0, 16, i, 16, GFX_PIXEL_CLR);
  40198e:	2500      	movs	r5, #0
  401990:	2710      	movs	r7, #16
  401992:	4e38      	ldr	r6, [pc, #224]	; (401a74 <main+0x1dc>)
  401994:	9500      	str	r5, [sp, #0]
  401996:	463b      	mov	r3, r7
  401998:	b2e2      	uxtb	r2, r4
  40199a:	4639      	mov	r1, r7
  40199c:	4628      	mov	r0, r5
  40199e:	47b0      	blx	r6
					for (int i = 0; i<128; i++){
  4019a0:	3401      	adds	r4, #1
  4019a2:	2c80      	cmp	r4, #128	; 0x80
  4019a4:	d1f6      	bne.n	401994 <main+0xfc>
				gfx_mono_draw_rect(scan*8, 16*(2 - dist/400), 8, 16*(dist/400), GFX_PIXEL_SET);
  4019a6:	4b1f      	ldr	r3, [pc, #124]	; (401a24 <main+0x18c>)
  4019a8:	edd3 6a00 	vldr	s13, [r3]
  4019ac:	edd3 7a00 	vldr	s15, [r3]
  4019b0:	ee87 7a88 	vdiv.f32	s14, s15, s16
  4019b4:	eef3 7a00 	vmov.f32	s15, #48	; 0x41800000  16.0
  4019b8:	ee27 7a27 	vmul.f32	s14, s14, s15
  4019bc:	eebc 7ac7 	vcvt.u32.f32	s14, s14
  4019c0:	ed8d 7a02 	vstr	s14, [sp, #8]
  4019c4:	ee86 7a88 	vdiv.f32	s14, s13, s16
  4019c8:	eef0 6a00 	vmov.f32	s13, #0	; 0x40000000  2.0
  4019cc:	ee36 7ac7 	vsub.f32	s14, s13, s14
  4019d0:	ee67 7a27 	vmul.f32	s15, s14, s15
  4019d4:	eefc 7ae7 	vcvt.u32.f32	s15, s15
  4019d8:	edcd 7a03 	vstr	s15, [sp, #12]
  4019dc:	ea4f 00c8 	mov.w	r0, r8, lsl #3
  4019e0:	2301      	movs	r3, #1
  4019e2:	9300      	str	r3, [sp, #0]
  4019e4:	f89d 3008 	ldrb.w	r3, [sp, #8]
  4019e8:	2208      	movs	r2, #8
  4019ea:	f89d 100c 	ldrb.w	r1, [sp, #12]
  4019ee:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
  4019f2:	4c20      	ldr	r4, [pc, #128]	; (401a74 <main+0x1dc>)
  4019f4:	47a0      	blx	r4
				scan = (scan+1)%16;
  4019f6:	f108 0801 	add.w	r8, r8, #1
  4019fa:	f1d8 0300 	rsbs	r3, r8, #0
  4019fe:	f008 080f 	and.w	r8, r8, #15
  401a02:	f003 030f 	and.w	r3, r3, #15
  401a06:	bf58      	it	pl
  401a08:	f1c3 0800 	rsbpl	r8, r3, #0
  401a0c:	e779      	b.n	401902 <main+0x6a>
  401a0e:	bf00      	nop
  401a10:	00400d09 	.word	0x00400d09
  401a14:	00400c99 	.word	0x00400c99
  401a18:	400e1850 	.word	0x400e1850
  401a1c:	004004e5 	.word	0x004004e5
  401a20:	00400935 	.word	0x00400935
  401a24:	20400c74 	.word	0x20400c74
  401a28:	00401d49 	.word	0x00401d49
  401a2c:	00406e74 	.word	0x00406e74
  401a30:	004023a1 	.word	0x004023a1
  401a34:	2040000c 	.word	0x2040000c
  401a38:	0040089d 	.word	0x0040089d
  401a3c:	43c80000 	.word	0x43c80000
  401a40:	00406e8c 	.word	0x00406e8c
  401a44:	20400c79 	.word	0x20400c79
  401a48:	0040132d 	.word	0x0040132d
  401a4c:	20400c7c 	.word	0x20400c7c
  401a50:	00401d25 	.word	0x00401d25
  401a54:	00401df1 	.word	0x00401df1
  401a58:	40754000 	.word	0x40754000
  401a5c:	40590000 	.word	0x40590000
  401a60:	40ef4000 	.word	0x40ef4000
  401a64:	00402045 	.word	0x00402045
  401a68:	00402215 	.word	0x00402215
  401a6c:	004003ed 	.word	0x004003ed
  401a70:	00406e80 	.word	0x00406e80
  401a74:	00400769 	.word	0x00400769
  401a78:	20400c78 	.word	0x20400c78
  401a7c:	004003bd 	.word	0x004003bd

00401a80 <__aeabi_drsub>:
  401a80:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  401a84:	e002      	b.n	401a8c <__adddf3>
  401a86:	bf00      	nop

00401a88 <__aeabi_dsub>:
  401a88:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00401a8c <__adddf3>:
  401a8c:	b530      	push	{r4, r5, lr}
  401a8e:	ea4f 0441 	mov.w	r4, r1, lsl #1
  401a92:	ea4f 0543 	mov.w	r5, r3, lsl #1
  401a96:	ea94 0f05 	teq	r4, r5
  401a9a:	bf08      	it	eq
  401a9c:	ea90 0f02 	teqeq	r0, r2
  401aa0:	bf1f      	itttt	ne
  401aa2:	ea54 0c00 	orrsne.w	ip, r4, r0
  401aa6:	ea55 0c02 	orrsne.w	ip, r5, r2
  401aaa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  401aae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  401ab2:	f000 80e2 	beq.w	401c7a <__adddf3+0x1ee>
  401ab6:	ea4f 5454 	mov.w	r4, r4, lsr #21
  401aba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  401abe:	bfb8      	it	lt
  401ac0:	426d      	neglt	r5, r5
  401ac2:	dd0c      	ble.n	401ade <__adddf3+0x52>
  401ac4:	442c      	add	r4, r5
  401ac6:	ea80 0202 	eor.w	r2, r0, r2
  401aca:	ea81 0303 	eor.w	r3, r1, r3
  401ace:	ea82 0000 	eor.w	r0, r2, r0
  401ad2:	ea83 0101 	eor.w	r1, r3, r1
  401ad6:	ea80 0202 	eor.w	r2, r0, r2
  401ada:	ea81 0303 	eor.w	r3, r1, r3
  401ade:	2d36      	cmp	r5, #54	; 0x36
  401ae0:	bf88      	it	hi
  401ae2:	bd30      	pophi	{r4, r5, pc}
  401ae4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  401ae8:	ea4f 3101 	mov.w	r1, r1, lsl #12
  401aec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  401af0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  401af4:	d002      	beq.n	401afc <__adddf3+0x70>
  401af6:	4240      	negs	r0, r0
  401af8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401afc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  401b00:	ea4f 3303 	mov.w	r3, r3, lsl #12
  401b04:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  401b08:	d002      	beq.n	401b10 <__adddf3+0x84>
  401b0a:	4252      	negs	r2, r2
  401b0c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  401b10:	ea94 0f05 	teq	r4, r5
  401b14:	f000 80a7 	beq.w	401c66 <__adddf3+0x1da>
  401b18:	f1a4 0401 	sub.w	r4, r4, #1
  401b1c:	f1d5 0e20 	rsbs	lr, r5, #32
  401b20:	db0d      	blt.n	401b3e <__adddf3+0xb2>
  401b22:	fa02 fc0e 	lsl.w	ip, r2, lr
  401b26:	fa22 f205 	lsr.w	r2, r2, r5
  401b2a:	1880      	adds	r0, r0, r2
  401b2c:	f141 0100 	adc.w	r1, r1, #0
  401b30:	fa03 f20e 	lsl.w	r2, r3, lr
  401b34:	1880      	adds	r0, r0, r2
  401b36:	fa43 f305 	asr.w	r3, r3, r5
  401b3a:	4159      	adcs	r1, r3
  401b3c:	e00e      	b.n	401b5c <__adddf3+0xd0>
  401b3e:	f1a5 0520 	sub.w	r5, r5, #32
  401b42:	f10e 0e20 	add.w	lr, lr, #32
  401b46:	2a01      	cmp	r2, #1
  401b48:	fa03 fc0e 	lsl.w	ip, r3, lr
  401b4c:	bf28      	it	cs
  401b4e:	f04c 0c02 	orrcs.w	ip, ip, #2
  401b52:	fa43 f305 	asr.w	r3, r3, r5
  401b56:	18c0      	adds	r0, r0, r3
  401b58:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  401b5c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401b60:	d507      	bpl.n	401b72 <__adddf3+0xe6>
  401b62:	f04f 0e00 	mov.w	lr, #0
  401b66:	f1dc 0c00 	rsbs	ip, ip, #0
  401b6a:	eb7e 0000 	sbcs.w	r0, lr, r0
  401b6e:	eb6e 0101 	sbc.w	r1, lr, r1
  401b72:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  401b76:	d31b      	bcc.n	401bb0 <__adddf3+0x124>
  401b78:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  401b7c:	d30c      	bcc.n	401b98 <__adddf3+0x10c>
  401b7e:	0849      	lsrs	r1, r1, #1
  401b80:	ea5f 0030 	movs.w	r0, r0, rrx
  401b84:	ea4f 0c3c 	mov.w	ip, ip, rrx
  401b88:	f104 0401 	add.w	r4, r4, #1
  401b8c:	ea4f 5244 	mov.w	r2, r4, lsl #21
  401b90:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  401b94:	f080 809a 	bcs.w	401ccc <__adddf3+0x240>
  401b98:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  401b9c:	bf08      	it	eq
  401b9e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  401ba2:	f150 0000 	adcs.w	r0, r0, #0
  401ba6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401baa:	ea41 0105 	orr.w	r1, r1, r5
  401bae:	bd30      	pop	{r4, r5, pc}
  401bb0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  401bb4:	4140      	adcs	r0, r0
  401bb6:	eb41 0101 	adc.w	r1, r1, r1
  401bba:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401bbe:	f1a4 0401 	sub.w	r4, r4, #1
  401bc2:	d1e9      	bne.n	401b98 <__adddf3+0x10c>
  401bc4:	f091 0f00 	teq	r1, #0
  401bc8:	bf04      	itt	eq
  401bca:	4601      	moveq	r1, r0
  401bcc:	2000      	moveq	r0, #0
  401bce:	fab1 f381 	clz	r3, r1
  401bd2:	bf08      	it	eq
  401bd4:	3320      	addeq	r3, #32
  401bd6:	f1a3 030b 	sub.w	r3, r3, #11
  401bda:	f1b3 0220 	subs.w	r2, r3, #32
  401bde:	da0c      	bge.n	401bfa <__adddf3+0x16e>
  401be0:	320c      	adds	r2, #12
  401be2:	dd08      	ble.n	401bf6 <__adddf3+0x16a>
  401be4:	f102 0c14 	add.w	ip, r2, #20
  401be8:	f1c2 020c 	rsb	r2, r2, #12
  401bec:	fa01 f00c 	lsl.w	r0, r1, ip
  401bf0:	fa21 f102 	lsr.w	r1, r1, r2
  401bf4:	e00c      	b.n	401c10 <__adddf3+0x184>
  401bf6:	f102 0214 	add.w	r2, r2, #20
  401bfa:	bfd8      	it	le
  401bfc:	f1c2 0c20 	rsble	ip, r2, #32
  401c00:	fa01 f102 	lsl.w	r1, r1, r2
  401c04:	fa20 fc0c 	lsr.w	ip, r0, ip
  401c08:	bfdc      	itt	le
  401c0a:	ea41 010c 	orrle.w	r1, r1, ip
  401c0e:	4090      	lslle	r0, r2
  401c10:	1ae4      	subs	r4, r4, r3
  401c12:	bfa2      	ittt	ge
  401c14:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  401c18:	4329      	orrge	r1, r5
  401c1a:	bd30      	popge	{r4, r5, pc}
  401c1c:	ea6f 0404 	mvn.w	r4, r4
  401c20:	3c1f      	subs	r4, #31
  401c22:	da1c      	bge.n	401c5e <__adddf3+0x1d2>
  401c24:	340c      	adds	r4, #12
  401c26:	dc0e      	bgt.n	401c46 <__adddf3+0x1ba>
  401c28:	f104 0414 	add.w	r4, r4, #20
  401c2c:	f1c4 0220 	rsb	r2, r4, #32
  401c30:	fa20 f004 	lsr.w	r0, r0, r4
  401c34:	fa01 f302 	lsl.w	r3, r1, r2
  401c38:	ea40 0003 	orr.w	r0, r0, r3
  401c3c:	fa21 f304 	lsr.w	r3, r1, r4
  401c40:	ea45 0103 	orr.w	r1, r5, r3
  401c44:	bd30      	pop	{r4, r5, pc}
  401c46:	f1c4 040c 	rsb	r4, r4, #12
  401c4a:	f1c4 0220 	rsb	r2, r4, #32
  401c4e:	fa20 f002 	lsr.w	r0, r0, r2
  401c52:	fa01 f304 	lsl.w	r3, r1, r4
  401c56:	ea40 0003 	orr.w	r0, r0, r3
  401c5a:	4629      	mov	r1, r5
  401c5c:	bd30      	pop	{r4, r5, pc}
  401c5e:	fa21 f004 	lsr.w	r0, r1, r4
  401c62:	4629      	mov	r1, r5
  401c64:	bd30      	pop	{r4, r5, pc}
  401c66:	f094 0f00 	teq	r4, #0
  401c6a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  401c6e:	bf06      	itte	eq
  401c70:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  401c74:	3401      	addeq	r4, #1
  401c76:	3d01      	subne	r5, #1
  401c78:	e74e      	b.n	401b18 <__adddf3+0x8c>
  401c7a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  401c7e:	bf18      	it	ne
  401c80:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  401c84:	d029      	beq.n	401cda <__adddf3+0x24e>
  401c86:	ea94 0f05 	teq	r4, r5
  401c8a:	bf08      	it	eq
  401c8c:	ea90 0f02 	teqeq	r0, r2
  401c90:	d005      	beq.n	401c9e <__adddf3+0x212>
  401c92:	ea54 0c00 	orrs.w	ip, r4, r0
  401c96:	bf04      	itt	eq
  401c98:	4619      	moveq	r1, r3
  401c9a:	4610      	moveq	r0, r2
  401c9c:	bd30      	pop	{r4, r5, pc}
  401c9e:	ea91 0f03 	teq	r1, r3
  401ca2:	bf1e      	ittt	ne
  401ca4:	2100      	movne	r1, #0
  401ca6:	2000      	movne	r0, #0
  401ca8:	bd30      	popne	{r4, r5, pc}
  401caa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  401cae:	d105      	bne.n	401cbc <__adddf3+0x230>
  401cb0:	0040      	lsls	r0, r0, #1
  401cb2:	4149      	adcs	r1, r1
  401cb4:	bf28      	it	cs
  401cb6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  401cba:	bd30      	pop	{r4, r5, pc}
  401cbc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  401cc0:	bf3c      	itt	cc
  401cc2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  401cc6:	bd30      	popcc	{r4, r5, pc}
  401cc8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401ccc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  401cd0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  401cd4:	f04f 0000 	mov.w	r0, #0
  401cd8:	bd30      	pop	{r4, r5, pc}
  401cda:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  401cde:	bf1a      	itte	ne
  401ce0:	4619      	movne	r1, r3
  401ce2:	4610      	movne	r0, r2
  401ce4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  401ce8:	bf1c      	itt	ne
  401cea:	460b      	movne	r3, r1
  401cec:	4602      	movne	r2, r0
  401cee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  401cf2:	bf06      	itte	eq
  401cf4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  401cf8:	ea91 0f03 	teqeq	r1, r3
  401cfc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  401d00:	bd30      	pop	{r4, r5, pc}
  401d02:	bf00      	nop

00401d04 <__aeabi_ui2d>:
  401d04:	f090 0f00 	teq	r0, #0
  401d08:	bf04      	itt	eq
  401d0a:	2100      	moveq	r1, #0
  401d0c:	4770      	bxeq	lr
  401d0e:	b530      	push	{r4, r5, lr}
  401d10:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401d14:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401d18:	f04f 0500 	mov.w	r5, #0
  401d1c:	f04f 0100 	mov.w	r1, #0
  401d20:	e750      	b.n	401bc4 <__adddf3+0x138>
  401d22:	bf00      	nop

00401d24 <__aeabi_i2d>:
  401d24:	f090 0f00 	teq	r0, #0
  401d28:	bf04      	itt	eq
  401d2a:	2100      	moveq	r1, #0
  401d2c:	4770      	bxeq	lr
  401d2e:	b530      	push	{r4, r5, lr}
  401d30:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401d34:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401d38:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  401d3c:	bf48      	it	mi
  401d3e:	4240      	negmi	r0, r0
  401d40:	f04f 0100 	mov.w	r1, #0
  401d44:	e73e      	b.n	401bc4 <__adddf3+0x138>
  401d46:	bf00      	nop

00401d48 <__aeabi_f2d>:
  401d48:	0042      	lsls	r2, r0, #1
  401d4a:	ea4f 01e2 	mov.w	r1, r2, asr #3
  401d4e:	ea4f 0131 	mov.w	r1, r1, rrx
  401d52:	ea4f 7002 	mov.w	r0, r2, lsl #28
  401d56:	bf1f      	itttt	ne
  401d58:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  401d5c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  401d60:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  401d64:	4770      	bxne	lr
  401d66:	f092 0f00 	teq	r2, #0
  401d6a:	bf14      	ite	ne
  401d6c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  401d70:	4770      	bxeq	lr
  401d72:	b530      	push	{r4, r5, lr}
  401d74:	f44f 7460 	mov.w	r4, #896	; 0x380
  401d78:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401d7c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  401d80:	e720      	b.n	401bc4 <__adddf3+0x138>
  401d82:	bf00      	nop

00401d84 <__aeabi_ul2d>:
  401d84:	ea50 0201 	orrs.w	r2, r0, r1
  401d88:	bf08      	it	eq
  401d8a:	4770      	bxeq	lr
  401d8c:	b530      	push	{r4, r5, lr}
  401d8e:	f04f 0500 	mov.w	r5, #0
  401d92:	e00a      	b.n	401daa <__aeabi_l2d+0x16>

00401d94 <__aeabi_l2d>:
  401d94:	ea50 0201 	orrs.w	r2, r0, r1
  401d98:	bf08      	it	eq
  401d9a:	4770      	bxeq	lr
  401d9c:	b530      	push	{r4, r5, lr}
  401d9e:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  401da2:	d502      	bpl.n	401daa <__aeabi_l2d+0x16>
  401da4:	4240      	negs	r0, r0
  401da6:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401daa:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401dae:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401db2:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  401db6:	f43f aedc 	beq.w	401b72 <__adddf3+0xe6>
  401dba:	f04f 0203 	mov.w	r2, #3
  401dbe:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  401dc2:	bf18      	it	ne
  401dc4:	3203      	addne	r2, #3
  401dc6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  401dca:	bf18      	it	ne
  401dcc:	3203      	addne	r2, #3
  401dce:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  401dd2:	f1c2 0320 	rsb	r3, r2, #32
  401dd6:	fa00 fc03 	lsl.w	ip, r0, r3
  401dda:	fa20 f002 	lsr.w	r0, r0, r2
  401dde:	fa01 fe03 	lsl.w	lr, r1, r3
  401de2:	ea40 000e 	orr.w	r0, r0, lr
  401de6:	fa21 f102 	lsr.w	r1, r1, r2
  401dea:	4414      	add	r4, r2
  401dec:	e6c1      	b.n	401b72 <__adddf3+0xe6>
  401dee:	bf00      	nop

00401df0 <__aeabi_dmul>:
  401df0:	b570      	push	{r4, r5, r6, lr}
  401df2:	f04f 0cff 	mov.w	ip, #255	; 0xff
  401df6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  401dfa:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  401dfe:	bf1d      	ittte	ne
  401e00:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  401e04:	ea94 0f0c 	teqne	r4, ip
  401e08:	ea95 0f0c 	teqne	r5, ip
  401e0c:	f000 f8de 	bleq	401fcc <__aeabi_dmul+0x1dc>
  401e10:	442c      	add	r4, r5
  401e12:	ea81 0603 	eor.w	r6, r1, r3
  401e16:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  401e1a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  401e1e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  401e22:	bf18      	it	ne
  401e24:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  401e28:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401e2c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  401e30:	d038      	beq.n	401ea4 <__aeabi_dmul+0xb4>
  401e32:	fba0 ce02 	umull	ip, lr, r0, r2
  401e36:	f04f 0500 	mov.w	r5, #0
  401e3a:	fbe1 e502 	umlal	lr, r5, r1, r2
  401e3e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  401e42:	fbe0 e503 	umlal	lr, r5, r0, r3
  401e46:	f04f 0600 	mov.w	r6, #0
  401e4a:	fbe1 5603 	umlal	r5, r6, r1, r3
  401e4e:	f09c 0f00 	teq	ip, #0
  401e52:	bf18      	it	ne
  401e54:	f04e 0e01 	orrne.w	lr, lr, #1
  401e58:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  401e5c:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  401e60:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  401e64:	d204      	bcs.n	401e70 <__aeabi_dmul+0x80>
  401e66:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  401e6a:	416d      	adcs	r5, r5
  401e6c:	eb46 0606 	adc.w	r6, r6, r6
  401e70:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  401e74:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  401e78:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  401e7c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  401e80:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  401e84:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  401e88:	bf88      	it	hi
  401e8a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  401e8e:	d81e      	bhi.n	401ece <__aeabi_dmul+0xde>
  401e90:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  401e94:	bf08      	it	eq
  401e96:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  401e9a:	f150 0000 	adcs.w	r0, r0, #0
  401e9e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401ea2:	bd70      	pop	{r4, r5, r6, pc}
  401ea4:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  401ea8:	ea46 0101 	orr.w	r1, r6, r1
  401eac:	ea40 0002 	orr.w	r0, r0, r2
  401eb0:	ea81 0103 	eor.w	r1, r1, r3
  401eb4:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  401eb8:	bfc2      	ittt	gt
  401eba:	ebd4 050c 	rsbsgt	r5, r4, ip
  401ebe:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  401ec2:	bd70      	popgt	{r4, r5, r6, pc}
  401ec4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401ec8:	f04f 0e00 	mov.w	lr, #0
  401ecc:	3c01      	subs	r4, #1
  401ece:	f300 80ab 	bgt.w	402028 <__aeabi_dmul+0x238>
  401ed2:	f114 0f36 	cmn.w	r4, #54	; 0x36
  401ed6:	bfde      	ittt	le
  401ed8:	2000      	movle	r0, #0
  401eda:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  401ede:	bd70      	pople	{r4, r5, r6, pc}
  401ee0:	f1c4 0400 	rsb	r4, r4, #0
  401ee4:	3c20      	subs	r4, #32
  401ee6:	da35      	bge.n	401f54 <__aeabi_dmul+0x164>
  401ee8:	340c      	adds	r4, #12
  401eea:	dc1b      	bgt.n	401f24 <__aeabi_dmul+0x134>
  401eec:	f104 0414 	add.w	r4, r4, #20
  401ef0:	f1c4 0520 	rsb	r5, r4, #32
  401ef4:	fa00 f305 	lsl.w	r3, r0, r5
  401ef8:	fa20 f004 	lsr.w	r0, r0, r4
  401efc:	fa01 f205 	lsl.w	r2, r1, r5
  401f00:	ea40 0002 	orr.w	r0, r0, r2
  401f04:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  401f08:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  401f0c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  401f10:	fa21 f604 	lsr.w	r6, r1, r4
  401f14:	eb42 0106 	adc.w	r1, r2, r6
  401f18:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401f1c:	bf08      	it	eq
  401f1e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401f22:	bd70      	pop	{r4, r5, r6, pc}
  401f24:	f1c4 040c 	rsb	r4, r4, #12
  401f28:	f1c4 0520 	rsb	r5, r4, #32
  401f2c:	fa00 f304 	lsl.w	r3, r0, r4
  401f30:	fa20 f005 	lsr.w	r0, r0, r5
  401f34:	fa01 f204 	lsl.w	r2, r1, r4
  401f38:	ea40 0002 	orr.w	r0, r0, r2
  401f3c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401f40:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  401f44:	f141 0100 	adc.w	r1, r1, #0
  401f48:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401f4c:	bf08      	it	eq
  401f4e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401f52:	bd70      	pop	{r4, r5, r6, pc}
  401f54:	f1c4 0520 	rsb	r5, r4, #32
  401f58:	fa00 f205 	lsl.w	r2, r0, r5
  401f5c:	ea4e 0e02 	orr.w	lr, lr, r2
  401f60:	fa20 f304 	lsr.w	r3, r0, r4
  401f64:	fa01 f205 	lsl.w	r2, r1, r5
  401f68:	ea43 0302 	orr.w	r3, r3, r2
  401f6c:	fa21 f004 	lsr.w	r0, r1, r4
  401f70:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401f74:	fa21 f204 	lsr.w	r2, r1, r4
  401f78:	ea20 0002 	bic.w	r0, r0, r2
  401f7c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  401f80:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401f84:	bf08      	it	eq
  401f86:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401f8a:	bd70      	pop	{r4, r5, r6, pc}
  401f8c:	f094 0f00 	teq	r4, #0
  401f90:	d10f      	bne.n	401fb2 <__aeabi_dmul+0x1c2>
  401f92:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  401f96:	0040      	lsls	r0, r0, #1
  401f98:	eb41 0101 	adc.w	r1, r1, r1
  401f9c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401fa0:	bf08      	it	eq
  401fa2:	3c01      	subeq	r4, #1
  401fa4:	d0f7      	beq.n	401f96 <__aeabi_dmul+0x1a6>
  401fa6:	ea41 0106 	orr.w	r1, r1, r6
  401faa:	f095 0f00 	teq	r5, #0
  401fae:	bf18      	it	ne
  401fb0:	4770      	bxne	lr
  401fb2:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  401fb6:	0052      	lsls	r2, r2, #1
  401fb8:	eb43 0303 	adc.w	r3, r3, r3
  401fbc:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  401fc0:	bf08      	it	eq
  401fc2:	3d01      	subeq	r5, #1
  401fc4:	d0f7      	beq.n	401fb6 <__aeabi_dmul+0x1c6>
  401fc6:	ea43 0306 	orr.w	r3, r3, r6
  401fca:	4770      	bx	lr
  401fcc:	ea94 0f0c 	teq	r4, ip
  401fd0:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  401fd4:	bf18      	it	ne
  401fd6:	ea95 0f0c 	teqne	r5, ip
  401fda:	d00c      	beq.n	401ff6 <__aeabi_dmul+0x206>
  401fdc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401fe0:	bf18      	it	ne
  401fe2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  401fe6:	d1d1      	bne.n	401f8c <__aeabi_dmul+0x19c>
  401fe8:	ea81 0103 	eor.w	r1, r1, r3
  401fec:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401ff0:	f04f 0000 	mov.w	r0, #0
  401ff4:	bd70      	pop	{r4, r5, r6, pc}
  401ff6:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401ffa:	bf06      	itte	eq
  401ffc:	4610      	moveq	r0, r2
  401ffe:	4619      	moveq	r1, r3
  402000:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  402004:	d019      	beq.n	40203a <__aeabi_dmul+0x24a>
  402006:	ea94 0f0c 	teq	r4, ip
  40200a:	d102      	bne.n	402012 <__aeabi_dmul+0x222>
  40200c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  402010:	d113      	bne.n	40203a <__aeabi_dmul+0x24a>
  402012:	ea95 0f0c 	teq	r5, ip
  402016:	d105      	bne.n	402024 <__aeabi_dmul+0x234>
  402018:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  40201c:	bf1c      	itt	ne
  40201e:	4610      	movne	r0, r2
  402020:	4619      	movne	r1, r3
  402022:	d10a      	bne.n	40203a <__aeabi_dmul+0x24a>
  402024:	ea81 0103 	eor.w	r1, r1, r3
  402028:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  40202c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  402030:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  402034:	f04f 0000 	mov.w	r0, #0
  402038:	bd70      	pop	{r4, r5, r6, pc}
  40203a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  40203e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  402042:	bd70      	pop	{r4, r5, r6, pc}

00402044 <__aeabi_ddiv>:
  402044:	b570      	push	{r4, r5, r6, lr}
  402046:	f04f 0cff 	mov.w	ip, #255	; 0xff
  40204a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  40204e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  402052:	bf1d      	ittte	ne
  402054:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  402058:	ea94 0f0c 	teqne	r4, ip
  40205c:	ea95 0f0c 	teqne	r5, ip
  402060:	f000 f8a7 	bleq	4021b2 <__aeabi_ddiv+0x16e>
  402064:	eba4 0405 	sub.w	r4, r4, r5
  402068:	ea81 0e03 	eor.w	lr, r1, r3
  40206c:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  402070:	ea4f 3101 	mov.w	r1, r1, lsl #12
  402074:	f000 8088 	beq.w	402188 <__aeabi_ddiv+0x144>
  402078:	ea4f 3303 	mov.w	r3, r3, lsl #12
  40207c:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  402080:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  402084:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  402088:	ea4f 2202 	mov.w	r2, r2, lsl #8
  40208c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  402090:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  402094:	ea4f 2600 	mov.w	r6, r0, lsl #8
  402098:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  40209c:	429d      	cmp	r5, r3
  40209e:	bf08      	it	eq
  4020a0:	4296      	cmpeq	r6, r2
  4020a2:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  4020a6:	f504 7440 	add.w	r4, r4, #768	; 0x300
  4020aa:	d202      	bcs.n	4020b2 <__aeabi_ddiv+0x6e>
  4020ac:	085b      	lsrs	r3, r3, #1
  4020ae:	ea4f 0232 	mov.w	r2, r2, rrx
  4020b2:	1ab6      	subs	r6, r6, r2
  4020b4:	eb65 0503 	sbc.w	r5, r5, r3
  4020b8:	085b      	lsrs	r3, r3, #1
  4020ba:	ea4f 0232 	mov.w	r2, r2, rrx
  4020be:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  4020c2:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  4020c6:	ebb6 0e02 	subs.w	lr, r6, r2
  4020ca:	eb75 0e03 	sbcs.w	lr, r5, r3
  4020ce:	bf22      	ittt	cs
  4020d0:	1ab6      	subcs	r6, r6, r2
  4020d2:	4675      	movcs	r5, lr
  4020d4:	ea40 000c 	orrcs.w	r0, r0, ip
  4020d8:	085b      	lsrs	r3, r3, #1
  4020da:	ea4f 0232 	mov.w	r2, r2, rrx
  4020de:	ebb6 0e02 	subs.w	lr, r6, r2
  4020e2:	eb75 0e03 	sbcs.w	lr, r5, r3
  4020e6:	bf22      	ittt	cs
  4020e8:	1ab6      	subcs	r6, r6, r2
  4020ea:	4675      	movcs	r5, lr
  4020ec:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  4020f0:	085b      	lsrs	r3, r3, #1
  4020f2:	ea4f 0232 	mov.w	r2, r2, rrx
  4020f6:	ebb6 0e02 	subs.w	lr, r6, r2
  4020fa:	eb75 0e03 	sbcs.w	lr, r5, r3
  4020fe:	bf22      	ittt	cs
  402100:	1ab6      	subcs	r6, r6, r2
  402102:	4675      	movcs	r5, lr
  402104:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  402108:	085b      	lsrs	r3, r3, #1
  40210a:	ea4f 0232 	mov.w	r2, r2, rrx
  40210e:	ebb6 0e02 	subs.w	lr, r6, r2
  402112:	eb75 0e03 	sbcs.w	lr, r5, r3
  402116:	bf22      	ittt	cs
  402118:	1ab6      	subcs	r6, r6, r2
  40211a:	4675      	movcs	r5, lr
  40211c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  402120:	ea55 0e06 	orrs.w	lr, r5, r6
  402124:	d018      	beq.n	402158 <__aeabi_ddiv+0x114>
  402126:	ea4f 1505 	mov.w	r5, r5, lsl #4
  40212a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  40212e:	ea4f 1606 	mov.w	r6, r6, lsl #4
  402132:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  402136:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  40213a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  40213e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  402142:	d1c0      	bne.n	4020c6 <__aeabi_ddiv+0x82>
  402144:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  402148:	d10b      	bne.n	402162 <__aeabi_ddiv+0x11e>
  40214a:	ea41 0100 	orr.w	r1, r1, r0
  40214e:	f04f 0000 	mov.w	r0, #0
  402152:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  402156:	e7b6      	b.n	4020c6 <__aeabi_ddiv+0x82>
  402158:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  40215c:	bf04      	itt	eq
  40215e:	4301      	orreq	r1, r0
  402160:	2000      	moveq	r0, #0
  402162:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  402166:	bf88      	it	hi
  402168:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  40216c:	f63f aeaf 	bhi.w	401ece <__aeabi_dmul+0xde>
  402170:	ebb5 0c03 	subs.w	ip, r5, r3
  402174:	bf04      	itt	eq
  402176:	ebb6 0c02 	subseq.w	ip, r6, r2
  40217a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  40217e:	f150 0000 	adcs.w	r0, r0, #0
  402182:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  402186:	bd70      	pop	{r4, r5, r6, pc}
  402188:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  40218c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  402190:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  402194:	bfc2      	ittt	gt
  402196:	ebd4 050c 	rsbsgt	r5, r4, ip
  40219a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  40219e:	bd70      	popgt	{r4, r5, r6, pc}
  4021a0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4021a4:	f04f 0e00 	mov.w	lr, #0
  4021a8:	3c01      	subs	r4, #1
  4021aa:	e690      	b.n	401ece <__aeabi_dmul+0xde>
  4021ac:	ea45 0e06 	orr.w	lr, r5, r6
  4021b0:	e68d      	b.n	401ece <__aeabi_dmul+0xde>
  4021b2:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  4021b6:	ea94 0f0c 	teq	r4, ip
  4021ba:	bf08      	it	eq
  4021bc:	ea95 0f0c 	teqeq	r5, ip
  4021c0:	f43f af3b 	beq.w	40203a <__aeabi_dmul+0x24a>
  4021c4:	ea94 0f0c 	teq	r4, ip
  4021c8:	d10a      	bne.n	4021e0 <__aeabi_ddiv+0x19c>
  4021ca:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  4021ce:	f47f af34 	bne.w	40203a <__aeabi_dmul+0x24a>
  4021d2:	ea95 0f0c 	teq	r5, ip
  4021d6:	f47f af25 	bne.w	402024 <__aeabi_dmul+0x234>
  4021da:	4610      	mov	r0, r2
  4021dc:	4619      	mov	r1, r3
  4021de:	e72c      	b.n	40203a <__aeabi_dmul+0x24a>
  4021e0:	ea95 0f0c 	teq	r5, ip
  4021e4:	d106      	bne.n	4021f4 <__aeabi_ddiv+0x1b0>
  4021e6:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  4021ea:	f43f aefd 	beq.w	401fe8 <__aeabi_dmul+0x1f8>
  4021ee:	4610      	mov	r0, r2
  4021f0:	4619      	mov	r1, r3
  4021f2:	e722      	b.n	40203a <__aeabi_dmul+0x24a>
  4021f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  4021f8:	bf18      	it	ne
  4021fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  4021fe:	f47f aec5 	bne.w	401f8c <__aeabi_dmul+0x19c>
  402202:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  402206:	f47f af0d 	bne.w	402024 <__aeabi_dmul+0x234>
  40220a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  40220e:	f47f aeeb 	bne.w	401fe8 <__aeabi_dmul+0x1f8>
  402212:	e712      	b.n	40203a <__aeabi_dmul+0x24a>

00402214 <__aeabi_d2f>:
  402214:	ea4f 0241 	mov.w	r2, r1, lsl #1
  402218:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
  40221c:	bf24      	itt	cs
  40221e:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
  402222:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
  402226:	d90d      	bls.n	402244 <__aeabi_d2f+0x30>
  402228:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
  40222c:	ea4f 02c0 	mov.w	r2, r0, lsl #3
  402230:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
  402234:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
  402238:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
  40223c:	bf08      	it	eq
  40223e:	f020 0001 	biceq.w	r0, r0, #1
  402242:	4770      	bx	lr
  402244:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
  402248:	d121      	bne.n	40228e <__aeabi_d2f+0x7a>
  40224a:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
  40224e:	bfbc      	itt	lt
  402250:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
  402254:	4770      	bxlt	lr
  402256:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  40225a:	ea4f 5252 	mov.w	r2, r2, lsr #21
  40225e:	f1c2 0218 	rsb	r2, r2, #24
  402262:	f1c2 0c20 	rsb	ip, r2, #32
  402266:	fa10 f30c 	lsls.w	r3, r0, ip
  40226a:	fa20 f002 	lsr.w	r0, r0, r2
  40226e:	bf18      	it	ne
  402270:	f040 0001 	orrne.w	r0, r0, #1
  402274:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  402278:	ea4f 23d3 	mov.w	r3, r3, lsr #11
  40227c:	fa03 fc0c 	lsl.w	ip, r3, ip
  402280:	ea40 000c 	orr.w	r0, r0, ip
  402284:	fa23 f302 	lsr.w	r3, r3, r2
  402288:	ea4f 0343 	mov.w	r3, r3, lsl #1
  40228c:	e7cc      	b.n	402228 <__aeabi_d2f+0x14>
  40228e:	ea7f 5362 	mvns.w	r3, r2, asr #21
  402292:	d107      	bne.n	4022a4 <__aeabi_d2f+0x90>
  402294:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
  402298:	bf1e      	ittt	ne
  40229a:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
  40229e:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
  4022a2:	4770      	bxne	lr
  4022a4:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
  4022a8:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  4022ac:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  4022b0:	4770      	bx	lr
  4022b2:	bf00      	nop

004022b4 <__libc_init_array>:
  4022b4:	b570      	push	{r4, r5, r6, lr}
  4022b6:	4e0f      	ldr	r6, [pc, #60]	; (4022f4 <__libc_init_array+0x40>)
  4022b8:	4d0f      	ldr	r5, [pc, #60]	; (4022f8 <__libc_init_array+0x44>)
  4022ba:	1b76      	subs	r6, r6, r5
  4022bc:	10b6      	asrs	r6, r6, #2
  4022be:	bf18      	it	ne
  4022c0:	2400      	movne	r4, #0
  4022c2:	d005      	beq.n	4022d0 <__libc_init_array+0x1c>
  4022c4:	3401      	adds	r4, #1
  4022c6:	f855 3b04 	ldr.w	r3, [r5], #4
  4022ca:	4798      	blx	r3
  4022cc:	42a6      	cmp	r6, r4
  4022ce:	d1f9      	bne.n	4022c4 <__libc_init_array+0x10>
  4022d0:	4e0a      	ldr	r6, [pc, #40]	; (4022fc <__libc_init_array+0x48>)
  4022d2:	4d0b      	ldr	r5, [pc, #44]	; (402300 <__libc_init_array+0x4c>)
  4022d4:	1b76      	subs	r6, r6, r5
  4022d6:	f004 ff23 	bl	407120 <_init>
  4022da:	10b6      	asrs	r6, r6, #2
  4022dc:	bf18      	it	ne
  4022de:	2400      	movne	r4, #0
  4022e0:	d006      	beq.n	4022f0 <__libc_init_array+0x3c>
  4022e2:	3401      	adds	r4, #1
  4022e4:	f855 3b04 	ldr.w	r3, [r5], #4
  4022e8:	4798      	blx	r3
  4022ea:	42a6      	cmp	r6, r4
  4022ec:	d1f9      	bne.n	4022e2 <__libc_init_array+0x2e>
  4022ee:	bd70      	pop	{r4, r5, r6, pc}
  4022f0:	bd70      	pop	{r4, r5, r6, pc}
  4022f2:	bf00      	nop
  4022f4:	0040712c 	.word	0x0040712c
  4022f8:	0040712c 	.word	0x0040712c
  4022fc:	00407134 	.word	0x00407134
  402300:	0040712c 	.word	0x0040712c

00402304 <memset>:
  402304:	b470      	push	{r4, r5, r6}
  402306:	0786      	lsls	r6, r0, #30
  402308:	d046      	beq.n	402398 <memset+0x94>
  40230a:	1e54      	subs	r4, r2, #1
  40230c:	2a00      	cmp	r2, #0
  40230e:	d041      	beq.n	402394 <memset+0x90>
  402310:	b2ca      	uxtb	r2, r1
  402312:	4603      	mov	r3, r0
  402314:	e002      	b.n	40231c <memset+0x18>
  402316:	f114 34ff 	adds.w	r4, r4, #4294967295
  40231a:	d33b      	bcc.n	402394 <memset+0x90>
  40231c:	f803 2b01 	strb.w	r2, [r3], #1
  402320:	079d      	lsls	r5, r3, #30
  402322:	d1f8      	bne.n	402316 <memset+0x12>
  402324:	2c03      	cmp	r4, #3
  402326:	d92e      	bls.n	402386 <memset+0x82>
  402328:	b2cd      	uxtb	r5, r1
  40232a:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  40232e:	2c0f      	cmp	r4, #15
  402330:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  402334:	d919      	bls.n	40236a <memset+0x66>
  402336:	f103 0210 	add.w	r2, r3, #16
  40233a:	4626      	mov	r6, r4
  40233c:	3e10      	subs	r6, #16
  40233e:	2e0f      	cmp	r6, #15
  402340:	f842 5c10 	str.w	r5, [r2, #-16]
  402344:	f842 5c0c 	str.w	r5, [r2, #-12]
  402348:	f842 5c08 	str.w	r5, [r2, #-8]
  40234c:	f842 5c04 	str.w	r5, [r2, #-4]
  402350:	f102 0210 	add.w	r2, r2, #16
  402354:	d8f2      	bhi.n	40233c <memset+0x38>
  402356:	f1a4 0210 	sub.w	r2, r4, #16
  40235a:	f022 020f 	bic.w	r2, r2, #15
  40235e:	f004 040f 	and.w	r4, r4, #15
  402362:	3210      	adds	r2, #16
  402364:	2c03      	cmp	r4, #3
  402366:	4413      	add	r3, r2
  402368:	d90d      	bls.n	402386 <memset+0x82>
  40236a:	461e      	mov	r6, r3
  40236c:	4622      	mov	r2, r4
  40236e:	3a04      	subs	r2, #4
  402370:	2a03      	cmp	r2, #3
  402372:	f846 5b04 	str.w	r5, [r6], #4
  402376:	d8fa      	bhi.n	40236e <memset+0x6a>
  402378:	1f22      	subs	r2, r4, #4
  40237a:	f022 0203 	bic.w	r2, r2, #3
  40237e:	3204      	adds	r2, #4
  402380:	4413      	add	r3, r2
  402382:	f004 0403 	and.w	r4, r4, #3
  402386:	b12c      	cbz	r4, 402394 <memset+0x90>
  402388:	b2c9      	uxtb	r1, r1
  40238a:	441c      	add	r4, r3
  40238c:	f803 1b01 	strb.w	r1, [r3], #1
  402390:	429c      	cmp	r4, r3
  402392:	d1fb      	bne.n	40238c <memset+0x88>
  402394:	bc70      	pop	{r4, r5, r6}
  402396:	4770      	bx	lr
  402398:	4614      	mov	r4, r2
  40239a:	4603      	mov	r3, r0
  40239c:	e7c2      	b.n	402324 <memset+0x20>
  40239e:	bf00      	nop

004023a0 <sprintf>:
  4023a0:	b40e      	push	{r1, r2, r3}
  4023a2:	b5f0      	push	{r4, r5, r6, r7, lr}
  4023a4:	b09c      	sub	sp, #112	; 0x70
  4023a6:	ab21      	add	r3, sp, #132	; 0x84
  4023a8:	490f      	ldr	r1, [pc, #60]	; (4023e8 <sprintf+0x48>)
  4023aa:	f853 2b04 	ldr.w	r2, [r3], #4
  4023ae:	9301      	str	r3, [sp, #4]
  4023b0:	4605      	mov	r5, r0
  4023b2:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  4023b6:	6808      	ldr	r0, [r1, #0]
  4023b8:	9502      	str	r5, [sp, #8]
  4023ba:	f44f 7702 	mov.w	r7, #520	; 0x208
  4023be:	f64f 76ff 	movw	r6, #65535	; 0xffff
  4023c2:	a902      	add	r1, sp, #8
  4023c4:	9506      	str	r5, [sp, #24]
  4023c6:	f8ad 7014 	strh.w	r7, [sp, #20]
  4023ca:	9404      	str	r4, [sp, #16]
  4023cc:	9407      	str	r4, [sp, #28]
  4023ce:	f8ad 6016 	strh.w	r6, [sp, #22]
  4023d2:	f000 f80b 	bl	4023ec <_svfprintf_r>
  4023d6:	9b02      	ldr	r3, [sp, #8]
  4023d8:	2200      	movs	r2, #0
  4023da:	701a      	strb	r2, [r3, #0]
  4023dc:	b01c      	add	sp, #112	; 0x70
  4023de:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  4023e2:	b003      	add	sp, #12
  4023e4:	4770      	bx	lr
  4023e6:	bf00      	nop
  4023e8:	20400020 	.word	0x20400020

004023ec <_svfprintf_r>:
  4023ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4023f0:	b0c3      	sub	sp, #268	; 0x10c
  4023f2:	460c      	mov	r4, r1
  4023f4:	910b      	str	r1, [sp, #44]	; 0x2c
  4023f6:	4692      	mov	sl, r2
  4023f8:	930f      	str	r3, [sp, #60]	; 0x3c
  4023fa:	900c      	str	r0, [sp, #48]	; 0x30
  4023fc:	f002 fa0c 	bl	404818 <_localeconv_r>
  402400:	6803      	ldr	r3, [r0, #0]
  402402:	931a      	str	r3, [sp, #104]	; 0x68
  402404:	4618      	mov	r0, r3
  402406:	f003 f8db 	bl	4055c0 <strlen>
  40240a:	89a3      	ldrh	r3, [r4, #12]
  40240c:	9019      	str	r0, [sp, #100]	; 0x64
  40240e:	0619      	lsls	r1, r3, #24
  402410:	d503      	bpl.n	40241a <_svfprintf_r+0x2e>
  402412:	6923      	ldr	r3, [r4, #16]
  402414:	2b00      	cmp	r3, #0
  402416:	f001 8003 	beq.w	403420 <_svfprintf_r+0x1034>
  40241a:	2300      	movs	r3, #0
  40241c:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  402420:	9313      	str	r3, [sp, #76]	; 0x4c
  402422:	9315      	str	r3, [sp, #84]	; 0x54
  402424:	9314      	str	r3, [sp, #80]	; 0x50
  402426:	9327      	str	r3, [sp, #156]	; 0x9c
  402428:	9326      	str	r3, [sp, #152]	; 0x98
  40242a:	9318      	str	r3, [sp, #96]	; 0x60
  40242c:	931b      	str	r3, [sp, #108]	; 0x6c
  40242e:	9309      	str	r3, [sp, #36]	; 0x24
  402430:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  402434:	46c8      	mov	r8, r9
  402436:	9316      	str	r3, [sp, #88]	; 0x58
  402438:	9317      	str	r3, [sp, #92]	; 0x5c
  40243a:	f89a 3000 	ldrb.w	r3, [sl]
  40243e:	4654      	mov	r4, sl
  402440:	b1e3      	cbz	r3, 40247c <_svfprintf_r+0x90>
  402442:	2b25      	cmp	r3, #37	; 0x25
  402444:	d102      	bne.n	40244c <_svfprintf_r+0x60>
  402446:	e019      	b.n	40247c <_svfprintf_r+0x90>
  402448:	2b25      	cmp	r3, #37	; 0x25
  40244a:	d003      	beq.n	402454 <_svfprintf_r+0x68>
  40244c:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  402450:	2b00      	cmp	r3, #0
  402452:	d1f9      	bne.n	402448 <_svfprintf_r+0x5c>
  402454:	eba4 050a 	sub.w	r5, r4, sl
  402458:	b185      	cbz	r5, 40247c <_svfprintf_r+0x90>
  40245a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40245c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40245e:	f8c8 a000 	str.w	sl, [r8]
  402462:	3301      	adds	r3, #1
  402464:	442a      	add	r2, r5
  402466:	2b07      	cmp	r3, #7
  402468:	f8c8 5004 	str.w	r5, [r8, #4]
  40246c:	9227      	str	r2, [sp, #156]	; 0x9c
  40246e:	9326      	str	r3, [sp, #152]	; 0x98
  402470:	dc7f      	bgt.n	402572 <_svfprintf_r+0x186>
  402472:	f108 0808 	add.w	r8, r8, #8
  402476:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402478:	442b      	add	r3, r5
  40247a:	9309      	str	r3, [sp, #36]	; 0x24
  40247c:	7823      	ldrb	r3, [r4, #0]
  40247e:	2b00      	cmp	r3, #0
  402480:	d07f      	beq.n	402582 <_svfprintf_r+0x196>
  402482:	2300      	movs	r3, #0
  402484:	461a      	mov	r2, r3
  402486:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  40248a:	4619      	mov	r1, r3
  40248c:	930d      	str	r3, [sp, #52]	; 0x34
  40248e:	469b      	mov	fp, r3
  402490:	f04f 30ff 	mov.w	r0, #4294967295
  402494:	7863      	ldrb	r3, [r4, #1]
  402496:	900a      	str	r0, [sp, #40]	; 0x28
  402498:	f104 0a01 	add.w	sl, r4, #1
  40249c:	f10a 0a01 	add.w	sl, sl, #1
  4024a0:	f1a3 0020 	sub.w	r0, r3, #32
  4024a4:	2858      	cmp	r0, #88	; 0x58
  4024a6:	f200 83c1 	bhi.w	402c2c <_svfprintf_r+0x840>
  4024aa:	e8df f010 	tbh	[pc, r0, lsl #1]
  4024ae:	0238      	.short	0x0238
  4024b0:	03bf03bf 	.word	0x03bf03bf
  4024b4:	03bf0240 	.word	0x03bf0240
  4024b8:	03bf03bf 	.word	0x03bf03bf
  4024bc:	03bf03bf 	.word	0x03bf03bf
  4024c0:	024503bf 	.word	0x024503bf
  4024c4:	03bf0203 	.word	0x03bf0203
  4024c8:	026b005d 	.word	0x026b005d
  4024cc:	028603bf 	.word	0x028603bf
  4024d0:	039d039d 	.word	0x039d039d
  4024d4:	039d039d 	.word	0x039d039d
  4024d8:	039d039d 	.word	0x039d039d
  4024dc:	039d039d 	.word	0x039d039d
  4024e0:	03bf039d 	.word	0x03bf039d
  4024e4:	03bf03bf 	.word	0x03bf03bf
  4024e8:	03bf03bf 	.word	0x03bf03bf
  4024ec:	03bf03bf 	.word	0x03bf03bf
  4024f0:	03bf03bf 	.word	0x03bf03bf
  4024f4:	033703bf 	.word	0x033703bf
  4024f8:	03bf0357 	.word	0x03bf0357
  4024fc:	03bf0357 	.word	0x03bf0357
  402500:	03bf03bf 	.word	0x03bf03bf
  402504:	039803bf 	.word	0x039803bf
  402508:	03bf03bf 	.word	0x03bf03bf
  40250c:	03bf03ad 	.word	0x03bf03ad
  402510:	03bf03bf 	.word	0x03bf03bf
  402514:	03bf03bf 	.word	0x03bf03bf
  402518:	03bf0259 	.word	0x03bf0259
  40251c:	031e03bf 	.word	0x031e03bf
  402520:	03bf03bf 	.word	0x03bf03bf
  402524:	03bf03bf 	.word	0x03bf03bf
  402528:	03bf03bf 	.word	0x03bf03bf
  40252c:	03bf03bf 	.word	0x03bf03bf
  402530:	03bf03bf 	.word	0x03bf03bf
  402534:	02db02c6 	.word	0x02db02c6
  402538:	03570357 	.word	0x03570357
  40253c:	028b0357 	.word	0x028b0357
  402540:	03bf02db 	.word	0x03bf02db
  402544:	029003bf 	.word	0x029003bf
  402548:	029d03bf 	.word	0x029d03bf
  40254c:	02b401cc 	.word	0x02b401cc
  402550:	03bf0208 	.word	0x03bf0208
  402554:	03bf01e1 	.word	0x03bf01e1
  402558:	03bf007e 	.word	0x03bf007e
  40255c:	020d03bf 	.word	0x020d03bf
  402560:	980d      	ldr	r0, [sp, #52]	; 0x34
  402562:	930f      	str	r3, [sp, #60]	; 0x3c
  402564:	4240      	negs	r0, r0
  402566:	900d      	str	r0, [sp, #52]	; 0x34
  402568:	f04b 0b04 	orr.w	fp, fp, #4
  40256c:	f89a 3000 	ldrb.w	r3, [sl]
  402570:	e794      	b.n	40249c <_svfprintf_r+0xb0>
  402572:	aa25      	add	r2, sp, #148	; 0x94
  402574:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402576:	980c      	ldr	r0, [sp, #48]	; 0x30
  402578:	f003 f890 	bl	40569c <__ssprint_r>
  40257c:	b940      	cbnz	r0, 402590 <_svfprintf_r+0x1a4>
  40257e:	46c8      	mov	r8, r9
  402580:	e779      	b.n	402476 <_svfprintf_r+0x8a>
  402582:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  402584:	b123      	cbz	r3, 402590 <_svfprintf_r+0x1a4>
  402586:	980c      	ldr	r0, [sp, #48]	; 0x30
  402588:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40258a:	aa25      	add	r2, sp, #148	; 0x94
  40258c:	f003 f886 	bl	40569c <__ssprint_r>
  402590:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  402592:	899b      	ldrh	r3, [r3, #12]
  402594:	f013 0f40 	tst.w	r3, #64	; 0x40
  402598:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40259a:	bf18      	it	ne
  40259c:	f04f 33ff 	movne.w	r3, #4294967295
  4025a0:	9309      	str	r3, [sp, #36]	; 0x24
  4025a2:	9809      	ldr	r0, [sp, #36]	; 0x24
  4025a4:	b043      	add	sp, #268	; 0x10c
  4025a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4025aa:	f01b 0f20 	tst.w	fp, #32
  4025ae:	9311      	str	r3, [sp, #68]	; 0x44
  4025b0:	f040 81dd 	bne.w	40296e <_svfprintf_r+0x582>
  4025b4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4025b6:	f01b 0f10 	tst.w	fp, #16
  4025ba:	4613      	mov	r3, r2
  4025bc:	f040 856e 	bne.w	40309c <_svfprintf_r+0xcb0>
  4025c0:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4025c4:	f000 856a 	beq.w	40309c <_svfprintf_r+0xcb0>
  4025c8:	8814      	ldrh	r4, [r2, #0]
  4025ca:	3204      	adds	r2, #4
  4025cc:	2500      	movs	r5, #0
  4025ce:	2301      	movs	r3, #1
  4025d0:	920f      	str	r2, [sp, #60]	; 0x3c
  4025d2:	2700      	movs	r7, #0
  4025d4:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4025d8:	990a      	ldr	r1, [sp, #40]	; 0x28
  4025da:	1c4a      	adds	r2, r1, #1
  4025dc:	f000 8265 	beq.w	402aaa <_svfprintf_r+0x6be>
  4025e0:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  4025e4:	9207      	str	r2, [sp, #28]
  4025e6:	ea54 0205 	orrs.w	r2, r4, r5
  4025ea:	f040 8264 	bne.w	402ab6 <_svfprintf_r+0x6ca>
  4025ee:	2900      	cmp	r1, #0
  4025f0:	f040 843c 	bne.w	402e6c <_svfprintf_r+0xa80>
  4025f4:	2b00      	cmp	r3, #0
  4025f6:	f040 84d7 	bne.w	402fa8 <_svfprintf_r+0xbbc>
  4025fa:	f01b 0301 	ands.w	r3, fp, #1
  4025fe:	930e      	str	r3, [sp, #56]	; 0x38
  402600:	f000 8604 	beq.w	40320c <_svfprintf_r+0xe20>
  402604:	ae42      	add	r6, sp, #264	; 0x108
  402606:	2330      	movs	r3, #48	; 0x30
  402608:	f806 3d41 	strb.w	r3, [r6, #-65]!
  40260c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40260e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402610:	4293      	cmp	r3, r2
  402612:	bfb8      	it	lt
  402614:	4613      	movlt	r3, r2
  402616:	9308      	str	r3, [sp, #32]
  402618:	2300      	movs	r3, #0
  40261a:	9312      	str	r3, [sp, #72]	; 0x48
  40261c:	b117      	cbz	r7, 402624 <_svfprintf_r+0x238>
  40261e:	9b08      	ldr	r3, [sp, #32]
  402620:	3301      	adds	r3, #1
  402622:	9308      	str	r3, [sp, #32]
  402624:	9b07      	ldr	r3, [sp, #28]
  402626:	f013 0302 	ands.w	r3, r3, #2
  40262a:	9310      	str	r3, [sp, #64]	; 0x40
  40262c:	d002      	beq.n	402634 <_svfprintf_r+0x248>
  40262e:	9b08      	ldr	r3, [sp, #32]
  402630:	3302      	adds	r3, #2
  402632:	9308      	str	r3, [sp, #32]
  402634:	9b07      	ldr	r3, [sp, #28]
  402636:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  40263a:	f040 830e 	bne.w	402c5a <_svfprintf_r+0x86e>
  40263e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402640:	9a08      	ldr	r2, [sp, #32]
  402642:	eba3 0b02 	sub.w	fp, r3, r2
  402646:	f1bb 0f00 	cmp.w	fp, #0
  40264a:	f340 8306 	ble.w	402c5a <_svfprintf_r+0x86e>
  40264e:	f1bb 0f10 	cmp.w	fp, #16
  402652:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402654:	9a26      	ldr	r2, [sp, #152]	; 0x98
  402656:	dd29      	ble.n	4026ac <_svfprintf_r+0x2c0>
  402658:	4643      	mov	r3, r8
  40265a:	4621      	mov	r1, r4
  40265c:	46a8      	mov	r8, r5
  40265e:	2710      	movs	r7, #16
  402660:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402662:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402664:	e006      	b.n	402674 <_svfprintf_r+0x288>
  402666:	f1ab 0b10 	sub.w	fp, fp, #16
  40266a:	f1bb 0f10 	cmp.w	fp, #16
  40266e:	f103 0308 	add.w	r3, r3, #8
  402672:	dd18      	ble.n	4026a6 <_svfprintf_r+0x2ba>
  402674:	3201      	adds	r2, #1
  402676:	48b7      	ldr	r0, [pc, #732]	; (402954 <_svfprintf_r+0x568>)
  402678:	9226      	str	r2, [sp, #152]	; 0x98
  40267a:	3110      	adds	r1, #16
  40267c:	2a07      	cmp	r2, #7
  40267e:	9127      	str	r1, [sp, #156]	; 0x9c
  402680:	e883 0081 	stmia.w	r3, {r0, r7}
  402684:	ddef      	ble.n	402666 <_svfprintf_r+0x27a>
  402686:	aa25      	add	r2, sp, #148	; 0x94
  402688:	4629      	mov	r1, r5
  40268a:	4620      	mov	r0, r4
  40268c:	f003 f806 	bl	40569c <__ssprint_r>
  402690:	2800      	cmp	r0, #0
  402692:	f47f af7d 	bne.w	402590 <_svfprintf_r+0x1a4>
  402696:	f1ab 0b10 	sub.w	fp, fp, #16
  40269a:	f1bb 0f10 	cmp.w	fp, #16
  40269e:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4026a0:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4026a2:	464b      	mov	r3, r9
  4026a4:	dce6      	bgt.n	402674 <_svfprintf_r+0x288>
  4026a6:	4645      	mov	r5, r8
  4026a8:	460c      	mov	r4, r1
  4026aa:	4698      	mov	r8, r3
  4026ac:	3201      	adds	r2, #1
  4026ae:	4ba9      	ldr	r3, [pc, #676]	; (402954 <_svfprintf_r+0x568>)
  4026b0:	9226      	str	r2, [sp, #152]	; 0x98
  4026b2:	445c      	add	r4, fp
  4026b4:	2a07      	cmp	r2, #7
  4026b6:	9427      	str	r4, [sp, #156]	; 0x9c
  4026b8:	e888 0808 	stmia.w	r8, {r3, fp}
  4026bc:	f300 8498 	bgt.w	402ff0 <_svfprintf_r+0xc04>
  4026c0:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4026c4:	f108 0808 	add.w	r8, r8, #8
  4026c8:	b177      	cbz	r7, 4026e8 <_svfprintf_r+0x2fc>
  4026ca:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4026cc:	3301      	adds	r3, #1
  4026ce:	3401      	adds	r4, #1
  4026d0:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  4026d4:	2201      	movs	r2, #1
  4026d6:	2b07      	cmp	r3, #7
  4026d8:	9427      	str	r4, [sp, #156]	; 0x9c
  4026da:	9326      	str	r3, [sp, #152]	; 0x98
  4026dc:	e888 0006 	stmia.w	r8, {r1, r2}
  4026e0:	f300 83db 	bgt.w	402e9a <_svfprintf_r+0xaae>
  4026e4:	f108 0808 	add.w	r8, r8, #8
  4026e8:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4026ea:	b16b      	cbz	r3, 402708 <_svfprintf_r+0x31c>
  4026ec:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4026ee:	3301      	adds	r3, #1
  4026f0:	3402      	adds	r4, #2
  4026f2:	a91e      	add	r1, sp, #120	; 0x78
  4026f4:	2202      	movs	r2, #2
  4026f6:	2b07      	cmp	r3, #7
  4026f8:	9427      	str	r4, [sp, #156]	; 0x9c
  4026fa:	9326      	str	r3, [sp, #152]	; 0x98
  4026fc:	e888 0006 	stmia.w	r8, {r1, r2}
  402700:	f300 83d6 	bgt.w	402eb0 <_svfprintf_r+0xac4>
  402704:	f108 0808 	add.w	r8, r8, #8
  402708:	2d80      	cmp	r5, #128	; 0x80
  40270a:	f000 8315 	beq.w	402d38 <_svfprintf_r+0x94c>
  40270e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402710:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402712:	1a9f      	subs	r7, r3, r2
  402714:	2f00      	cmp	r7, #0
  402716:	dd36      	ble.n	402786 <_svfprintf_r+0x39a>
  402718:	2f10      	cmp	r7, #16
  40271a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40271c:	4d8e      	ldr	r5, [pc, #568]	; (402958 <_svfprintf_r+0x56c>)
  40271e:	dd27      	ble.n	402770 <_svfprintf_r+0x384>
  402720:	4642      	mov	r2, r8
  402722:	4621      	mov	r1, r4
  402724:	46b0      	mov	r8, r6
  402726:	f04f 0b10 	mov.w	fp, #16
  40272a:	462e      	mov	r6, r5
  40272c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40272e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402730:	e004      	b.n	40273c <_svfprintf_r+0x350>
  402732:	3f10      	subs	r7, #16
  402734:	2f10      	cmp	r7, #16
  402736:	f102 0208 	add.w	r2, r2, #8
  40273a:	dd15      	ble.n	402768 <_svfprintf_r+0x37c>
  40273c:	3301      	adds	r3, #1
  40273e:	3110      	adds	r1, #16
  402740:	2b07      	cmp	r3, #7
  402742:	9127      	str	r1, [sp, #156]	; 0x9c
  402744:	9326      	str	r3, [sp, #152]	; 0x98
  402746:	e882 0840 	stmia.w	r2, {r6, fp}
  40274a:	ddf2      	ble.n	402732 <_svfprintf_r+0x346>
  40274c:	aa25      	add	r2, sp, #148	; 0x94
  40274e:	4629      	mov	r1, r5
  402750:	4620      	mov	r0, r4
  402752:	f002 ffa3 	bl	40569c <__ssprint_r>
  402756:	2800      	cmp	r0, #0
  402758:	f47f af1a 	bne.w	402590 <_svfprintf_r+0x1a4>
  40275c:	3f10      	subs	r7, #16
  40275e:	2f10      	cmp	r7, #16
  402760:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402762:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402764:	464a      	mov	r2, r9
  402766:	dce9      	bgt.n	40273c <_svfprintf_r+0x350>
  402768:	4635      	mov	r5, r6
  40276a:	460c      	mov	r4, r1
  40276c:	4646      	mov	r6, r8
  40276e:	4690      	mov	r8, r2
  402770:	3301      	adds	r3, #1
  402772:	443c      	add	r4, r7
  402774:	2b07      	cmp	r3, #7
  402776:	9427      	str	r4, [sp, #156]	; 0x9c
  402778:	9326      	str	r3, [sp, #152]	; 0x98
  40277a:	e888 00a0 	stmia.w	r8, {r5, r7}
  40277e:	f300 8381 	bgt.w	402e84 <_svfprintf_r+0xa98>
  402782:	f108 0808 	add.w	r8, r8, #8
  402786:	9b07      	ldr	r3, [sp, #28]
  402788:	05df      	lsls	r7, r3, #23
  40278a:	f100 8268 	bmi.w	402c5e <_svfprintf_r+0x872>
  40278e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402790:	990e      	ldr	r1, [sp, #56]	; 0x38
  402792:	f8c8 6000 	str.w	r6, [r8]
  402796:	3301      	adds	r3, #1
  402798:	440c      	add	r4, r1
  40279a:	2b07      	cmp	r3, #7
  40279c:	9427      	str	r4, [sp, #156]	; 0x9c
  40279e:	f8c8 1004 	str.w	r1, [r8, #4]
  4027a2:	9326      	str	r3, [sp, #152]	; 0x98
  4027a4:	f300 834d 	bgt.w	402e42 <_svfprintf_r+0xa56>
  4027a8:	f108 0808 	add.w	r8, r8, #8
  4027ac:	9b07      	ldr	r3, [sp, #28]
  4027ae:	075b      	lsls	r3, r3, #29
  4027b0:	d53a      	bpl.n	402828 <_svfprintf_r+0x43c>
  4027b2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4027b4:	9a08      	ldr	r2, [sp, #32]
  4027b6:	1a9d      	subs	r5, r3, r2
  4027b8:	2d00      	cmp	r5, #0
  4027ba:	dd35      	ble.n	402828 <_svfprintf_r+0x43c>
  4027bc:	2d10      	cmp	r5, #16
  4027be:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4027c0:	dd20      	ble.n	402804 <_svfprintf_r+0x418>
  4027c2:	2610      	movs	r6, #16
  4027c4:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  4027c6:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  4027ca:	e004      	b.n	4027d6 <_svfprintf_r+0x3ea>
  4027cc:	3d10      	subs	r5, #16
  4027ce:	2d10      	cmp	r5, #16
  4027d0:	f108 0808 	add.w	r8, r8, #8
  4027d4:	dd16      	ble.n	402804 <_svfprintf_r+0x418>
  4027d6:	3301      	adds	r3, #1
  4027d8:	4a5e      	ldr	r2, [pc, #376]	; (402954 <_svfprintf_r+0x568>)
  4027da:	9326      	str	r3, [sp, #152]	; 0x98
  4027dc:	3410      	adds	r4, #16
  4027de:	2b07      	cmp	r3, #7
  4027e0:	9427      	str	r4, [sp, #156]	; 0x9c
  4027e2:	e888 0044 	stmia.w	r8, {r2, r6}
  4027e6:	ddf1      	ble.n	4027cc <_svfprintf_r+0x3e0>
  4027e8:	aa25      	add	r2, sp, #148	; 0x94
  4027ea:	4659      	mov	r1, fp
  4027ec:	4638      	mov	r0, r7
  4027ee:	f002 ff55 	bl	40569c <__ssprint_r>
  4027f2:	2800      	cmp	r0, #0
  4027f4:	f47f aecc 	bne.w	402590 <_svfprintf_r+0x1a4>
  4027f8:	3d10      	subs	r5, #16
  4027fa:	2d10      	cmp	r5, #16
  4027fc:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4027fe:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402800:	46c8      	mov	r8, r9
  402802:	dce8      	bgt.n	4027d6 <_svfprintf_r+0x3ea>
  402804:	3301      	adds	r3, #1
  402806:	4a53      	ldr	r2, [pc, #332]	; (402954 <_svfprintf_r+0x568>)
  402808:	9326      	str	r3, [sp, #152]	; 0x98
  40280a:	442c      	add	r4, r5
  40280c:	2b07      	cmp	r3, #7
  40280e:	9427      	str	r4, [sp, #156]	; 0x9c
  402810:	e888 0024 	stmia.w	r8, {r2, r5}
  402814:	dd08      	ble.n	402828 <_svfprintf_r+0x43c>
  402816:	aa25      	add	r2, sp, #148	; 0x94
  402818:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40281a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40281c:	f002 ff3e 	bl	40569c <__ssprint_r>
  402820:	2800      	cmp	r0, #0
  402822:	f47f aeb5 	bne.w	402590 <_svfprintf_r+0x1a4>
  402826:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402828:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40282a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  40282c:	9908      	ldr	r1, [sp, #32]
  40282e:	428a      	cmp	r2, r1
  402830:	bfac      	ite	ge
  402832:	189b      	addge	r3, r3, r2
  402834:	185b      	addlt	r3, r3, r1
  402836:	9309      	str	r3, [sp, #36]	; 0x24
  402838:	2c00      	cmp	r4, #0
  40283a:	f040 830d 	bne.w	402e58 <_svfprintf_r+0xa6c>
  40283e:	2300      	movs	r3, #0
  402840:	9326      	str	r3, [sp, #152]	; 0x98
  402842:	46c8      	mov	r8, r9
  402844:	e5f9      	b.n	40243a <_svfprintf_r+0x4e>
  402846:	9311      	str	r3, [sp, #68]	; 0x44
  402848:	f01b 0320 	ands.w	r3, fp, #32
  40284c:	f040 81e3 	bne.w	402c16 <_svfprintf_r+0x82a>
  402850:	f01b 0210 	ands.w	r2, fp, #16
  402854:	f040 842e 	bne.w	4030b4 <_svfprintf_r+0xcc8>
  402858:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  40285c:	f000 842a 	beq.w	4030b4 <_svfprintf_r+0xcc8>
  402860:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402862:	4613      	mov	r3, r2
  402864:	460a      	mov	r2, r1
  402866:	3204      	adds	r2, #4
  402868:	880c      	ldrh	r4, [r1, #0]
  40286a:	920f      	str	r2, [sp, #60]	; 0x3c
  40286c:	2500      	movs	r5, #0
  40286e:	e6b0      	b.n	4025d2 <_svfprintf_r+0x1e6>
  402870:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402872:	9311      	str	r3, [sp, #68]	; 0x44
  402874:	6816      	ldr	r6, [r2, #0]
  402876:	2400      	movs	r4, #0
  402878:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  40287c:	1d15      	adds	r5, r2, #4
  40287e:	2e00      	cmp	r6, #0
  402880:	f000 86a7 	beq.w	4035d2 <_svfprintf_r+0x11e6>
  402884:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402886:	1c53      	adds	r3, r2, #1
  402888:	f000 8609 	beq.w	40349e <_svfprintf_r+0x10b2>
  40288c:	4621      	mov	r1, r4
  40288e:	4630      	mov	r0, r6
  402890:	f002 fa86 	bl	404da0 <memchr>
  402894:	2800      	cmp	r0, #0
  402896:	f000 86e1 	beq.w	40365c <_svfprintf_r+0x1270>
  40289a:	1b83      	subs	r3, r0, r6
  40289c:	930e      	str	r3, [sp, #56]	; 0x38
  40289e:	940a      	str	r4, [sp, #40]	; 0x28
  4028a0:	950f      	str	r5, [sp, #60]	; 0x3c
  4028a2:	f8cd b01c 	str.w	fp, [sp, #28]
  4028a6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4028aa:	9308      	str	r3, [sp, #32]
  4028ac:	9412      	str	r4, [sp, #72]	; 0x48
  4028ae:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4028b2:	e6b3      	b.n	40261c <_svfprintf_r+0x230>
  4028b4:	f89a 3000 	ldrb.w	r3, [sl]
  4028b8:	2201      	movs	r2, #1
  4028ba:	212b      	movs	r1, #43	; 0x2b
  4028bc:	e5ee      	b.n	40249c <_svfprintf_r+0xb0>
  4028be:	f04b 0b20 	orr.w	fp, fp, #32
  4028c2:	f89a 3000 	ldrb.w	r3, [sl]
  4028c6:	e5e9      	b.n	40249c <_svfprintf_r+0xb0>
  4028c8:	9311      	str	r3, [sp, #68]	; 0x44
  4028ca:	2a00      	cmp	r2, #0
  4028cc:	f040 8795 	bne.w	4037fa <_svfprintf_r+0x140e>
  4028d0:	4b22      	ldr	r3, [pc, #136]	; (40295c <_svfprintf_r+0x570>)
  4028d2:	9318      	str	r3, [sp, #96]	; 0x60
  4028d4:	f01b 0f20 	tst.w	fp, #32
  4028d8:	f040 8111 	bne.w	402afe <_svfprintf_r+0x712>
  4028dc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4028de:	f01b 0f10 	tst.w	fp, #16
  4028e2:	4613      	mov	r3, r2
  4028e4:	f040 83e1 	bne.w	4030aa <_svfprintf_r+0xcbe>
  4028e8:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4028ec:	f000 83dd 	beq.w	4030aa <_svfprintf_r+0xcbe>
  4028f0:	3304      	adds	r3, #4
  4028f2:	8814      	ldrh	r4, [r2, #0]
  4028f4:	930f      	str	r3, [sp, #60]	; 0x3c
  4028f6:	2500      	movs	r5, #0
  4028f8:	f01b 0f01 	tst.w	fp, #1
  4028fc:	f000 810c 	beq.w	402b18 <_svfprintf_r+0x72c>
  402900:	ea54 0305 	orrs.w	r3, r4, r5
  402904:	f000 8108 	beq.w	402b18 <_svfprintf_r+0x72c>
  402908:	2330      	movs	r3, #48	; 0x30
  40290a:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  40290e:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  402912:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  402916:	f04b 0b02 	orr.w	fp, fp, #2
  40291a:	2302      	movs	r3, #2
  40291c:	e659      	b.n	4025d2 <_svfprintf_r+0x1e6>
  40291e:	f89a 3000 	ldrb.w	r3, [sl]
  402922:	2900      	cmp	r1, #0
  402924:	f47f adba 	bne.w	40249c <_svfprintf_r+0xb0>
  402928:	2201      	movs	r2, #1
  40292a:	2120      	movs	r1, #32
  40292c:	e5b6      	b.n	40249c <_svfprintf_r+0xb0>
  40292e:	f04b 0b01 	orr.w	fp, fp, #1
  402932:	f89a 3000 	ldrb.w	r3, [sl]
  402936:	e5b1      	b.n	40249c <_svfprintf_r+0xb0>
  402938:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  40293a:	6823      	ldr	r3, [r4, #0]
  40293c:	930d      	str	r3, [sp, #52]	; 0x34
  40293e:	4618      	mov	r0, r3
  402940:	2800      	cmp	r0, #0
  402942:	4623      	mov	r3, r4
  402944:	f103 0304 	add.w	r3, r3, #4
  402948:	f6ff ae0a 	blt.w	402560 <_svfprintf_r+0x174>
  40294c:	930f      	str	r3, [sp, #60]	; 0x3c
  40294e:	f89a 3000 	ldrb.w	r3, [sl]
  402952:	e5a3      	b.n	40249c <_svfprintf_r+0xb0>
  402954:	00406ee0 	.word	0x00406ee0
  402958:	00406ef0 	.word	0x00406ef0
  40295c:	00406ec0 	.word	0x00406ec0
  402960:	f04b 0b10 	orr.w	fp, fp, #16
  402964:	f01b 0f20 	tst.w	fp, #32
  402968:	9311      	str	r3, [sp, #68]	; 0x44
  40296a:	f43f ae23 	beq.w	4025b4 <_svfprintf_r+0x1c8>
  40296e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402970:	3507      	adds	r5, #7
  402972:	f025 0307 	bic.w	r3, r5, #7
  402976:	f103 0208 	add.w	r2, r3, #8
  40297a:	e9d3 4500 	ldrd	r4, r5, [r3]
  40297e:	920f      	str	r2, [sp, #60]	; 0x3c
  402980:	2301      	movs	r3, #1
  402982:	e626      	b.n	4025d2 <_svfprintf_r+0x1e6>
  402984:	f89a 3000 	ldrb.w	r3, [sl]
  402988:	2b2a      	cmp	r3, #42	; 0x2a
  40298a:	f10a 0401 	add.w	r4, sl, #1
  40298e:	f000 8727 	beq.w	4037e0 <_svfprintf_r+0x13f4>
  402992:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402996:	2809      	cmp	r0, #9
  402998:	46a2      	mov	sl, r4
  40299a:	f200 86ad 	bhi.w	4036f8 <_svfprintf_r+0x130c>
  40299e:	2300      	movs	r3, #0
  4029a0:	461c      	mov	r4, r3
  4029a2:	f81a 3b01 	ldrb.w	r3, [sl], #1
  4029a6:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4029aa:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  4029ae:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4029b2:	2809      	cmp	r0, #9
  4029b4:	d9f5      	bls.n	4029a2 <_svfprintf_r+0x5b6>
  4029b6:	940a      	str	r4, [sp, #40]	; 0x28
  4029b8:	e572      	b.n	4024a0 <_svfprintf_r+0xb4>
  4029ba:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  4029be:	f89a 3000 	ldrb.w	r3, [sl]
  4029c2:	e56b      	b.n	40249c <_svfprintf_r+0xb0>
  4029c4:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  4029c8:	f89a 3000 	ldrb.w	r3, [sl]
  4029cc:	e566      	b.n	40249c <_svfprintf_r+0xb0>
  4029ce:	f89a 3000 	ldrb.w	r3, [sl]
  4029d2:	2b6c      	cmp	r3, #108	; 0x6c
  4029d4:	bf03      	ittte	eq
  4029d6:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  4029da:	f04b 0b20 	orreq.w	fp, fp, #32
  4029de:	f10a 0a01 	addeq.w	sl, sl, #1
  4029e2:	f04b 0b10 	orrne.w	fp, fp, #16
  4029e6:	e559      	b.n	40249c <_svfprintf_r+0xb0>
  4029e8:	2a00      	cmp	r2, #0
  4029ea:	f040 8711 	bne.w	403810 <_svfprintf_r+0x1424>
  4029ee:	f01b 0f20 	tst.w	fp, #32
  4029f2:	f040 84f9 	bne.w	4033e8 <_svfprintf_r+0xffc>
  4029f6:	f01b 0f10 	tst.w	fp, #16
  4029fa:	f040 84ac 	bne.w	403356 <_svfprintf_r+0xf6a>
  4029fe:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402a02:	f000 84a8 	beq.w	403356 <_svfprintf_r+0xf6a>
  402a06:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402a08:	6813      	ldr	r3, [r2, #0]
  402a0a:	3204      	adds	r2, #4
  402a0c:	920f      	str	r2, [sp, #60]	; 0x3c
  402a0e:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  402a12:	801a      	strh	r2, [r3, #0]
  402a14:	e511      	b.n	40243a <_svfprintf_r+0x4e>
  402a16:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402a18:	4bb3      	ldr	r3, [pc, #716]	; (402ce8 <_svfprintf_r+0x8fc>)
  402a1a:	680c      	ldr	r4, [r1, #0]
  402a1c:	9318      	str	r3, [sp, #96]	; 0x60
  402a1e:	2230      	movs	r2, #48	; 0x30
  402a20:	2378      	movs	r3, #120	; 0x78
  402a22:	3104      	adds	r1, #4
  402a24:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  402a28:	9311      	str	r3, [sp, #68]	; 0x44
  402a2a:	f04b 0b02 	orr.w	fp, fp, #2
  402a2e:	910f      	str	r1, [sp, #60]	; 0x3c
  402a30:	2500      	movs	r5, #0
  402a32:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  402a36:	2302      	movs	r3, #2
  402a38:	e5cb      	b.n	4025d2 <_svfprintf_r+0x1e6>
  402a3a:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402a3c:	9311      	str	r3, [sp, #68]	; 0x44
  402a3e:	680a      	ldr	r2, [r1, #0]
  402a40:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  402a44:	2300      	movs	r3, #0
  402a46:	460a      	mov	r2, r1
  402a48:	461f      	mov	r7, r3
  402a4a:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402a4e:	3204      	adds	r2, #4
  402a50:	2301      	movs	r3, #1
  402a52:	9308      	str	r3, [sp, #32]
  402a54:	f8cd b01c 	str.w	fp, [sp, #28]
  402a58:	970a      	str	r7, [sp, #40]	; 0x28
  402a5a:	9712      	str	r7, [sp, #72]	; 0x48
  402a5c:	920f      	str	r2, [sp, #60]	; 0x3c
  402a5e:	930e      	str	r3, [sp, #56]	; 0x38
  402a60:	ae28      	add	r6, sp, #160	; 0xa0
  402a62:	e5df      	b.n	402624 <_svfprintf_r+0x238>
  402a64:	9311      	str	r3, [sp, #68]	; 0x44
  402a66:	2a00      	cmp	r2, #0
  402a68:	f040 86ea 	bne.w	403840 <_svfprintf_r+0x1454>
  402a6c:	f01b 0f20 	tst.w	fp, #32
  402a70:	d15d      	bne.n	402b2e <_svfprintf_r+0x742>
  402a72:	f01b 0f10 	tst.w	fp, #16
  402a76:	f040 8308 	bne.w	40308a <_svfprintf_r+0xc9e>
  402a7a:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402a7e:	f000 8304 	beq.w	40308a <_svfprintf_r+0xc9e>
  402a82:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402a84:	f9b1 4000 	ldrsh.w	r4, [r1]
  402a88:	3104      	adds	r1, #4
  402a8a:	17e5      	asrs	r5, r4, #31
  402a8c:	4622      	mov	r2, r4
  402a8e:	462b      	mov	r3, r5
  402a90:	910f      	str	r1, [sp, #60]	; 0x3c
  402a92:	2a00      	cmp	r2, #0
  402a94:	f173 0300 	sbcs.w	r3, r3, #0
  402a98:	db58      	blt.n	402b4c <_svfprintf_r+0x760>
  402a9a:	990a      	ldr	r1, [sp, #40]	; 0x28
  402a9c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402aa0:	1c4a      	adds	r2, r1, #1
  402aa2:	f04f 0301 	mov.w	r3, #1
  402aa6:	f47f ad9b 	bne.w	4025e0 <_svfprintf_r+0x1f4>
  402aaa:	ea54 0205 	orrs.w	r2, r4, r5
  402aae:	f000 81df 	beq.w	402e70 <_svfprintf_r+0xa84>
  402ab2:	f8cd b01c 	str.w	fp, [sp, #28]
  402ab6:	2b01      	cmp	r3, #1
  402ab8:	f000 827b 	beq.w	402fb2 <_svfprintf_r+0xbc6>
  402abc:	2b02      	cmp	r3, #2
  402abe:	f040 8206 	bne.w	402ece <_svfprintf_r+0xae2>
  402ac2:	9818      	ldr	r0, [sp, #96]	; 0x60
  402ac4:	464e      	mov	r6, r9
  402ac6:	0923      	lsrs	r3, r4, #4
  402ac8:	f004 010f 	and.w	r1, r4, #15
  402acc:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  402ad0:	092a      	lsrs	r2, r5, #4
  402ad2:	461c      	mov	r4, r3
  402ad4:	4615      	mov	r5, r2
  402ad6:	5c43      	ldrb	r3, [r0, r1]
  402ad8:	f806 3d01 	strb.w	r3, [r6, #-1]!
  402adc:	ea54 0305 	orrs.w	r3, r4, r5
  402ae0:	d1f1      	bne.n	402ac6 <_svfprintf_r+0x6da>
  402ae2:	eba9 0306 	sub.w	r3, r9, r6
  402ae6:	930e      	str	r3, [sp, #56]	; 0x38
  402ae8:	e590      	b.n	40260c <_svfprintf_r+0x220>
  402aea:	9311      	str	r3, [sp, #68]	; 0x44
  402aec:	2a00      	cmp	r2, #0
  402aee:	f040 86a3 	bne.w	403838 <_svfprintf_r+0x144c>
  402af2:	4b7e      	ldr	r3, [pc, #504]	; (402cec <_svfprintf_r+0x900>)
  402af4:	9318      	str	r3, [sp, #96]	; 0x60
  402af6:	f01b 0f20 	tst.w	fp, #32
  402afa:	f43f aeef 	beq.w	4028dc <_svfprintf_r+0x4f0>
  402afe:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402b00:	3507      	adds	r5, #7
  402b02:	f025 0307 	bic.w	r3, r5, #7
  402b06:	f103 0208 	add.w	r2, r3, #8
  402b0a:	f01b 0f01 	tst.w	fp, #1
  402b0e:	920f      	str	r2, [sp, #60]	; 0x3c
  402b10:	e9d3 4500 	ldrd	r4, r5, [r3]
  402b14:	f47f aef4 	bne.w	402900 <_svfprintf_r+0x514>
  402b18:	2302      	movs	r3, #2
  402b1a:	e55a      	b.n	4025d2 <_svfprintf_r+0x1e6>
  402b1c:	9311      	str	r3, [sp, #68]	; 0x44
  402b1e:	2a00      	cmp	r2, #0
  402b20:	f040 8686 	bne.w	403830 <_svfprintf_r+0x1444>
  402b24:	f04b 0b10 	orr.w	fp, fp, #16
  402b28:	f01b 0f20 	tst.w	fp, #32
  402b2c:	d0a1      	beq.n	402a72 <_svfprintf_r+0x686>
  402b2e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402b30:	3507      	adds	r5, #7
  402b32:	f025 0507 	bic.w	r5, r5, #7
  402b36:	e9d5 2300 	ldrd	r2, r3, [r5]
  402b3a:	2a00      	cmp	r2, #0
  402b3c:	f105 0108 	add.w	r1, r5, #8
  402b40:	461d      	mov	r5, r3
  402b42:	f173 0300 	sbcs.w	r3, r3, #0
  402b46:	910f      	str	r1, [sp, #60]	; 0x3c
  402b48:	4614      	mov	r4, r2
  402b4a:	daa6      	bge.n	402a9a <_svfprintf_r+0x6ae>
  402b4c:	272d      	movs	r7, #45	; 0x2d
  402b4e:	4264      	negs	r4, r4
  402b50:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  402b54:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402b58:	2301      	movs	r3, #1
  402b5a:	e53d      	b.n	4025d8 <_svfprintf_r+0x1ec>
  402b5c:	9311      	str	r3, [sp, #68]	; 0x44
  402b5e:	2a00      	cmp	r2, #0
  402b60:	f040 8662 	bne.w	403828 <_svfprintf_r+0x143c>
  402b64:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402b66:	3507      	adds	r5, #7
  402b68:	f025 0307 	bic.w	r3, r5, #7
  402b6c:	f103 0208 	add.w	r2, r3, #8
  402b70:	920f      	str	r2, [sp, #60]	; 0x3c
  402b72:	681a      	ldr	r2, [r3, #0]
  402b74:	9215      	str	r2, [sp, #84]	; 0x54
  402b76:	685b      	ldr	r3, [r3, #4]
  402b78:	9314      	str	r3, [sp, #80]	; 0x50
  402b7a:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402b7c:	9d15      	ldr	r5, [sp, #84]	; 0x54
  402b7e:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  402b82:	4628      	mov	r0, r5
  402b84:	4621      	mov	r1, r4
  402b86:	f04f 32ff 	mov.w	r2, #4294967295
  402b8a:	4b59      	ldr	r3, [pc, #356]	; (402cf0 <_svfprintf_r+0x904>)
  402b8c:	f003 fa82 	bl	406094 <__aeabi_dcmpun>
  402b90:	2800      	cmp	r0, #0
  402b92:	f040 834a 	bne.w	40322a <_svfprintf_r+0xe3e>
  402b96:	4628      	mov	r0, r5
  402b98:	4621      	mov	r1, r4
  402b9a:	f04f 32ff 	mov.w	r2, #4294967295
  402b9e:	4b54      	ldr	r3, [pc, #336]	; (402cf0 <_svfprintf_r+0x904>)
  402ba0:	f003 fa5a 	bl	406058 <__aeabi_dcmple>
  402ba4:	2800      	cmp	r0, #0
  402ba6:	f040 8340 	bne.w	40322a <_svfprintf_r+0xe3e>
  402baa:	a815      	add	r0, sp, #84	; 0x54
  402bac:	c80d      	ldmia	r0, {r0, r2, r3}
  402bae:	9914      	ldr	r1, [sp, #80]	; 0x50
  402bb0:	f003 fa48 	bl	406044 <__aeabi_dcmplt>
  402bb4:	2800      	cmp	r0, #0
  402bb6:	f040 8530 	bne.w	40361a <_svfprintf_r+0x122e>
  402bba:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402bbe:	4e4d      	ldr	r6, [pc, #308]	; (402cf4 <_svfprintf_r+0x908>)
  402bc0:	4b4d      	ldr	r3, [pc, #308]	; (402cf8 <_svfprintf_r+0x90c>)
  402bc2:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  402bc6:	9007      	str	r0, [sp, #28]
  402bc8:	9811      	ldr	r0, [sp, #68]	; 0x44
  402bca:	2203      	movs	r2, #3
  402bcc:	2100      	movs	r1, #0
  402bce:	9208      	str	r2, [sp, #32]
  402bd0:	910a      	str	r1, [sp, #40]	; 0x28
  402bd2:	2847      	cmp	r0, #71	; 0x47
  402bd4:	bfd8      	it	le
  402bd6:	461e      	movle	r6, r3
  402bd8:	920e      	str	r2, [sp, #56]	; 0x38
  402bda:	9112      	str	r1, [sp, #72]	; 0x48
  402bdc:	e51e      	b.n	40261c <_svfprintf_r+0x230>
  402bde:	f04b 0b08 	orr.w	fp, fp, #8
  402be2:	f89a 3000 	ldrb.w	r3, [sl]
  402be6:	e459      	b.n	40249c <_svfprintf_r+0xb0>
  402be8:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402bec:	2300      	movs	r3, #0
  402bee:	461c      	mov	r4, r3
  402bf0:	f81a 3b01 	ldrb.w	r3, [sl], #1
  402bf4:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  402bf8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  402bfc:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402c00:	2809      	cmp	r0, #9
  402c02:	d9f5      	bls.n	402bf0 <_svfprintf_r+0x804>
  402c04:	940d      	str	r4, [sp, #52]	; 0x34
  402c06:	e44b      	b.n	4024a0 <_svfprintf_r+0xb4>
  402c08:	f04b 0b10 	orr.w	fp, fp, #16
  402c0c:	9311      	str	r3, [sp, #68]	; 0x44
  402c0e:	f01b 0320 	ands.w	r3, fp, #32
  402c12:	f43f ae1d 	beq.w	402850 <_svfprintf_r+0x464>
  402c16:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402c18:	3507      	adds	r5, #7
  402c1a:	f025 0307 	bic.w	r3, r5, #7
  402c1e:	f103 0208 	add.w	r2, r3, #8
  402c22:	e9d3 4500 	ldrd	r4, r5, [r3]
  402c26:	920f      	str	r2, [sp, #60]	; 0x3c
  402c28:	2300      	movs	r3, #0
  402c2a:	e4d2      	b.n	4025d2 <_svfprintf_r+0x1e6>
  402c2c:	9311      	str	r3, [sp, #68]	; 0x44
  402c2e:	2a00      	cmp	r2, #0
  402c30:	f040 85e7 	bne.w	403802 <_svfprintf_r+0x1416>
  402c34:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402c36:	2a00      	cmp	r2, #0
  402c38:	f43f aca3 	beq.w	402582 <_svfprintf_r+0x196>
  402c3c:	2300      	movs	r3, #0
  402c3e:	2101      	movs	r1, #1
  402c40:	461f      	mov	r7, r3
  402c42:	9108      	str	r1, [sp, #32]
  402c44:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  402c48:	f8cd b01c 	str.w	fp, [sp, #28]
  402c4c:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402c50:	930a      	str	r3, [sp, #40]	; 0x28
  402c52:	9312      	str	r3, [sp, #72]	; 0x48
  402c54:	910e      	str	r1, [sp, #56]	; 0x38
  402c56:	ae28      	add	r6, sp, #160	; 0xa0
  402c58:	e4e4      	b.n	402624 <_svfprintf_r+0x238>
  402c5a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402c5c:	e534      	b.n	4026c8 <_svfprintf_r+0x2dc>
  402c5e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402c60:	2b65      	cmp	r3, #101	; 0x65
  402c62:	f340 80a7 	ble.w	402db4 <_svfprintf_r+0x9c8>
  402c66:	a815      	add	r0, sp, #84	; 0x54
  402c68:	c80d      	ldmia	r0, {r0, r2, r3}
  402c6a:	9914      	ldr	r1, [sp, #80]	; 0x50
  402c6c:	f003 f9e0 	bl	406030 <__aeabi_dcmpeq>
  402c70:	2800      	cmp	r0, #0
  402c72:	f000 8150 	beq.w	402f16 <_svfprintf_r+0xb2a>
  402c76:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402c78:	4a20      	ldr	r2, [pc, #128]	; (402cfc <_svfprintf_r+0x910>)
  402c7a:	f8c8 2000 	str.w	r2, [r8]
  402c7e:	3301      	adds	r3, #1
  402c80:	3401      	adds	r4, #1
  402c82:	2201      	movs	r2, #1
  402c84:	2b07      	cmp	r3, #7
  402c86:	9427      	str	r4, [sp, #156]	; 0x9c
  402c88:	9326      	str	r3, [sp, #152]	; 0x98
  402c8a:	f8c8 2004 	str.w	r2, [r8, #4]
  402c8e:	f300 836a 	bgt.w	403366 <_svfprintf_r+0xf7a>
  402c92:	f108 0808 	add.w	r8, r8, #8
  402c96:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402c98:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402c9a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402c9c:	4293      	cmp	r3, r2
  402c9e:	db03      	blt.n	402ca8 <_svfprintf_r+0x8bc>
  402ca0:	9b07      	ldr	r3, [sp, #28]
  402ca2:	07dd      	lsls	r5, r3, #31
  402ca4:	f57f ad82 	bpl.w	4027ac <_svfprintf_r+0x3c0>
  402ca8:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402caa:	9919      	ldr	r1, [sp, #100]	; 0x64
  402cac:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  402cae:	f8c8 2000 	str.w	r2, [r8]
  402cb2:	3301      	adds	r3, #1
  402cb4:	440c      	add	r4, r1
  402cb6:	2b07      	cmp	r3, #7
  402cb8:	f8c8 1004 	str.w	r1, [r8, #4]
  402cbc:	9427      	str	r4, [sp, #156]	; 0x9c
  402cbe:	9326      	str	r3, [sp, #152]	; 0x98
  402cc0:	f300 839e 	bgt.w	403400 <_svfprintf_r+0x1014>
  402cc4:	f108 0808 	add.w	r8, r8, #8
  402cc8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402cca:	1e5e      	subs	r6, r3, #1
  402ccc:	2e00      	cmp	r6, #0
  402cce:	f77f ad6d 	ble.w	4027ac <_svfprintf_r+0x3c0>
  402cd2:	2e10      	cmp	r6, #16
  402cd4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402cd6:	4d0a      	ldr	r5, [pc, #40]	; (402d00 <_svfprintf_r+0x914>)
  402cd8:	f340 81f5 	ble.w	4030c6 <_svfprintf_r+0xcda>
  402cdc:	4622      	mov	r2, r4
  402cde:	2710      	movs	r7, #16
  402ce0:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402ce4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  402ce6:	e013      	b.n	402d10 <_svfprintf_r+0x924>
  402ce8:	00406ec0 	.word	0x00406ec0
  402cec:	00406eac 	.word	0x00406eac
  402cf0:	7fefffff 	.word	0x7fefffff
  402cf4:	00406ea0 	.word	0x00406ea0
  402cf8:	00406e9c 	.word	0x00406e9c
  402cfc:	00406edc 	.word	0x00406edc
  402d00:	00406ef0 	.word	0x00406ef0
  402d04:	f108 0808 	add.w	r8, r8, #8
  402d08:	3e10      	subs	r6, #16
  402d0a:	2e10      	cmp	r6, #16
  402d0c:	f340 81da 	ble.w	4030c4 <_svfprintf_r+0xcd8>
  402d10:	3301      	adds	r3, #1
  402d12:	3210      	adds	r2, #16
  402d14:	2b07      	cmp	r3, #7
  402d16:	9227      	str	r2, [sp, #156]	; 0x9c
  402d18:	9326      	str	r3, [sp, #152]	; 0x98
  402d1a:	e888 00a0 	stmia.w	r8, {r5, r7}
  402d1e:	ddf1      	ble.n	402d04 <_svfprintf_r+0x918>
  402d20:	aa25      	add	r2, sp, #148	; 0x94
  402d22:	4621      	mov	r1, r4
  402d24:	4658      	mov	r0, fp
  402d26:	f002 fcb9 	bl	40569c <__ssprint_r>
  402d2a:	2800      	cmp	r0, #0
  402d2c:	f47f ac30 	bne.w	402590 <_svfprintf_r+0x1a4>
  402d30:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402d32:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d34:	46c8      	mov	r8, r9
  402d36:	e7e7      	b.n	402d08 <_svfprintf_r+0x91c>
  402d38:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402d3a:	9a08      	ldr	r2, [sp, #32]
  402d3c:	1a9f      	subs	r7, r3, r2
  402d3e:	2f00      	cmp	r7, #0
  402d40:	f77f ace5 	ble.w	40270e <_svfprintf_r+0x322>
  402d44:	2f10      	cmp	r7, #16
  402d46:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d48:	4db6      	ldr	r5, [pc, #728]	; (403024 <_svfprintf_r+0xc38>)
  402d4a:	dd27      	ble.n	402d9c <_svfprintf_r+0x9b0>
  402d4c:	4642      	mov	r2, r8
  402d4e:	4621      	mov	r1, r4
  402d50:	46b0      	mov	r8, r6
  402d52:	f04f 0b10 	mov.w	fp, #16
  402d56:	462e      	mov	r6, r5
  402d58:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402d5a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402d5c:	e004      	b.n	402d68 <_svfprintf_r+0x97c>
  402d5e:	3f10      	subs	r7, #16
  402d60:	2f10      	cmp	r7, #16
  402d62:	f102 0208 	add.w	r2, r2, #8
  402d66:	dd15      	ble.n	402d94 <_svfprintf_r+0x9a8>
  402d68:	3301      	adds	r3, #1
  402d6a:	3110      	adds	r1, #16
  402d6c:	2b07      	cmp	r3, #7
  402d6e:	9127      	str	r1, [sp, #156]	; 0x9c
  402d70:	9326      	str	r3, [sp, #152]	; 0x98
  402d72:	e882 0840 	stmia.w	r2, {r6, fp}
  402d76:	ddf2      	ble.n	402d5e <_svfprintf_r+0x972>
  402d78:	aa25      	add	r2, sp, #148	; 0x94
  402d7a:	4629      	mov	r1, r5
  402d7c:	4620      	mov	r0, r4
  402d7e:	f002 fc8d 	bl	40569c <__ssprint_r>
  402d82:	2800      	cmp	r0, #0
  402d84:	f47f ac04 	bne.w	402590 <_svfprintf_r+0x1a4>
  402d88:	3f10      	subs	r7, #16
  402d8a:	2f10      	cmp	r7, #16
  402d8c:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402d8e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d90:	464a      	mov	r2, r9
  402d92:	dce9      	bgt.n	402d68 <_svfprintf_r+0x97c>
  402d94:	4635      	mov	r5, r6
  402d96:	460c      	mov	r4, r1
  402d98:	4646      	mov	r6, r8
  402d9a:	4690      	mov	r8, r2
  402d9c:	3301      	adds	r3, #1
  402d9e:	443c      	add	r4, r7
  402da0:	2b07      	cmp	r3, #7
  402da2:	9427      	str	r4, [sp, #156]	; 0x9c
  402da4:	9326      	str	r3, [sp, #152]	; 0x98
  402da6:	e888 00a0 	stmia.w	r8, {r5, r7}
  402daa:	f300 8232 	bgt.w	403212 <_svfprintf_r+0xe26>
  402dae:	f108 0808 	add.w	r8, r8, #8
  402db2:	e4ac      	b.n	40270e <_svfprintf_r+0x322>
  402db4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402db6:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402db8:	2b01      	cmp	r3, #1
  402dba:	f340 81fe 	ble.w	4031ba <_svfprintf_r+0xdce>
  402dbe:	3701      	adds	r7, #1
  402dc0:	3401      	adds	r4, #1
  402dc2:	2301      	movs	r3, #1
  402dc4:	2f07      	cmp	r7, #7
  402dc6:	9427      	str	r4, [sp, #156]	; 0x9c
  402dc8:	9726      	str	r7, [sp, #152]	; 0x98
  402dca:	f8c8 6000 	str.w	r6, [r8]
  402dce:	f8c8 3004 	str.w	r3, [r8, #4]
  402dd2:	f300 8203 	bgt.w	4031dc <_svfprintf_r+0xdf0>
  402dd6:	f108 0808 	add.w	r8, r8, #8
  402dda:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402ddc:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  402dde:	f8c8 3000 	str.w	r3, [r8]
  402de2:	3701      	adds	r7, #1
  402de4:	4414      	add	r4, r2
  402de6:	2f07      	cmp	r7, #7
  402de8:	9427      	str	r4, [sp, #156]	; 0x9c
  402dea:	9726      	str	r7, [sp, #152]	; 0x98
  402dec:	f8c8 2004 	str.w	r2, [r8, #4]
  402df0:	f300 8200 	bgt.w	4031f4 <_svfprintf_r+0xe08>
  402df4:	f108 0808 	add.w	r8, r8, #8
  402df8:	a815      	add	r0, sp, #84	; 0x54
  402dfa:	c80d      	ldmia	r0, {r0, r2, r3}
  402dfc:	9914      	ldr	r1, [sp, #80]	; 0x50
  402dfe:	f003 f917 	bl	406030 <__aeabi_dcmpeq>
  402e02:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402e04:	2800      	cmp	r0, #0
  402e06:	f040 8101 	bne.w	40300c <_svfprintf_r+0xc20>
  402e0a:	3b01      	subs	r3, #1
  402e0c:	3701      	adds	r7, #1
  402e0e:	3601      	adds	r6, #1
  402e10:	441c      	add	r4, r3
  402e12:	2f07      	cmp	r7, #7
  402e14:	9726      	str	r7, [sp, #152]	; 0x98
  402e16:	9427      	str	r4, [sp, #156]	; 0x9c
  402e18:	f8c8 6000 	str.w	r6, [r8]
  402e1c:	f8c8 3004 	str.w	r3, [r8, #4]
  402e20:	f300 8127 	bgt.w	403072 <_svfprintf_r+0xc86>
  402e24:	f108 0808 	add.w	r8, r8, #8
  402e28:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  402e2a:	f8c8 2004 	str.w	r2, [r8, #4]
  402e2e:	3701      	adds	r7, #1
  402e30:	4414      	add	r4, r2
  402e32:	ab21      	add	r3, sp, #132	; 0x84
  402e34:	2f07      	cmp	r7, #7
  402e36:	9427      	str	r4, [sp, #156]	; 0x9c
  402e38:	9726      	str	r7, [sp, #152]	; 0x98
  402e3a:	f8c8 3000 	str.w	r3, [r8]
  402e3e:	f77f acb3 	ble.w	4027a8 <_svfprintf_r+0x3bc>
  402e42:	aa25      	add	r2, sp, #148	; 0x94
  402e44:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402e46:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e48:	f002 fc28 	bl	40569c <__ssprint_r>
  402e4c:	2800      	cmp	r0, #0
  402e4e:	f47f ab9f 	bne.w	402590 <_svfprintf_r+0x1a4>
  402e52:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402e54:	46c8      	mov	r8, r9
  402e56:	e4a9      	b.n	4027ac <_svfprintf_r+0x3c0>
  402e58:	aa25      	add	r2, sp, #148	; 0x94
  402e5a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402e5c:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e5e:	f002 fc1d 	bl	40569c <__ssprint_r>
  402e62:	2800      	cmp	r0, #0
  402e64:	f43f aceb 	beq.w	40283e <_svfprintf_r+0x452>
  402e68:	f7ff bb92 	b.w	402590 <_svfprintf_r+0x1a4>
  402e6c:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402e70:	2b01      	cmp	r3, #1
  402e72:	f000 8134 	beq.w	4030de <_svfprintf_r+0xcf2>
  402e76:	2b02      	cmp	r3, #2
  402e78:	d125      	bne.n	402ec6 <_svfprintf_r+0xada>
  402e7a:	f8cd b01c 	str.w	fp, [sp, #28]
  402e7e:	2400      	movs	r4, #0
  402e80:	2500      	movs	r5, #0
  402e82:	e61e      	b.n	402ac2 <_svfprintf_r+0x6d6>
  402e84:	aa25      	add	r2, sp, #148	; 0x94
  402e86:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402e88:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e8a:	f002 fc07 	bl	40569c <__ssprint_r>
  402e8e:	2800      	cmp	r0, #0
  402e90:	f47f ab7e 	bne.w	402590 <_svfprintf_r+0x1a4>
  402e94:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402e96:	46c8      	mov	r8, r9
  402e98:	e475      	b.n	402786 <_svfprintf_r+0x39a>
  402e9a:	aa25      	add	r2, sp, #148	; 0x94
  402e9c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402e9e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ea0:	f002 fbfc 	bl	40569c <__ssprint_r>
  402ea4:	2800      	cmp	r0, #0
  402ea6:	f47f ab73 	bne.w	402590 <_svfprintf_r+0x1a4>
  402eaa:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402eac:	46c8      	mov	r8, r9
  402eae:	e41b      	b.n	4026e8 <_svfprintf_r+0x2fc>
  402eb0:	aa25      	add	r2, sp, #148	; 0x94
  402eb2:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402eb4:	980c      	ldr	r0, [sp, #48]	; 0x30
  402eb6:	f002 fbf1 	bl	40569c <__ssprint_r>
  402eba:	2800      	cmp	r0, #0
  402ebc:	f47f ab68 	bne.w	402590 <_svfprintf_r+0x1a4>
  402ec0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402ec2:	46c8      	mov	r8, r9
  402ec4:	e420      	b.n	402708 <_svfprintf_r+0x31c>
  402ec6:	f8cd b01c 	str.w	fp, [sp, #28]
  402eca:	2400      	movs	r4, #0
  402ecc:	2500      	movs	r5, #0
  402ece:	4649      	mov	r1, r9
  402ed0:	e000      	b.n	402ed4 <_svfprintf_r+0xae8>
  402ed2:	4631      	mov	r1, r6
  402ed4:	08e2      	lsrs	r2, r4, #3
  402ed6:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  402eda:	08e8      	lsrs	r0, r5, #3
  402edc:	f004 0307 	and.w	r3, r4, #7
  402ee0:	4605      	mov	r5, r0
  402ee2:	4614      	mov	r4, r2
  402ee4:	3330      	adds	r3, #48	; 0x30
  402ee6:	ea54 0205 	orrs.w	r2, r4, r5
  402eea:	f801 3c01 	strb.w	r3, [r1, #-1]
  402eee:	f101 36ff 	add.w	r6, r1, #4294967295
  402ef2:	d1ee      	bne.n	402ed2 <_svfprintf_r+0xae6>
  402ef4:	9a07      	ldr	r2, [sp, #28]
  402ef6:	07d2      	lsls	r2, r2, #31
  402ef8:	f57f adf3 	bpl.w	402ae2 <_svfprintf_r+0x6f6>
  402efc:	2b30      	cmp	r3, #48	; 0x30
  402efe:	f43f adf0 	beq.w	402ae2 <_svfprintf_r+0x6f6>
  402f02:	3902      	subs	r1, #2
  402f04:	2330      	movs	r3, #48	; 0x30
  402f06:	f806 3c01 	strb.w	r3, [r6, #-1]
  402f0a:	eba9 0301 	sub.w	r3, r9, r1
  402f0e:	930e      	str	r3, [sp, #56]	; 0x38
  402f10:	460e      	mov	r6, r1
  402f12:	f7ff bb7b 	b.w	40260c <_svfprintf_r+0x220>
  402f16:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402f18:	2900      	cmp	r1, #0
  402f1a:	f340 822e 	ble.w	40337a <_svfprintf_r+0xf8e>
  402f1e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402f20:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402f22:	4293      	cmp	r3, r2
  402f24:	bfa8      	it	ge
  402f26:	4613      	movge	r3, r2
  402f28:	2b00      	cmp	r3, #0
  402f2a:	461f      	mov	r7, r3
  402f2c:	dd0d      	ble.n	402f4a <_svfprintf_r+0xb5e>
  402f2e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402f30:	f8c8 6000 	str.w	r6, [r8]
  402f34:	3301      	adds	r3, #1
  402f36:	443c      	add	r4, r7
  402f38:	2b07      	cmp	r3, #7
  402f3a:	9427      	str	r4, [sp, #156]	; 0x9c
  402f3c:	f8c8 7004 	str.w	r7, [r8, #4]
  402f40:	9326      	str	r3, [sp, #152]	; 0x98
  402f42:	f300 831f 	bgt.w	403584 <_svfprintf_r+0x1198>
  402f46:	f108 0808 	add.w	r8, r8, #8
  402f4a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402f4c:	2f00      	cmp	r7, #0
  402f4e:	bfa8      	it	ge
  402f50:	1bdb      	subge	r3, r3, r7
  402f52:	2b00      	cmp	r3, #0
  402f54:	461f      	mov	r7, r3
  402f56:	f340 80d6 	ble.w	403106 <_svfprintf_r+0xd1a>
  402f5a:	2f10      	cmp	r7, #16
  402f5c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402f5e:	4d31      	ldr	r5, [pc, #196]	; (403024 <_svfprintf_r+0xc38>)
  402f60:	f340 81ed 	ble.w	40333e <_svfprintf_r+0xf52>
  402f64:	4642      	mov	r2, r8
  402f66:	4621      	mov	r1, r4
  402f68:	46b0      	mov	r8, r6
  402f6a:	f04f 0b10 	mov.w	fp, #16
  402f6e:	462e      	mov	r6, r5
  402f70:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402f72:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402f74:	e004      	b.n	402f80 <_svfprintf_r+0xb94>
  402f76:	3208      	adds	r2, #8
  402f78:	3f10      	subs	r7, #16
  402f7a:	2f10      	cmp	r7, #16
  402f7c:	f340 81db 	ble.w	403336 <_svfprintf_r+0xf4a>
  402f80:	3301      	adds	r3, #1
  402f82:	3110      	adds	r1, #16
  402f84:	2b07      	cmp	r3, #7
  402f86:	9127      	str	r1, [sp, #156]	; 0x9c
  402f88:	9326      	str	r3, [sp, #152]	; 0x98
  402f8a:	e882 0840 	stmia.w	r2, {r6, fp}
  402f8e:	ddf2      	ble.n	402f76 <_svfprintf_r+0xb8a>
  402f90:	aa25      	add	r2, sp, #148	; 0x94
  402f92:	4629      	mov	r1, r5
  402f94:	4620      	mov	r0, r4
  402f96:	f002 fb81 	bl	40569c <__ssprint_r>
  402f9a:	2800      	cmp	r0, #0
  402f9c:	f47f aaf8 	bne.w	402590 <_svfprintf_r+0x1a4>
  402fa0:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402fa2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402fa4:	464a      	mov	r2, r9
  402fa6:	e7e7      	b.n	402f78 <_svfprintf_r+0xb8c>
  402fa8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402faa:	930e      	str	r3, [sp, #56]	; 0x38
  402fac:	464e      	mov	r6, r9
  402fae:	f7ff bb2d 	b.w	40260c <_svfprintf_r+0x220>
  402fb2:	2d00      	cmp	r5, #0
  402fb4:	bf08      	it	eq
  402fb6:	2c0a      	cmpeq	r4, #10
  402fb8:	f0c0 808f 	bcc.w	4030da <_svfprintf_r+0xcee>
  402fbc:	464e      	mov	r6, r9
  402fbe:	4620      	mov	r0, r4
  402fc0:	4629      	mov	r1, r5
  402fc2:	220a      	movs	r2, #10
  402fc4:	2300      	movs	r3, #0
  402fc6:	f003 f8a3 	bl	406110 <__aeabi_uldivmod>
  402fca:	3230      	adds	r2, #48	; 0x30
  402fcc:	f806 2d01 	strb.w	r2, [r6, #-1]!
  402fd0:	4620      	mov	r0, r4
  402fd2:	4629      	mov	r1, r5
  402fd4:	2300      	movs	r3, #0
  402fd6:	220a      	movs	r2, #10
  402fd8:	f003 f89a 	bl	406110 <__aeabi_uldivmod>
  402fdc:	4604      	mov	r4, r0
  402fde:	460d      	mov	r5, r1
  402fe0:	ea54 0305 	orrs.w	r3, r4, r5
  402fe4:	d1eb      	bne.n	402fbe <_svfprintf_r+0xbd2>
  402fe6:	eba9 0306 	sub.w	r3, r9, r6
  402fea:	930e      	str	r3, [sp, #56]	; 0x38
  402fec:	f7ff bb0e 	b.w	40260c <_svfprintf_r+0x220>
  402ff0:	aa25      	add	r2, sp, #148	; 0x94
  402ff2:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402ff4:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ff6:	f002 fb51 	bl	40569c <__ssprint_r>
  402ffa:	2800      	cmp	r0, #0
  402ffc:	f47f aac8 	bne.w	402590 <_svfprintf_r+0x1a4>
  403000:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403004:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403006:	46c8      	mov	r8, r9
  403008:	f7ff bb5e 	b.w	4026c8 <_svfprintf_r+0x2dc>
  40300c:	1e5e      	subs	r6, r3, #1
  40300e:	2e00      	cmp	r6, #0
  403010:	f77f af0a 	ble.w	402e28 <_svfprintf_r+0xa3c>
  403014:	2e10      	cmp	r6, #16
  403016:	4d03      	ldr	r5, [pc, #12]	; (403024 <_svfprintf_r+0xc38>)
  403018:	dd22      	ble.n	403060 <_svfprintf_r+0xc74>
  40301a:	4622      	mov	r2, r4
  40301c:	f04f 0b10 	mov.w	fp, #16
  403020:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403022:	e006      	b.n	403032 <_svfprintf_r+0xc46>
  403024:	00406ef0 	.word	0x00406ef0
  403028:	3e10      	subs	r6, #16
  40302a:	2e10      	cmp	r6, #16
  40302c:	f108 0808 	add.w	r8, r8, #8
  403030:	dd15      	ble.n	40305e <_svfprintf_r+0xc72>
  403032:	3701      	adds	r7, #1
  403034:	3210      	adds	r2, #16
  403036:	2f07      	cmp	r7, #7
  403038:	9227      	str	r2, [sp, #156]	; 0x9c
  40303a:	9726      	str	r7, [sp, #152]	; 0x98
  40303c:	e888 0820 	stmia.w	r8, {r5, fp}
  403040:	ddf2      	ble.n	403028 <_svfprintf_r+0xc3c>
  403042:	aa25      	add	r2, sp, #148	; 0x94
  403044:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403046:	4620      	mov	r0, r4
  403048:	f002 fb28 	bl	40569c <__ssprint_r>
  40304c:	2800      	cmp	r0, #0
  40304e:	f47f aa9f 	bne.w	402590 <_svfprintf_r+0x1a4>
  403052:	3e10      	subs	r6, #16
  403054:	2e10      	cmp	r6, #16
  403056:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403058:	9f26      	ldr	r7, [sp, #152]	; 0x98
  40305a:	46c8      	mov	r8, r9
  40305c:	dce9      	bgt.n	403032 <_svfprintf_r+0xc46>
  40305e:	4614      	mov	r4, r2
  403060:	3701      	adds	r7, #1
  403062:	4434      	add	r4, r6
  403064:	2f07      	cmp	r7, #7
  403066:	9427      	str	r4, [sp, #156]	; 0x9c
  403068:	9726      	str	r7, [sp, #152]	; 0x98
  40306a:	e888 0060 	stmia.w	r8, {r5, r6}
  40306e:	f77f aed9 	ble.w	402e24 <_svfprintf_r+0xa38>
  403072:	aa25      	add	r2, sp, #148	; 0x94
  403074:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403076:	980c      	ldr	r0, [sp, #48]	; 0x30
  403078:	f002 fb10 	bl	40569c <__ssprint_r>
  40307c:	2800      	cmp	r0, #0
  40307e:	f47f aa87 	bne.w	402590 <_svfprintf_r+0x1a4>
  403082:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403084:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403086:	46c8      	mov	r8, r9
  403088:	e6ce      	b.n	402e28 <_svfprintf_r+0xa3c>
  40308a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40308c:	6814      	ldr	r4, [r2, #0]
  40308e:	4613      	mov	r3, r2
  403090:	3304      	adds	r3, #4
  403092:	17e5      	asrs	r5, r4, #31
  403094:	930f      	str	r3, [sp, #60]	; 0x3c
  403096:	4622      	mov	r2, r4
  403098:	462b      	mov	r3, r5
  40309a:	e4fa      	b.n	402a92 <_svfprintf_r+0x6a6>
  40309c:	3204      	adds	r2, #4
  40309e:	681c      	ldr	r4, [r3, #0]
  4030a0:	920f      	str	r2, [sp, #60]	; 0x3c
  4030a2:	2301      	movs	r3, #1
  4030a4:	2500      	movs	r5, #0
  4030a6:	f7ff ba94 	b.w	4025d2 <_svfprintf_r+0x1e6>
  4030aa:	681c      	ldr	r4, [r3, #0]
  4030ac:	3304      	adds	r3, #4
  4030ae:	930f      	str	r3, [sp, #60]	; 0x3c
  4030b0:	2500      	movs	r5, #0
  4030b2:	e421      	b.n	4028f8 <_svfprintf_r+0x50c>
  4030b4:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4030b6:	460a      	mov	r2, r1
  4030b8:	3204      	adds	r2, #4
  4030ba:	680c      	ldr	r4, [r1, #0]
  4030bc:	920f      	str	r2, [sp, #60]	; 0x3c
  4030be:	2500      	movs	r5, #0
  4030c0:	f7ff ba87 	b.w	4025d2 <_svfprintf_r+0x1e6>
  4030c4:	4614      	mov	r4, r2
  4030c6:	3301      	adds	r3, #1
  4030c8:	4434      	add	r4, r6
  4030ca:	2b07      	cmp	r3, #7
  4030cc:	9427      	str	r4, [sp, #156]	; 0x9c
  4030ce:	9326      	str	r3, [sp, #152]	; 0x98
  4030d0:	e888 0060 	stmia.w	r8, {r5, r6}
  4030d4:	f77f ab68 	ble.w	4027a8 <_svfprintf_r+0x3bc>
  4030d8:	e6b3      	b.n	402e42 <_svfprintf_r+0xa56>
  4030da:	f8dd b01c 	ldr.w	fp, [sp, #28]
  4030de:	f8cd b01c 	str.w	fp, [sp, #28]
  4030e2:	ae42      	add	r6, sp, #264	; 0x108
  4030e4:	3430      	adds	r4, #48	; 0x30
  4030e6:	2301      	movs	r3, #1
  4030e8:	f806 4d41 	strb.w	r4, [r6, #-65]!
  4030ec:	930e      	str	r3, [sp, #56]	; 0x38
  4030ee:	f7ff ba8d 	b.w	40260c <_svfprintf_r+0x220>
  4030f2:	aa25      	add	r2, sp, #148	; 0x94
  4030f4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4030f6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4030f8:	f002 fad0 	bl	40569c <__ssprint_r>
  4030fc:	2800      	cmp	r0, #0
  4030fe:	f47f aa47 	bne.w	402590 <_svfprintf_r+0x1a4>
  403102:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403104:	46c8      	mov	r8, r9
  403106:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  403108:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40310a:	429a      	cmp	r2, r3
  40310c:	db44      	blt.n	403198 <_svfprintf_r+0xdac>
  40310e:	9b07      	ldr	r3, [sp, #28]
  403110:	07d9      	lsls	r1, r3, #31
  403112:	d441      	bmi.n	403198 <_svfprintf_r+0xdac>
  403114:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403116:	9812      	ldr	r0, [sp, #72]	; 0x48
  403118:	1a9a      	subs	r2, r3, r2
  40311a:	1a1d      	subs	r5, r3, r0
  40311c:	4295      	cmp	r5, r2
  40311e:	bfa8      	it	ge
  403120:	4615      	movge	r5, r2
  403122:	2d00      	cmp	r5, #0
  403124:	dd0e      	ble.n	403144 <_svfprintf_r+0xd58>
  403126:	9926      	ldr	r1, [sp, #152]	; 0x98
  403128:	f8c8 5004 	str.w	r5, [r8, #4]
  40312c:	3101      	adds	r1, #1
  40312e:	4406      	add	r6, r0
  403130:	442c      	add	r4, r5
  403132:	2907      	cmp	r1, #7
  403134:	f8c8 6000 	str.w	r6, [r8]
  403138:	9427      	str	r4, [sp, #156]	; 0x9c
  40313a:	9126      	str	r1, [sp, #152]	; 0x98
  40313c:	f300 823b 	bgt.w	4035b6 <_svfprintf_r+0x11ca>
  403140:	f108 0808 	add.w	r8, r8, #8
  403144:	2d00      	cmp	r5, #0
  403146:	bfac      	ite	ge
  403148:	1b56      	subge	r6, r2, r5
  40314a:	4616      	movlt	r6, r2
  40314c:	2e00      	cmp	r6, #0
  40314e:	f77f ab2d 	ble.w	4027ac <_svfprintf_r+0x3c0>
  403152:	2e10      	cmp	r6, #16
  403154:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403156:	4db0      	ldr	r5, [pc, #704]	; (403418 <_svfprintf_r+0x102c>)
  403158:	ddb5      	ble.n	4030c6 <_svfprintf_r+0xcda>
  40315a:	4622      	mov	r2, r4
  40315c:	2710      	movs	r7, #16
  40315e:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  403162:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  403164:	e004      	b.n	403170 <_svfprintf_r+0xd84>
  403166:	f108 0808 	add.w	r8, r8, #8
  40316a:	3e10      	subs	r6, #16
  40316c:	2e10      	cmp	r6, #16
  40316e:	dda9      	ble.n	4030c4 <_svfprintf_r+0xcd8>
  403170:	3301      	adds	r3, #1
  403172:	3210      	adds	r2, #16
  403174:	2b07      	cmp	r3, #7
  403176:	9227      	str	r2, [sp, #156]	; 0x9c
  403178:	9326      	str	r3, [sp, #152]	; 0x98
  40317a:	e888 00a0 	stmia.w	r8, {r5, r7}
  40317e:	ddf2      	ble.n	403166 <_svfprintf_r+0xd7a>
  403180:	aa25      	add	r2, sp, #148	; 0x94
  403182:	4621      	mov	r1, r4
  403184:	4658      	mov	r0, fp
  403186:	f002 fa89 	bl	40569c <__ssprint_r>
  40318a:	2800      	cmp	r0, #0
  40318c:	f47f aa00 	bne.w	402590 <_svfprintf_r+0x1a4>
  403190:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403192:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403194:	46c8      	mov	r8, r9
  403196:	e7e8      	b.n	40316a <_svfprintf_r+0xd7e>
  403198:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40319a:	9819      	ldr	r0, [sp, #100]	; 0x64
  40319c:	991a      	ldr	r1, [sp, #104]	; 0x68
  40319e:	f8c8 1000 	str.w	r1, [r8]
  4031a2:	3301      	adds	r3, #1
  4031a4:	4404      	add	r4, r0
  4031a6:	2b07      	cmp	r3, #7
  4031a8:	9427      	str	r4, [sp, #156]	; 0x9c
  4031aa:	f8c8 0004 	str.w	r0, [r8, #4]
  4031ae:	9326      	str	r3, [sp, #152]	; 0x98
  4031b0:	f300 81f5 	bgt.w	40359e <_svfprintf_r+0x11b2>
  4031b4:	f108 0808 	add.w	r8, r8, #8
  4031b8:	e7ac      	b.n	403114 <_svfprintf_r+0xd28>
  4031ba:	9b07      	ldr	r3, [sp, #28]
  4031bc:	07da      	lsls	r2, r3, #31
  4031be:	f53f adfe 	bmi.w	402dbe <_svfprintf_r+0x9d2>
  4031c2:	3701      	adds	r7, #1
  4031c4:	3401      	adds	r4, #1
  4031c6:	2301      	movs	r3, #1
  4031c8:	2f07      	cmp	r7, #7
  4031ca:	9427      	str	r4, [sp, #156]	; 0x9c
  4031cc:	9726      	str	r7, [sp, #152]	; 0x98
  4031ce:	f8c8 6000 	str.w	r6, [r8]
  4031d2:	f8c8 3004 	str.w	r3, [r8, #4]
  4031d6:	f77f ae25 	ble.w	402e24 <_svfprintf_r+0xa38>
  4031da:	e74a      	b.n	403072 <_svfprintf_r+0xc86>
  4031dc:	aa25      	add	r2, sp, #148	; 0x94
  4031de:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4031e0:	980c      	ldr	r0, [sp, #48]	; 0x30
  4031e2:	f002 fa5b 	bl	40569c <__ssprint_r>
  4031e6:	2800      	cmp	r0, #0
  4031e8:	f47f a9d2 	bne.w	402590 <_svfprintf_r+0x1a4>
  4031ec:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4031ee:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4031f0:	46c8      	mov	r8, r9
  4031f2:	e5f2      	b.n	402dda <_svfprintf_r+0x9ee>
  4031f4:	aa25      	add	r2, sp, #148	; 0x94
  4031f6:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4031f8:	980c      	ldr	r0, [sp, #48]	; 0x30
  4031fa:	f002 fa4f 	bl	40569c <__ssprint_r>
  4031fe:	2800      	cmp	r0, #0
  403200:	f47f a9c6 	bne.w	402590 <_svfprintf_r+0x1a4>
  403204:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403206:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403208:	46c8      	mov	r8, r9
  40320a:	e5f5      	b.n	402df8 <_svfprintf_r+0xa0c>
  40320c:	464e      	mov	r6, r9
  40320e:	f7ff b9fd 	b.w	40260c <_svfprintf_r+0x220>
  403212:	aa25      	add	r2, sp, #148	; 0x94
  403214:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403216:	980c      	ldr	r0, [sp, #48]	; 0x30
  403218:	f002 fa40 	bl	40569c <__ssprint_r>
  40321c:	2800      	cmp	r0, #0
  40321e:	f47f a9b7 	bne.w	402590 <_svfprintf_r+0x1a4>
  403222:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403224:	46c8      	mov	r8, r9
  403226:	f7ff ba72 	b.w	40270e <_svfprintf_r+0x322>
  40322a:	9c15      	ldr	r4, [sp, #84]	; 0x54
  40322c:	4622      	mov	r2, r4
  40322e:	4620      	mov	r0, r4
  403230:	9c14      	ldr	r4, [sp, #80]	; 0x50
  403232:	4623      	mov	r3, r4
  403234:	4621      	mov	r1, r4
  403236:	f002 ff2d 	bl	406094 <__aeabi_dcmpun>
  40323a:	2800      	cmp	r0, #0
  40323c:	f040 8286 	bne.w	40374c <_svfprintf_r+0x1360>
  403240:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403242:	3301      	adds	r3, #1
  403244:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403246:	f023 0320 	bic.w	r3, r3, #32
  40324a:	930e      	str	r3, [sp, #56]	; 0x38
  40324c:	f000 81e2 	beq.w	403614 <_svfprintf_r+0x1228>
  403250:	2b47      	cmp	r3, #71	; 0x47
  403252:	f000 811e 	beq.w	403492 <_svfprintf_r+0x10a6>
  403256:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  40325a:	9307      	str	r3, [sp, #28]
  40325c:	9b14      	ldr	r3, [sp, #80]	; 0x50
  40325e:	1e1f      	subs	r7, r3, #0
  403260:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403262:	9308      	str	r3, [sp, #32]
  403264:	bfbb      	ittet	lt
  403266:	463b      	movlt	r3, r7
  403268:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  40326c:	2300      	movge	r3, #0
  40326e:	232d      	movlt	r3, #45	; 0x2d
  403270:	9310      	str	r3, [sp, #64]	; 0x40
  403272:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403274:	2b66      	cmp	r3, #102	; 0x66
  403276:	f000 81bb 	beq.w	4035f0 <_svfprintf_r+0x1204>
  40327a:	2b46      	cmp	r3, #70	; 0x46
  40327c:	f000 80df 	beq.w	40343e <_svfprintf_r+0x1052>
  403280:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403282:	9a08      	ldr	r2, [sp, #32]
  403284:	2b45      	cmp	r3, #69	; 0x45
  403286:	bf0c      	ite	eq
  403288:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  40328a:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  40328c:	a823      	add	r0, sp, #140	; 0x8c
  40328e:	a920      	add	r1, sp, #128	; 0x80
  403290:	bf08      	it	eq
  403292:	1c5d      	addeq	r5, r3, #1
  403294:	9004      	str	r0, [sp, #16]
  403296:	9103      	str	r1, [sp, #12]
  403298:	a81f      	add	r0, sp, #124	; 0x7c
  40329a:	2102      	movs	r1, #2
  40329c:	463b      	mov	r3, r7
  40329e:	9002      	str	r0, [sp, #8]
  4032a0:	9501      	str	r5, [sp, #4]
  4032a2:	9100      	str	r1, [sp, #0]
  4032a4:	980c      	ldr	r0, [sp, #48]	; 0x30
  4032a6:	f000 fb73 	bl	403990 <_dtoa_r>
  4032aa:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4032ac:	2b67      	cmp	r3, #103	; 0x67
  4032ae:	4606      	mov	r6, r0
  4032b0:	f040 81e0 	bne.w	403674 <_svfprintf_r+0x1288>
  4032b4:	f01b 0f01 	tst.w	fp, #1
  4032b8:	f000 8246 	beq.w	403748 <_svfprintf_r+0x135c>
  4032bc:	1974      	adds	r4, r6, r5
  4032be:	9a16      	ldr	r2, [sp, #88]	; 0x58
  4032c0:	9808      	ldr	r0, [sp, #32]
  4032c2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  4032c4:	4639      	mov	r1, r7
  4032c6:	f002 feb3 	bl	406030 <__aeabi_dcmpeq>
  4032ca:	2800      	cmp	r0, #0
  4032cc:	f040 8165 	bne.w	40359a <_svfprintf_r+0x11ae>
  4032d0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4032d2:	42a3      	cmp	r3, r4
  4032d4:	d206      	bcs.n	4032e4 <_svfprintf_r+0xef8>
  4032d6:	2130      	movs	r1, #48	; 0x30
  4032d8:	1c5a      	adds	r2, r3, #1
  4032da:	9223      	str	r2, [sp, #140]	; 0x8c
  4032dc:	7019      	strb	r1, [r3, #0]
  4032de:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4032e0:	429c      	cmp	r4, r3
  4032e2:	d8f9      	bhi.n	4032d8 <_svfprintf_r+0xeec>
  4032e4:	1b9b      	subs	r3, r3, r6
  4032e6:	9313      	str	r3, [sp, #76]	; 0x4c
  4032e8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4032ea:	2b47      	cmp	r3, #71	; 0x47
  4032ec:	f000 80e9 	beq.w	4034c2 <_svfprintf_r+0x10d6>
  4032f0:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4032f2:	2b65      	cmp	r3, #101	; 0x65
  4032f4:	f340 81cd 	ble.w	403692 <_svfprintf_r+0x12a6>
  4032f8:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4032fa:	2b66      	cmp	r3, #102	; 0x66
  4032fc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4032fe:	9312      	str	r3, [sp, #72]	; 0x48
  403300:	f000 819e 	beq.w	403640 <_svfprintf_r+0x1254>
  403304:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403306:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403308:	4619      	mov	r1, r3
  40330a:	4291      	cmp	r1, r2
  40330c:	f300 818a 	bgt.w	403624 <_svfprintf_r+0x1238>
  403310:	f01b 0f01 	tst.w	fp, #1
  403314:	f040 8213 	bne.w	40373e <_svfprintf_r+0x1352>
  403318:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  40331c:	9308      	str	r3, [sp, #32]
  40331e:	2367      	movs	r3, #103	; 0x67
  403320:	920e      	str	r2, [sp, #56]	; 0x38
  403322:	9311      	str	r3, [sp, #68]	; 0x44
  403324:	9b10      	ldr	r3, [sp, #64]	; 0x40
  403326:	2b00      	cmp	r3, #0
  403328:	f040 80c4 	bne.w	4034b4 <_svfprintf_r+0x10c8>
  40332c:	930a      	str	r3, [sp, #40]	; 0x28
  40332e:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403332:	f7ff b973 	b.w	40261c <_svfprintf_r+0x230>
  403336:	4635      	mov	r5, r6
  403338:	460c      	mov	r4, r1
  40333a:	4646      	mov	r6, r8
  40333c:	4690      	mov	r8, r2
  40333e:	3301      	adds	r3, #1
  403340:	443c      	add	r4, r7
  403342:	2b07      	cmp	r3, #7
  403344:	9427      	str	r4, [sp, #156]	; 0x9c
  403346:	9326      	str	r3, [sp, #152]	; 0x98
  403348:	e888 00a0 	stmia.w	r8, {r5, r7}
  40334c:	f73f aed1 	bgt.w	4030f2 <_svfprintf_r+0xd06>
  403350:	f108 0808 	add.w	r8, r8, #8
  403354:	e6d7      	b.n	403106 <_svfprintf_r+0xd1a>
  403356:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403358:	6813      	ldr	r3, [r2, #0]
  40335a:	3204      	adds	r2, #4
  40335c:	920f      	str	r2, [sp, #60]	; 0x3c
  40335e:	9a09      	ldr	r2, [sp, #36]	; 0x24
  403360:	601a      	str	r2, [r3, #0]
  403362:	f7ff b86a 	b.w	40243a <_svfprintf_r+0x4e>
  403366:	aa25      	add	r2, sp, #148	; 0x94
  403368:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40336a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40336c:	f002 f996 	bl	40569c <__ssprint_r>
  403370:	2800      	cmp	r0, #0
  403372:	f47f a90d 	bne.w	402590 <_svfprintf_r+0x1a4>
  403376:	46c8      	mov	r8, r9
  403378:	e48d      	b.n	402c96 <_svfprintf_r+0x8aa>
  40337a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40337c:	4a27      	ldr	r2, [pc, #156]	; (40341c <_svfprintf_r+0x1030>)
  40337e:	f8c8 2000 	str.w	r2, [r8]
  403382:	3301      	adds	r3, #1
  403384:	3401      	adds	r4, #1
  403386:	2201      	movs	r2, #1
  403388:	2b07      	cmp	r3, #7
  40338a:	9427      	str	r4, [sp, #156]	; 0x9c
  40338c:	9326      	str	r3, [sp, #152]	; 0x98
  40338e:	f8c8 2004 	str.w	r2, [r8, #4]
  403392:	dc72      	bgt.n	40347a <_svfprintf_r+0x108e>
  403394:	f108 0808 	add.w	r8, r8, #8
  403398:	b929      	cbnz	r1, 4033a6 <_svfprintf_r+0xfba>
  40339a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40339c:	b91b      	cbnz	r3, 4033a6 <_svfprintf_r+0xfba>
  40339e:	9b07      	ldr	r3, [sp, #28]
  4033a0:	07d8      	lsls	r0, r3, #31
  4033a2:	f57f aa03 	bpl.w	4027ac <_svfprintf_r+0x3c0>
  4033a6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4033a8:	9819      	ldr	r0, [sp, #100]	; 0x64
  4033aa:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  4033ac:	f8c8 2000 	str.w	r2, [r8]
  4033b0:	3301      	adds	r3, #1
  4033b2:	4602      	mov	r2, r0
  4033b4:	4422      	add	r2, r4
  4033b6:	2b07      	cmp	r3, #7
  4033b8:	9227      	str	r2, [sp, #156]	; 0x9c
  4033ba:	f8c8 0004 	str.w	r0, [r8, #4]
  4033be:	9326      	str	r3, [sp, #152]	; 0x98
  4033c0:	f300 818d 	bgt.w	4036de <_svfprintf_r+0x12f2>
  4033c4:	f108 0808 	add.w	r8, r8, #8
  4033c8:	2900      	cmp	r1, #0
  4033ca:	f2c0 8165 	blt.w	403698 <_svfprintf_r+0x12ac>
  4033ce:	9913      	ldr	r1, [sp, #76]	; 0x4c
  4033d0:	f8c8 6000 	str.w	r6, [r8]
  4033d4:	3301      	adds	r3, #1
  4033d6:	188c      	adds	r4, r1, r2
  4033d8:	2b07      	cmp	r3, #7
  4033da:	9427      	str	r4, [sp, #156]	; 0x9c
  4033dc:	9326      	str	r3, [sp, #152]	; 0x98
  4033de:	f8c8 1004 	str.w	r1, [r8, #4]
  4033e2:	f77f a9e1 	ble.w	4027a8 <_svfprintf_r+0x3bc>
  4033e6:	e52c      	b.n	402e42 <_svfprintf_r+0xa56>
  4033e8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4033ea:	9909      	ldr	r1, [sp, #36]	; 0x24
  4033ec:	6813      	ldr	r3, [r2, #0]
  4033ee:	17cd      	asrs	r5, r1, #31
  4033f0:	4608      	mov	r0, r1
  4033f2:	3204      	adds	r2, #4
  4033f4:	4629      	mov	r1, r5
  4033f6:	920f      	str	r2, [sp, #60]	; 0x3c
  4033f8:	e9c3 0100 	strd	r0, r1, [r3]
  4033fc:	f7ff b81d 	b.w	40243a <_svfprintf_r+0x4e>
  403400:	aa25      	add	r2, sp, #148	; 0x94
  403402:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403404:	980c      	ldr	r0, [sp, #48]	; 0x30
  403406:	f002 f949 	bl	40569c <__ssprint_r>
  40340a:	2800      	cmp	r0, #0
  40340c:	f47f a8c0 	bne.w	402590 <_svfprintf_r+0x1a4>
  403410:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403412:	46c8      	mov	r8, r9
  403414:	e458      	b.n	402cc8 <_svfprintf_r+0x8dc>
  403416:	bf00      	nop
  403418:	00406ef0 	.word	0x00406ef0
  40341c:	00406edc 	.word	0x00406edc
  403420:	2140      	movs	r1, #64	; 0x40
  403422:	980c      	ldr	r0, [sp, #48]	; 0x30
  403424:	f001 fa0a 	bl	40483c <_malloc_r>
  403428:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  40342a:	6010      	str	r0, [r2, #0]
  40342c:	6110      	str	r0, [r2, #16]
  40342e:	2800      	cmp	r0, #0
  403430:	f000 81f2 	beq.w	403818 <_svfprintf_r+0x142c>
  403434:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403436:	2340      	movs	r3, #64	; 0x40
  403438:	6153      	str	r3, [r2, #20]
  40343a:	f7fe bfee 	b.w	40241a <_svfprintf_r+0x2e>
  40343e:	a823      	add	r0, sp, #140	; 0x8c
  403440:	a920      	add	r1, sp, #128	; 0x80
  403442:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  403444:	9004      	str	r0, [sp, #16]
  403446:	9103      	str	r1, [sp, #12]
  403448:	a81f      	add	r0, sp, #124	; 0x7c
  40344a:	2103      	movs	r1, #3
  40344c:	9002      	str	r0, [sp, #8]
  40344e:	9a08      	ldr	r2, [sp, #32]
  403450:	9401      	str	r4, [sp, #4]
  403452:	463b      	mov	r3, r7
  403454:	9100      	str	r1, [sp, #0]
  403456:	980c      	ldr	r0, [sp, #48]	; 0x30
  403458:	f000 fa9a 	bl	403990 <_dtoa_r>
  40345c:	4625      	mov	r5, r4
  40345e:	4606      	mov	r6, r0
  403460:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403462:	2b46      	cmp	r3, #70	; 0x46
  403464:	eb06 0405 	add.w	r4, r6, r5
  403468:	f47f af29 	bne.w	4032be <_svfprintf_r+0xed2>
  40346c:	7833      	ldrb	r3, [r6, #0]
  40346e:	2b30      	cmp	r3, #48	; 0x30
  403470:	f000 8178 	beq.w	403764 <_svfprintf_r+0x1378>
  403474:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  403476:	442c      	add	r4, r5
  403478:	e721      	b.n	4032be <_svfprintf_r+0xed2>
  40347a:	aa25      	add	r2, sp, #148	; 0x94
  40347c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40347e:	980c      	ldr	r0, [sp, #48]	; 0x30
  403480:	f002 f90c 	bl	40569c <__ssprint_r>
  403484:	2800      	cmp	r0, #0
  403486:	f47f a883 	bne.w	402590 <_svfprintf_r+0x1a4>
  40348a:	991f      	ldr	r1, [sp, #124]	; 0x7c
  40348c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40348e:	46c8      	mov	r8, r9
  403490:	e782      	b.n	403398 <_svfprintf_r+0xfac>
  403492:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403494:	2b00      	cmp	r3, #0
  403496:	bf08      	it	eq
  403498:	2301      	moveq	r3, #1
  40349a:	930a      	str	r3, [sp, #40]	; 0x28
  40349c:	e6db      	b.n	403256 <_svfprintf_r+0xe6a>
  40349e:	4630      	mov	r0, r6
  4034a0:	940a      	str	r4, [sp, #40]	; 0x28
  4034a2:	f002 f88d 	bl	4055c0 <strlen>
  4034a6:	950f      	str	r5, [sp, #60]	; 0x3c
  4034a8:	900e      	str	r0, [sp, #56]	; 0x38
  4034aa:	f8cd b01c 	str.w	fp, [sp, #28]
  4034ae:	4603      	mov	r3, r0
  4034b0:	f7ff b9f9 	b.w	4028a6 <_svfprintf_r+0x4ba>
  4034b4:	272d      	movs	r7, #45	; 0x2d
  4034b6:	2300      	movs	r3, #0
  4034b8:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4034bc:	930a      	str	r3, [sp, #40]	; 0x28
  4034be:	f7ff b8ae 	b.w	40261e <_svfprintf_r+0x232>
  4034c2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4034c4:	9312      	str	r3, [sp, #72]	; 0x48
  4034c6:	461a      	mov	r2, r3
  4034c8:	3303      	adds	r3, #3
  4034ca:	db04      	blt.n	4034d6 <_svfprintf_r+0x10ea>
  4034cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4034ce:	4619      	mov	r1, r3
  4034d0:	4291      	cmp	r1, r2
  4034d2:	f6bf af17 	bge.w	403304 <_svfprintf_r+0xf18>
  4034d6:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4034d8:	3b02      	subs	r3, #2
  4034da:	9311      	str	r3, [sp, #68]	; 0x44
  4034dc:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  4034e0:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  4034e4:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4034e6:	3b01      	subs	r3, #1
  4034e8:	2b00      	cmp	r3, #0
  4034ea:	931f      	str	r3, [sp, #124]	; 0x7c
  4034ec:	bfbd      	ittte	lt
  4034ee:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  4034f0:	f1c3 0301 	rsblt	r3, r3, #1
  4034f4:	222d      	movlt	r2, #45	; 0x2d
  4034f6:	222b      	movge	r2, #43	; 0x2b
  4034f8:	2b09      	cmp	r3, #9
  4034fa:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  4034fe:	f340 8116 	ble.w	40372e <_svfprintf_r+0x1342>
  403502:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  403506:	4620      	mov	r0, r4
  403508:	4dab      	ldr	r5, [pc, #684]	; (4037b8 <_svfprintf_r+0x13cc>)
  40350a:	e000      	b.n	40350e <_svfprintf_r+0x1122>
  40350c:	4610      	mov	r0, r2
  40350e:	fb85 1203 	smull	r1, r2, r5, r3
  403512:	17d9      	asrs	r1, r3, #31
  403514:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  403518:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  40351c:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  403520:	3230      	adds	r2, #48	; 0x30
  403522:	2909      	cmp	r1, #9
  403524:	f800 2c01 	strb.w	r2, [r0, #-1]
  403528:	460b      	mov	r3, r1
  40352a:	f100 32ff 	add.w	r2, r0, #4294967295
  40352e:	dced      	bgt.n	40350c <_svfprintf_r+0x1120>
  403530:	3330      	adds	r3, #48	; 0x30
  403532:	3802      	subs	r0, #2
  403534:	b2d9      	uxtb	r1, r3
  403536:	4284      	cmp	r4, r0
  403538:	f802 1c01 	strb.w	r1, [r2, #-1]
  40353c:	f240 8165 	bls.w	40380a <_svfprintf_r+0x141e>
  403540:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  403544:	4613      	mov	r3, r2
  403546:	e001      	b.n	40354c <_svfprintf_r+0x1160>
  403548:	f813 1b01 	ldrb.w	r1, [r3], #1
  40354c:	f800 1b01 	strb.w	r1, [r0], #1
  403550:	42a3      	cmp	r3, r4
  403552:	d1f9      	bne.n	403548 <_svfprintf_r+0x115c>
  403554:	3301      	adds	r3, #1
  403556:	1a9b      	subs	r3, r3, r2
  403558:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  40355c:	4413      	add	r3, r2
  40355e:	aa21      	add	r2, sp, #132	; 0x84
  403560:	1a9b      	subs	r3, r3, r2
  403562:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  403564:	931b      	str	r3, [sp, #108]	; 0x6c
  403566:	2a01      	cmp	r2, #1
  403568:	4413      	add	r3, r2
  40356a:	930e      	str	r3, [sp, #56]	; 0x38
  40356c:	f340 8119 	ble.w	4037a2 <_svfprintf_r+0x13b6>
  403570:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403572:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403574:	4413      	add	r3, r2
  403576:	930e      	str	r3, [sp, #56]	; 0x38
  403578:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40357c:	9308      	str	r3, [sp, #32]
  40357e:	2300      	movs	r3, #0
  403580:	9312      	str	r3, [sp, #72]	; 0x48
  403582:	e6cf      	b.n	403324 <_svfprintf_r+0xf38>
  403584:	aa25      	add	r2, sp, #148	; 0x94
  403586:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403588:	980c      	ldr	r0, [sp, #48]	; 0x30
  40358a:	f002 f887 	bl	40569c <__ssprint_r>
  40358e:	2800      	cmp	r0, #0
  403590:	f47e affe 	bne.w	402590 <_svfprintf_r+0x1a4>
  403594:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403596:	46c8      	mov	r8, r9
  403598:	e4d7      	b.n	402f4a <_svfprintf_r+0xb5e>
  40359a:	4623      	mov	r3, r4
  40359c:	e6a2      	b.n	4032e4 <_svfprintf_r+0xef8>
  40359e:	aa25      	add	r2, sp, #148	; 0x94
  4035a0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4035a2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4035a4:	f002 f87a 	bl	40569c <__ssprint_r>
  4035a8:	2800      	cmp	r0, #0
  4035aa:	f47e aff1 	bne.w	402590 <_svfprintf_r+0x1a4>
  4035ae:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  4035b0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4035b2:	46c8      	mov	r8, r9
  4035b4:	e5ae      	b.n	403114 <_svfprintf_r+0xd28>
  4035b6:	aa25      	add	r2, sp, #148	; 0x94
  4035b8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4035ba:	980c      	ldr	r0, [sp, #48]	; 0x30
  4035bc:	f002 f86e 	bl	40569c <__ssprint_r>
  4035c0:	2800      	cmp	r0, #0
  4035c2:	f47e afe5 	bne.w	402590 <_svfprintf_r+0x1a4>
  4035c6:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  4035c8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4035ca:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4035cc:	1a9a      	subs	r2, r3, r2
  4035ce:	46c8      	mov	r8, r9
  4035d0:	e5b8      	b.n	403144 <_svfprintf_r+0xd58>
  4035d2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4035d4:	9612      	str	r6, [sp, #72]	; 0x48
  4035d6:	2b06      	cmp	r3, #6
  4035d8:	bf28      	it	cs
  4035da:	2306      	movcs	r3, #6
  4035dc:	960a      	str	r6, [sp, #40]	; 0x28
  4035de:	4637      	mov	r7, r6
  4035e0:	9308      	str	r3, [sp, #32]
  4035e2:	950f      	str	r5, [sp, #60]	; 0x3c
  4035e4:	f8cd b01c 	str.w	fp, [sp, #28]
  4035e8:	930e      	str	r3, [sp, #56]	; 0x38
  4035ea:	4e74      	ldr	r6, [pc, #464]	; (4037bc <_svfprintf_r+0x13d0>)
  4035ec:	f7ff b816 	b.w	40261c <_svfprintf_r+0x230>
  4035f0:	a823      	add	r0, sp, #140	; 0x8c
  4035f2:	a920      	add	r1, sp, #128	; 0x80
  4035f4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  4035f6:	9004      	str	r0, [sp, #16]
  4035f8:	9103      	str	r1, [sp, #12]
  4035fa:	a81f      	add	r0, sp, #124	; 0x7c
  4035fc:	2103      	movs	r1, #3
  4035fe:	9002      	str	r0, [sp, #8]
  403600:	9a08      	ldr	r2, [sp, #32]
  403602:	9501      	str	r5, [sp, #4]
  403604:	463b      	mov	r3, r7
  403606:	9100      	str	r1, [sp, #0]
  403608:	980c      	ldr	r0, [sp, #48]	; 0x30
  40360a:	f000 f9c1 	bl	403990 <_dtoa_r>
  40360e:	4606      	mov	r6, r0
  403610:	1944      	adds	r4, r0, r5
  403612:	e72b      	b.n	40346c <_svfprintf_r+0x1080>
  403614:	2306      	movs	r3, #6
  403616:	930a      	str	r3, [sp, #40]	; 0x28
  403618:	e61d      	b.n	403256 <_svfprintf_r+0xe6a>
  40361a:	272d      	movs	r7, #45	; 0x2d
  40361c:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  403620:	f7ff bacd 	b.w	402bbe <_svfprintf_r+0x7d2>
  403624:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403626:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403628:	4413      	add	r3, r2
  40362a:	9a12      	ldr	r2, [sp, #72]	; 0x48
  40362c:	930e      	str	r3, [sp, #56]	; 0x38
  40362e:	2a00      	cmp	r2, #0
  403630:	f340 80b0 	ble.w	403794 <_svfprintf_r+0x13a8>
  403634:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403638:	9308      	str	r3, [sp, #32]
  40363a:	2367      	movs	r3, #103	; 0x67
  40363c:	9311      	str	r3, [sp, #68]	; 0x44
  40363e:	e671      	b.n	403324 <_svfprintf_r+0xf38>
  403640:	2b00      	cmp	r3, #0
  403642:	f340 80c3 	ble.w	4037cc <_svfprintf_r+0x13e0>
  403646:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403648:	2a00      	cmp	r2, #0
  40364a:	f040 8099 	bne.w	403780 <_svfprintf_r+0x1394>
  40364e:	f01b 0f01 	tst.w	fp, #1
  403652:	f040 8095 	bne.w	403780 <_svfprintf_r+0x1394>
  403656:	9308      	str	r3, [sp, #32]
  403658:	930e      	str	r3, [sp, #56]	; 0x38
  40365a:	e663      	b.n	403324 <_svfprintf_r+0xf38>
  40365c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40365e:	9308      	str	r3, [sp, #32]
  403660:	930e      	str	r3, [sp, #56]	; 0x38
  403662:	900a      	str	r0, [sp, #40]	; 0x28
  403664:	950f      	str	r5, [sp, #60]	; 0x3c
  403666:	f8cd b01c 	str.w	fp, [sp, #28]
  40366a:	9012      	str	r0, [sp, #72]	; 0x48
  40366c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403670:	f7fe bfd4 	b.w	40261c <_svfprintf_r+0x230>
  403674:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403676:	2b47      	cmp	r3, #71	; 0x47
  403678:	f47f ae20 	bne.w	4032bc <_svfprintf_r+0xed0>
  40367c:	f01b 0f01 	tst.w	fp, #1
  403680:	f47f aeee 	bne.w	403460 <_svfprintf_r+0x1074>
  403684:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  403686:	1b9b      	subs	r3, r3, r6
  403688:	9313      	str	r3, [sp, #76]	; 0x4c
  40368a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40368c:	2b47      	cmp	r3, #71	; 0x47
  40368e:	f43f af18 	beq.w	4034c2 <_svfprintf_r+0x10d6>
  403692:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403694:	9312      	str	r3, [sp, #72]	; 0x48
  403696:	e721      	b.n	4034dc <_svfprintf_r+0x10f0>
  403698:	424f      	negs	r7, r1
  40369a:	3110      	adds	r1, #16
  40369c:	4d48      	ldr	r5, [pc, #288]	; (4037c0 <_svfprintf_r+0x13d4>)
  40369e:	da2f      	bge.n	403700 <_svfprintf_r+0x1314>
  4036a0:	2410      	movs	r4, #16
  4036a2:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  4036a6:	e004      	b.n	4036b2 <_svfprintf_r+0x12c6>
  4036a8:	f108 0808 	add.w	r8, r8, #8
  4036ac:	3f10      	subs	r7, #16
  4036ae:	2f10      	cmp	r7, #16
  4036b0:	dd26      	ble.n	403700 <_svfprintf_r+0x1314>
  4036b2:	3301      	adds	r3, #1
  4036b4:	3210      	adds	r2, #16
  4036b6:	2b07      	cmp	r3, #7
  4036b8:	9227      	str	r2, [sp, #156]	; 0x9c
  4036ba:	9326      	str	r3, [sp, #152]	; 0x98
  4036bc:	f8c8 5000 	str.w	r5, [r8]
  4036c0:	f8c8 4004 	str.w	r4, [r8, #4]
  4036c4:	ddf0      	ble.n	4036a8 <_svfprintf_r+0x12bc>
  4036c6:	aa25      	add	r2, sp, #148	; 0x94
  4036c8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4036ca:	4658      	mov	r0, fp
  4036cc:	f001 ffe6 	bl	40569c <__ssprint_r>
  4036d0:	2800      	cmp	r0, #0
  4036d2:	f47e af5d 	bne.w	402590 <_svfprintf_r+0x1a4>
  4036d6:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4036d8:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4036da:	46c8      	mov	r8, r9
  4036dc:	e7e6      	b.n	4036ac <_svfprintf_r+0x12c0>
  4036de:	aa25      	add	r2, sp, #148	; 0x94
  4036e0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4036e2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4036e4:	f001 ffda 	bl	40569c <__ssprint_r>
  4036e8:	2800      	cmp	r0, #0
  4036ea:	f47e af51 	bne.w	402590 <_svfprintf_r+0x1a4>
  4036ee:	991f      	ldr	r1, [sp, #124]	; 0x7c
  4036f0:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4036f2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4036f4:	46c8      	mov	r8, r9
  4036f6:	e667      	b.n	4033c8 <_svfprintf_r+0xfdc>
  4036f8:	2000      	movs	r0, #0
  4036fa:	900a      	str	r0, [sp, #40]	; 0x28
  4036fc:	f7fe bed0 	b.w	4024a0 <_svfprintf_r+0xb4>
  403700:	3301      	adds	r3, #1
  403702:	443a      	add	r2, r7
  403704:	2b07      	cmp	r3, #7
  403706:	e888 00a0 	stmia.w	r8, {r5, r7}
  40370a:	9227      	str	r2, [sp, #156]	; 0x9c
  40370c:	9326      	str	r3, [sp, #152]	; 0x98
  40370e:	f108 0808 	add.w	r8, r8, #8
  403712:	f77f ae5c 	ble.w	4033ce <_svfprintf_r+0xfe2>
  403716:	aa25      	add	r2, sp, #148	; 0x94
  403718:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40371a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40371c:	f001 ffbe 	bl	40569c <__ssprint_r>
  403720:	2800      	cmp	r0, #0
  403722:	f47e af35 	bne.w	402590 <_svfprintf_r+0x1a4>
  403726:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403728:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40372a:	46c8      	mov	r8, r9
  40372c:	e64f      	b.n	4033ce <_svfprintf_r+0xfe2>
  40372e:	3330      	adds	r3, #48	; 0x30
  403730:	2230      	movs	r2, #48	; 0x30
  403732:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  403736:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  40373a:	ab22      	add	r3, sp, #136	; 0x88
  40373c:	e70f      	b.n	40355e <_svfprintf_r+0x1172>
  40373e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403740:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403742:	4413      	add	r3, r2
  403744:	930e      	str	r3, [sp, #56]	; 0x38
  403746:	e775      	b.n	403634 <_svfprintf_r+0x1248>
  403748:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  40374a:	e5cb      	b.n	4032e4 <_svfprintf_r+0xef8>
  40374c:	9b14      	ldr	r3, [sp, #80]	; 0x50
  40374e:	4e1d      	ldr	r6, [pc, #116]	; (4037c4 <_svfprintf_r+0x13d8>)
  403750:	2b00      	cmp	r3, #0
  403752:	bfb6      	itet	lt
  403754:	272d      	movlt	r7, #45	; 0x2d
  403756:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  40375a:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  40375e:	4b1a      	ldr	r3, [pc, #104]	; (4037c8 <_svfprintf_r+0x13dc>)
  403760:	f7ff ba2f 	b.w	402bc2 <_svfprintf_r+0x7d6>
  403764:	9a16      	ldr	r2, [sp, #88]	; 0x58
  403766:	9808      	ldr	r0, [sp, #32]
  403768:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  40376a:	4639      	mov	r1, r7
  40376c:	f002 fc60 	bl	406030 <__aeabi_dcmpeq>
  403770:	2800      	cmp	r0, #0
  403772:	f47f ae7f 	bne.w	403474 <_svfprintf_r+0x1088>
  403776:	f1c5 0501 	rsb	r5, r5, #1
  40377a:	951f      	str	r5, [sp, #124]	; 0x7c
  40377c:	442c      	add	r4, r5
  40377e:	e59e      	b.n	4032be <_svfprintf_r+0xed2>
  403780:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403782:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403784:	4413      	add	r3, r2
  403786:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403788:	441a      	add	r2, r3
  40378a:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  40378e:	920e      	str	r2, [sp, #56]	; 0x38
  403790:	9308      	str	r3, [sp, #32]
  403792:	e5c7      	b.n	403324 <_svfprintf_r+0xf38>
  403794:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403796:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  403798:	f1c3 0301 	rsb	r3, r3, #1
  40379c:	441a      	add	r2, r3
  40379e:	4613      	mov	r3, r2
  4037a0:	e7d0      	b.n	403744 <_svfprintf_r+0x1358>
  4037a2:	f01b 0301 	ands.w	r3, fp, #1
  4037a6:	9312      	str	r3, [sp, #72]	; 0x48
  4037a8:	f47f aee2 	bne.w	403570 <_svfprintf_r+0x1184>
  4037ac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4037ae:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4037b2:	9308      	str	r3, [sp, #32]
  4037b4:	e5b6      	b.n	403324 <_svfprintf_r+0xf38>
  4037b6:	bf00      	nop
  4037b8:	66666667 	.word	0x66666667
  4037bc:	00406ed4 	.word	0x00406ed4
  4037c0:	00406ef0 	.word	0x00406ef0
  4037c4:	00406ea8 	.word	0x00406ea8
  4037c8:	00406ea4 	.word	0x00406ea4
  4037cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4037ce:	b913      	cbnz	r3, 4037d6 <_svfprintf_r+0x13ea>
  4037d0:	f01b 0f01 	tst.w	fp, #1
  4037d4:	d002      	beq.n	4037dc <_svfprintf_r+0x13f0>
  4037d6:	9b19      	ldr	r3, [sp, #100]	; 0x64
  4037d8:	3301      	adds	r3, #1
  4037da:	e7d4      	b.n	403786 <_svfprintf_r+0x139a>
  4037dc:	2301      	movs	r3, #1
  4037de:	e73a      	b.n	403656 <_svfprintf_r+0x126a>
  4037e0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4037e2:	f89a 3001 	ldrb.w	r3, [sl, #1]
  4037e6:	6828      	ldr	r0, [r5, #0]
  4037e8:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  4037ec:	900a      	str	r0, [sp, #40]	; 0x28
  4037ee:	4628      	mov	r0, r5
  4037f0:	3004      	adds	r0, #4
  4037f2:	46a2      	mov	sl, r4
  4037f4:	900f      	str	r0, [sp, #60]	; 0x3c
  4037f6:	f7fe be51 	b.w	40249c <_svfprintf_r+0xb0>
  4037fa:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4037fe:	f7ff b867 	b.w	4028d0 <_svfprintf_r+0x4e4>
  403802:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403806:	f7ff ba15 	b.w	402c34 <_svfprintf_r+0x848>
  40380a:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  40380e:	e6a6      	b.n	40355e <_svfprintf_r+0x1172>
  403810:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403814:	f7ff b8eb 	b.w	4029ee <_svfprintf_r+0x602>
  403818:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  40381a:	230c      	movs	r3, #12
  40381c:	6013      	str	r3, [r2, #0]
  40381e:	f04f 33ff 	mov.w	r3, #4294967295
  403822:	9309      	str	r3, [sp, #36]	; 0x24
  403824:	f7fe bebd 	b.w	4025a2 <_svfprintf_r+0x1b6>
  403828:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40382c:	f7ff b99a 	b.w	402b64 <_svfprintf_r+0x778>
  403830:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403834:	f7ff b976 	b.w	402b24 <_svfprintf_r+0x738>
  403838:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40383c:	f7ff b959 	b.w	402af2 <_svfprintf_r+0x706>
  403840:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403844:	f7ff b912 	b.w	402a6c <_svfprintf_r+0x680>

00403848 <register_fini>:
  403848:	4b02      	ldr	r3, [pc, #8]	; (403854 <register_fini+0xc>)
  40384a:	b113      	cbz	r3, 403852 <register_fini+0xa>
  40384c:	4802      	ldr	r0, [pc, #8]	; (403858 <register_fini+0x10>)
  40384e:	f000 b805 	b.w	40385c <atexit>
  403852:	4770      	bx	lr
  403854:	00000000 	.word	0x00000000
  403858:	004047e5 	.word	0x004047e5

0040385c <atexit>:
  40385c:	2300      	movs	r3, #0
  40385e:	4601      	mov	r1, r0
  403860:	461a      	mov	r2, r3
  403862:	4618      	mov	r0, r3
  403864:	f001 bf98 	b.w	405798 <__register_exitproc>

00403868 <quorem>:
  403868:	6902      	ldr	r2, [r0, #16]
  40386a:	690b      	ldr	r3, [r1, #16]
  40386c:	4293      	cmp	r3, r2
  40386e:	f300 808d 	bgt.w	40398c <quorem+0x124>
  403872:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403876:	f103 38ff 	add.w	r8, r3, #4294967295
  40387a:	f101 0714 	add.w	r7, r1, #20
  40387e:	f100 0b14 	add.w	fp, r0, #20
  403882:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  403886:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  40388a:	ea4f 0488 	mov.w	r4, r8, lsl #2
  40388e:	b083      	sub	sp, #12
  403890:	3201      	adds	r2, #1
  403892:	fbb3 f9f2 	udiv	r9, r3, r2
  403896:	eb0b 0304 	add.w	r3, fp, r4
  40389a:	9400      	str	r4, [sp, #0]
  40389c:	eb07 0a04 	add.w	sl, r7, r4
  4038a0:	9301      	str	r3, [sp, #4]
  4038a2:	f1b9 0f00 	cmp.w	r9, #0
  4038a6:	d039      	beq.n	40391c <quorem+0xb4>
  4038a8:	2500      	movs	r5, #0
  4038aa:	462e      	mov	r6, r5
  4038ac:	46bc      	mov	ip, r7
  4038ae:	46de      	mov	lr, fp
  4038b0:	f85c 4b04 	ldr.w	r4, [ip], #4
  4038b4:	f8de 3000 	ldr.w	r3, [lr]
  4038b8:	b2a2      	uxth	r2, r4
  4038ba:	fb09 5502 	mla	r5, r9, r2, r5
  4038be:	0c22      	lsrs	r2, r4, #16
  4038c0:	0c2c      	lsrs	r4, r5, #16
  4038c2:	fb09 4202 	mla	r2, r9, r2, r4
  4038c6:	b2ad      	uxth	r5, r5
  4038c8:	1b75      	subs	r5, r6, r5
  4038ca:	b296      	uxth	r6, r2
  4038cc:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  4038d0:	fa15 f383 	uxtah	r3, r5, r3
  4038d4:	eb06 4623 	add.w	r6, r6, r3, asr #16
  4038d8:	b29b      	uxth	r3, r3
  4038da:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  4038de:	45e2      	cmp	sl, ip
  4038e0:	ea4f 4512 	mov.w	r5, r2, lsr #16
  4038e4:	f84e 3b04 	str.w	r3, [lr], #4
  4038e8:	ea4f 4626 	mov.w	r6, r6, asr #16
  4038ec:	d2e0      	bcs.n	4038b0 <quorem+0x48>
  4038ee:	9b00      	ldr	r3, [sp, #0]
  4038f0:	f85b 3003 	ldr.w	r3, [fp, r3]
  4038f4:	b993      	cbnz	r3, 40391c <quorem+0xb4>
  4038f6:	9c01      	ldr	r4, [sp, #4]
  4038f8:	1f23      	subs	r3, r4, #4
  4038fa:	459b      	cmp	fp, r3
  4038fc:	d20c      	bcs.n	403918 <quorem+0xb0>
  4038fe:	f854 3c04 	ldr.w	r3, [r4, #-4]
  403902:	b94b      	cbnz	r3, 403918 <quorem+0xb0>
  403904:	f1a4 0308 	sub.w	r3, r4, #8
  403908:	e002      	b.n	403910 <quorem+0xa8>
  40390a:	681a      	ldr	r2, [r3, #0]
  40390c:	3b04      	subs	r3, #4
  40390e:	b91a      	cbnz	r2, 403918 <quorem+0xb0>
  403910:	459b      	cmp	fp, r3
  403912:	f108 38ff 	add.w	r8, r8, #4294967295
  403916:	d3f8      	bcc.n	40390a <quorem+0xa2>
  403918:	f8c0 8010 	str.w	r8, [r0, #16]
  40391c:	4604      	mov	r4, r0
  40391e:	f001 fd33 	bl	405388 <__mcmp>
  403922:	2800      	cmp	r0, #0
  403924:	db2e      	blt.n	403984 <quorem+0x11c>
  403926:	f109 0901 	add.w	r9, r9, #1
  40392a:	465d      	mov	r5, fp
  40392c:	2300      	movs	r3, #0
  40392e:	f857 1b04 	ldr.w	r1, [r7], #4
  403932:	6828      	ldr	r0, [r5, #0]
  403934:	b28a      	uxth	r2, r1
  403936:	1a9a      	subs	r2, r3, r2
  403938:	0c0b      	lsrs	r3, r1, #16
  40393a:	fa12 f280 	uxtah	r2, r2, r0
  40393e:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  403942:	eb03 4322 	add.w	r3, r3, r2, asr #16
  403946:	b292      	uxth	r2, r2
  403948:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  40394c:	45ba      	cmp	sl, r7
  40394e:	f845 2b04 	str.w	r2, [r5], #4
  403952:	ea4f 4323 	mov.w	r3, r3, asr #16
  403956:	d2ea      	bcs.n	40392e <quorem+0xc6>
  403958:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  40395c:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  403960:	b982      	cbnz	r2, 403984 <quorem+0x11c>
  403962:	1f1a      	subs	r2, r3, #4
  403964:	4593      	cmp	fp, r2
  403966:	d20b      	bcs.n	403980 <quorem+0x118>
  403968:	f853 2c04 	ldr.w	r2, [r3, #-4]
  40396c:	b942      	cbnz	r2, 403980 <quorem+0x118>
  40396e:	3b08      	subs	r3, #8
  403970:	e002      	b.n	403978 <quorem+0x110>
  403972:	681a      	ldr	r2, [r3, #0]
  403974:	3b04      	subs	r3, #4
  403976:	b91a      	cbnz	r2, 403980 <quorem+0x118>
  403978:	459b      	cmp	fp, r3
  40397a:	f108 38ff 	add.w	r8, r8, #4294967295
  40397e:	d3f8      	bcc.n	403972 <quorem+0x10a>
  403980:	f8c4 8010 	str.w	r8, [r4, #16]
  403984:	4648      	mov	r0, r9
  403986:	b003      	add	sp, #12
  403988:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40398c:	2000      	movs	r0, #0
  40398e:	4770      	bx	lr

00403990 <_dtoa_r>:
  403990:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403994:	6c01      	ldr	r1, [r0, #64]	; 0x40
  403996:	b09b      	sub	sp, #108	; 0x6c
  403998:	4604      	mov	r4, r0
  40399a:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  40399c:	4692      	mov	sl, r2
  40399e:	469b      	mov	fp, r3
  4039a0:	b141      	cbz	r1, 4039b4 <_dtoa_r+0x24>
  4039a2:	6c42      	ldr	r2, [r0, #68]	; 0x44
  4039a4:	604a      	str	r2, [r1, #4]
  4039a6:	2301      	movs	r3, #1
  4039a8:	4093      	lsls	r3, r2
  4039aa:	608b      	str	r3, [r1, #8]
  4039ac:	f001 fb14 	bl	404fd8 <_Bfree>
  4039b0:	2300      	movs	r3, #0
  4039b2:	6423      	str	r3, [r4, #64]	; 0x40
  4039b4:	f1bb 0f00 	cmp.w	fp, #0
  4039b8:	465d      	mov	r5, fp
  4039ba:	db35      	blt.n	403a28 <_dtoa_r+0x98>
  4039bc:	2300      	movs	r3, #0
  4039be:	6033      	str	r3, [r6, #0]
  4039c0:	4b9d      	ldr	r3, [pc, #628]	; (403c38 <_dtoa_r+0x2a8>)
  4039c2:	43ab      	bics	r3, r5
  4039c4:	d015      	beq.n	4039f2 <_dtoa_r+0x62>
  4039c6:	4650      	mov	r0, sl
  4039c8:	4659      	mov	r1, fp
  4039ca:	2200      	movs	r2, #0
  4039cc:	2300      	movs	r3, #0
  4039ce:	f002 fb2f 	bl	406030 <__aeabi_dcmpeq>
  4039d2:	4680      	mov	r8, r0
  4039d4:	2800      	cmp	r0, #0
  4039d6:	d02d      	beq.n	403a34 <_dtoa_r+0xa4>
  4039d8:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4039da:	2301      	movs	r3, #1
  4039dc:	6013      	str	r3, [r2, #0]
  4039de:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4039e0:	2b00      	cmp	r3, #0
  4039e2:	f000 80bd 	beq.w	403b60 <_dtoa_r+0x1d0>
  4039e6:	4895      	ldr	r0, [pc, #596]	; (403c3c <_dtoa_r+0x2ac>)
  4039e8:	6018      	str	r0, [r3, #0]
  4039ea:	3801      	subs	r0, #1
  4039ec:	b01b      	add	sp, #108	; 0x6c
  4039ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4039f2:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4039f4:	f242 730f 	movw	r3, #9999	; 0x270f
  4039f8:	6013      	str	r3, [r2, #0]
  4039fa:	f1ba 0f00 	cmp.w	sl, #0
  4039fe:	d10d      	bne.n	403a1c <_dtoa_r+0x8c>
  403a00:	f3c5 0513 	ubfx	r5, r5, #0, #20
  403a04:	b955      	cbnz	r5, 403a1c <_dtoa_r+0x8c>
  403a06:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403a08:	488d      	ldr	r0, [pc, #564]	; (403c40 <_dtoa_r+0x2b0>)
  403a0a:	2b00      	cmp	r3, #0
  403a0c:	d0ee      	beq.n	4039ec <_dtoa_r+0x5c>
  403a0e:	f100 0308 	add.w	r3, r0, #8
  403a12:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  403a14:	6013      	str	r3, [r2, #0]
  403a16:	b01b      	add	sp, #108	; 0x6c
  403a18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403a1c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403a1e:	4889      	ldr	r0, [pc, #548]	; (403c44 <_dtoa_r+0x2b4>)
  403a20:	2b00      	cmp	r3, #0
  403a22:	d0e3      	beq.n	4039ec <_dtoa_r+0x5c>
  403a24:	1cc3      	adds	r3, r0, #3
  403a26:	e7f4      	b.n	403a12 <_dtoa_r+0x82>
  403a28:	2301      	movs	r3, #1
  403a2a:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  403a2e:	6033      	str	r3, [r6, #0]
  403a30:	46ab      	mov	fp, r5
  403a32:	e7c5      	b.n	4039c0 <_dtoa_r+0x30>
  403a34:	aa18      	add	r2, sp, #96	; 0x60
  403a36:	ab19      	add	r3, sp, #100	; 0x64
  403a38:	9201      	str	r2, [sp, #4]
  403a3a:	9300      	str	r3, [sp, #0]
  403a3c:	4652      	mov	r2, sl
  403a3e:	465b      	mov	r3, fp
  403a40:	4620      	mov	r0, r4
  403a42:	f001 fd41 	bl	4054c8 <__d2b>
  403a46:	0d2b      	lsrs	r3, r5, #20
  403a48:	4681      	mov	r9, r0
  403a4a:	d071      	beq.n	403b30 <_dtoa_r+0x1a0>
  403a4c:	f3cb 0213 	ubfx	r2, fp, #0, #20
  403a50:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  403a54:	9f18      	ldr	r7, [sp, #96]	; 0x60
  403a56:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  403a5a:	4650      	mov	r0, sl
  403a5c:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  403a60:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  403a64:	2200      	movs	r2, #0
  403a66:	4b78      	ldr	r3, [pc, #480]	; (403c48 <_dtoa_r+0x2b8>)
  403a68:	f7fe f80e 	bl	401a88 <__aeabi_dsub>
  403a6c:	a36c      	add	r3, pc, #432	; (adr r3, 403c20 <_dtoa_r+0x290>)
  403a6e:	e9d3 2300 	ldrd	r2, r3, [r3]
  403a72:	f7fe f9bd 	bl	401df0 <__aeabi_dmul>
  403a76:	a36c      	add	r3, pc, #432	; (adr r3, 403c28 <_dtoa_r+0x298>)
  403a78:	e9d3 2300 	ldrd	r2, r3, [r3]
  403a7c:	f7fe f806 	bl	401a8c <__adddf3>
  403a80:	e9cd 0102 	strd	r0, r1, [sp, #8]
  403a84:	4630      	mov	r0, r6
  403a86:	f7fe f94d 	bl	401d24 <__aeabi_i2d>
  403a8a:	a369      	add	r3, pc, #420	; (adr r3, 403c30 <_dtoa_r+0x2a0>)
  403a8c:	e9d3 2300 	ldrd	r2, r3, [r3]
  403a90:	f7fe f9ae 	bl	401df0 <__aeabi_dmul>
  403a94:	4602      	mov	r2, r0
  403a96:	460b      	mov	r3, r1
  403a98:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  403a9c:	f7fd fff6 	bl	401a8c <__adddf3>
  403aa0:	e9cd 0104 	strd	r0, r1, [sp, #16]
  403aa4:	f002 fb0c 	bl	4060c0 <__aeabi_d2iz>
  403aa8:	2200      	movs	r2, #0
  403aaa:	9002      	str	r0, [sp, #8]
  403aac:	2300      	movs	r3, #0
  403aae:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403ab2:	f002 fac7 	bl	406044 <__aeabi_dcmplt>
  403ab6:	2800      	cmp	r0, #0
  403ab8:	f040 8173 	bne.w	403da2 <_dtoa_r+0x412>
  403abc:	9d02      	ldr	r5, [sp, #8]
  403abe:	2d16      	cmp	r5, #22
  403ac0:	f200 815d 	bhi.w	403d7e <_dtoa_r+0x3ee>
  403ac4:	4b61      	ldr	r3, [pc, #388]	; (403c4c <_dtoa_r+0x2bc>)
  403ac6:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  403aca:	e9d3 0100 	ldrd	r0, r1, [r3]
  403ace:	4652      	mov	r2, sl
  403ad0:	465b      	mov	r3, fp
  403ad2:	f002 fad5 	bl	406080 <__aeabi_dcmpgt>
  403ad6:	2800      	cmp	r0, #0
  403ad8:	f000 81c5 	beq.w	403e66 <_dtoa_r+0x4d6>
  403adc:	1e6b      	subs	r3, r5, #1
  403ade:	9302      	str	r3, [sp, #8]
  403ae0:	2300      	movs	r3, #0
  403ae2:	930e      	str	r3, [sp, #56]	; 0x38
  403ae4:	1bbf      	subs	r7, r7, r6
  403ae6:	1e7b      	subs	r3, r7, #1
  403ae8:	9306      	str	r3, [sp, #24]
  403aea:	f100 8154 	bmi.w	403d96 <_dtoa_r+0x406>
  403aee:	2300      	movs	r3, #0
  403af0:	9308      	str	r3, [sp, #32]
  403af2:	9b02      	ldr	r3, [sp, #8]
  403af4:	2b00      	cmp	r3, #0
  403af6:	f2c0 8145 	blt.w	403d84 <_dtoa_r+0x3f4>
  403afa:	9a06      	ldr	r2, [sp, #24]
  403afc:	930d      	str	r3, [sp, #52]	; 0x34
  403afe:	4611      	mov	r1, r2
  403b00:	4419      	add	r1, r3
  403b02:	2300      	movs	r3, #0
  403b04:	9106      	str	r1, [sp, #24]
  403b06:	930c      	str	r3, [sp, #48]	; 0x30
  403b08:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403b0a:	2b09      	cmp	r3, #9
  403b0c:	d82a      	bhi.n	403b64 <_dtoa_r+0x1d4>
  403b0e:	2b05      	cmp	r3, #5
  403b10:	f340 865b 	ble.w	4047ca <_dtoa_r+0xe3a>
  403b14:	3b04      	subs	r3, #4
  403b16:	9324      	str	r3, [sp, #144]	; 0x90
  403b18:	2500      	movs	r5, #0
  403b1a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403b1c:	3b02      	subs	r3, #2
  403b1e:	2b03      	cmp	r3, #3
  403b20:	f200 8642 	bhi.w	4047a8 <_dtoa_r+0xe18>
  403b24:	e8df f013 	tbh	[pc, r3, lsl #1]
  403b28:	02c903d4 	.word	0x02c903d4
  403b2c:	046103df 	.word	0x046103df
  403b30:	9f18      	ldr	r7, [sp, #96]	; 0x60
  403b32:	9e19      	ldr	r6, [sp, #100]	; 0x64
  403b34:	443e      	add	r6, r7
  403b36:	f206 4332 	addw	r3, r6, #1074	; 0x432
  403b3a:	2b20      	cmp	r3, #32
  403b3c:	f340 818e 	ble.w	403e5c <_dtoa_r+0x4cc>
  403b40:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  403b44:	f206 4012 	addw	r0, r6, #1042	; 0x412
  403b48:	409d      	lsls	r5, r3
  403b4a:	fa2a f000 	lsr.w	r0, sl, r0
  403b4e:	4328      	orrs	r0, r5
  403b50:	f7fe f8d8 	bl	401d04 <__aeabi_ui2d>
  403b54:	2301      	movs	r3, #1
  403b56:	3e01      	subs	r6, #1
  403b58:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  403b5c:	9314      	str	r3, [sp, #80]	; 0x50
  403b5e:	e781      	b.n	403a64 <_dtoa_r+0xd4>
  403b60:	483b      	ldr	r0, [pc, #236]	; (403c50 <_dtoa_r+0x2c0>)
  403b62:	e743      	b.n	4039ec <_dtoa_r+0x5c>
  403b64:	2100      	movs	r1, #0
  403b66:	6461      	str	r1, [r4, #68]	; 0x44
  403b68:	4620      	mov	r0, r4
  403b6a:	9125      	str	r1, [sp, #148]	; 0x94
  403b6c:	f001 fa0e 	bl	404f8c <_Balloc>
  403b70:	f04f 33ff 	mov.w	r3, #4294967295
  403b74:	930a      	str	r3, [sp, #40]	; 0x28
  403b76:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403b78:	930f      	str	r3, [sp, #60]	; 0x3c
  403b7a:	2301      	movs	r3, #1
  403b7c:	9004      	str	r0, [sp, #16]
  403b7e:	6420      	str	r0, [r4, #64]	; 0x40
  403b80:	9224      	str	r2, [sp, #144]	; 0x90
  403b82:	930b      	str	r3, [sp, #44]	; 0x2c
  403b84:	9b19      	ldr	r3, [sp, #100]	; 0x64
  403b86:	2b00      	cmp	r3, #0
  403b88:	f2c0 80d9 	blt.w	403d3e <_dtoa_r+0x3ae>
  403b8c:	9a02      	ldr	r2, [sp, #8]
  403b8e:	2a0e      	cmp	r2, #14
  403b90:	f300 80d5 	bgt.w	403d3e <_dtoa_r+0x3ae>
  403b94:	4b2d      	ldr	r3, [pc, #180]	; (403c4c <_dtoa_r+0x2bc>)
  403b96:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403b9a:	e9d3 2300 	ldrd	r2, r3, [r3]
  403b9e:	e9cd 2308 	strd	r2, r3, [sp, #32]
  403ba2:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403ba4:	2b00      	cmp	r3, #0
  403ba6:	f2c0 83ba 	blt.w	40431e <_dtoa_r+0x98e>
  403baa:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  403bae:	4650      	mov	r0, sl
  403bb0:	462a      	mov	r2, r5
  403bb2:	4633      	mov	r3, r6
  403bb4:	4659      	mov	r1, fp
  403bb6:	f7fe fa45 	bl	402044 <__aeabi_ddiv>
  403bba:	f002 fa81 	bl	4060c0 <__aeabi_d2iz>
  403bbe:	4680      	mov	r8, r0
  403bc0:	f7fe f8b0 	bl	401d24 <__aeabi_i2d>
  403bc4:	462a      	mov	r2, r5
  403bc6:	4633      	mov	r3, r6
  403bc8:	f7fe f912 	bl	401df0 <__aeabi_dmul>
  403bcc:	460b      	mov	r3, r1
  403bce:	4602      	mov	r2, r0
  403bd0:	4659      	mov	r1, fp
  403bd2:	4650      	mov	r0, sl
  403bd4:	f7fd ff58 	bl	401a88 <__aeabi_dsub>
  403bd8:	9d04      	ldr	r5, [sp, #16]
  403bda:	f108 0330 	add.w	r3, r8, #48	; 0x30
  403bde:	702b      	strb	r3, [r5, #0]
  403be0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403be2:	2b01      	cmp	r3, #1
  403be4:	4606      	mov	r6, r0
  403be6:	460f      	mov	r7, r1
  403be8:	f105 0501 	add.w	r5, r5, #1
  403bec:	d068      	beq.n	403cc0 <_dtoa_r+0x330>
  403bee:	2200      	movs	r2, #0
  403bf0:	4b18      	ldr	r3, [pc, #96]	; (403c54 <_dtoa_r+0x2c4>)
  403bf2:	f7fe f8fd 	bl	401df0 <__aeabi_dmul>
  403bf6:	2200      	movs	r2, #0
  403bf8:	2300      	movs	r3, #0
  403bfa:	4606      	mov	r6, r0
  403bfc:	460f      	mov	r7, r1
  403bfe:	f002 fa17 	bl	406030 <__aeabi_dcmpeq>
  403c02:	2800      	cmp	r0, #0
  403c04:	f040 8088 	bne.w	403d18 <_dtoa_r+0x388>
  403c08:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  403c0c:	f04f 0a00 	mov.w	sl, #0
  403c10:	f8df b040 	ldr.w	fp, [pc, #64]	; 403c54 <_dtoa_r+0x2c4>
  403c14:	940c      	str	r4, [sp, #48]	; 0x30
  403c16:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  403c1a:	e028      	b.n	403c6e <_dtoa_r+0x2de>
  403c1c:	f3af 8000 	nop.w
  403c20:	636f4361 	.word	0x636f4361
  403c24:	3fd287a7 	.word	0x3fd287a7
  403c28:	8b60c8b3 	.word	0x8b60c8b3
  403c2c:	3fc68a28 	.word	0x3fc68a28
  403c30:	509f79fb 	.word	0x509f79fb
  403c34:	3fd34413 	.word	0x3fd34413
  403c38:	7ff00000 	.word	0x7ff00000
  403c3c:	00406edd 	.word	0x00406edd
  403c40:	00406f00 	.word	0x00406f00
  403c44:	00406f0c 	.word	0x00406f0c
  403c48:	3ff80000 	.word	0x3ff80000
  403c4c:	00406f38 	.word	0x00406f38
  403c50:	00406edc 	.word	0x00406edc
  403c54:	40240000 	.word	0x40240000
  403c58:	f7fe f8ca 	bl	401df0 <__aeabi_dmul>
  403c5c:	2200      	movs	r2, #0
  403c5e:	2300      	movs	r3, #0
  403c60:	4606      	mov	r6, r0
  403c62:	460f      	mov	r7, r1
  403c64:	f002 f9e4 	bl	406030 <__aeabi_dcmpeq>
  403c68:	2800      	cmp	r0, #0
  403c6a:	f040 83c1 	bne.w	4043f0 <_dtoa_r+0xa60>
  403c6e:	4642      	mov	r2, r8
  403c70:	464b      	mov	r3, r9
  403c72:	4630      	mov	r0, r6
  403c74:	4639      	mov	r1, r7
  403c76:	f7fe f9e5 	bl	402044 <__aeabi_ddiv>
  403c7a:	f002 fa21 	bl	4060c0 <__aeabi_d2iz>
  403c7e:	4604      	mov	r4, r0
  403c80:	f7fe f850 	bl	401d24 <__aeabi_i2d>
  403c84:	4642      	mov	r2, r8
  403c86:	464b      	mov	r3, r9
  403c88:	f7fe f8b2 	bl	401df0 <__aeabi_dmul>
  403c8c:	4602      	mov	r2, r0
  403c8e:	460b      	mov	r3, r1
  403c90:	4630      	mov	r0, r6
  403c92:	4639      	mov	r1, r7
  403c94:	f7fd fef8 	bl	401a88 <__aeabi_dsub>
  403c98:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  403c9c:	9e04      	ldr	r6, [sp, #16]
  403c9e:	f805 eb01 	strb.w	lr, [r5], #1
  403ca2:	eba5 0e06 	sub.w	lr, r5, r6
  403ca6:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  403ca8:	45b6      	cmp	lr, r6
  403caa:	e9cd 0106 	strd	r0, r1, [sp, #24]
  403cae:	4652      	mov	r2, sl
  403cb0:	465b      	mov	r3, fp
  403cb2:	d1d1      	bne.n	403c58 <_dtoa_r+0x2c8>
  403cb4:	46a0      	mov	r8, r4
  403cb6:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403cba:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403cbc:	4606      	mov	r6, r0
  403cbe:	460f      	mov	r7, r1
  403cc0:	4632      	mov	r2, r6
  403cc2:	463b      	mov	r3, r7
  403cc4:	4630      	mov	r0, r6
  403cc6:	4639      	mov	r1, r7
  403cc8:	f7fd fee0 	bl	401a8c <__adddf3>
  403ccc:	4606      	mov	r6, r0
  403cce:	460f      	mov	r7, r1
  403cd0:	4602      	mov	r2, r0
  403cd2:	460b      	mov	r3, r1
  403cd4:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403cd8:	f002 f9b4 	bl	406044 <__aeabi_dcmplt>
  403cdc:	b948      	cbnz	r0, 403cf2 <_dtoa_r+0x362>
  403cde:	4632      	mov	r2, r6
  403ce0:	463b      	mov	r3, r7
  403ce2:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403ce6:	f002 f9a3 	bl	406030 <__aeabi_dcmpeq>
  403cea:	b1a8      	cbz	r0, 403d18 <_dtoa_r+0x388>
  403cec:	f018 0f01 	tst.w	r8, #1
  403cf0:	d012      	beq.n	403d18 <_dtoa_r+0x388>
  403cf2:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403cf6:	9a04      	ldr	r2, [sp, #16]
  403cf8:	1e6b      	subs	r3, r5, #1
  403cfa:	e004      	b.n	403d06 <_dtoa_r+0x376>
  403cfc:	429a      	cmp	r2, r3
  403cfe:	f000 8401 	beq.w	404504 <_dtoa_r+0xb74>
  403d02:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  403d06:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  403d0a:	f103 0501 	add.w	r5, r3, #1
  403d0e:	d0f5      	beq.n	403cfc <_dtoa_r+0x36c>
  403d10:	f108 0801 	add.w	r8, r8, #1
  403d14:	f883 8000 	strb.w	r8, [r3]
  403d18:	4649      	mov	r1, r9
  403d1a:	4620      	mov	r0, r4
  403d1c:	f001 f95c 	bl	404fd8 <_Bfree>
  403d20:	2200      	movs	r2, #0
  403d22:	9b02      	ldr	r3, [sp, #8]
  403d24:	702a      	strb	r2, [r5, #0]
  403d26:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403d28:	3301      	adds	r3, #1
  403d2a:	6013      	str	r3, [r2, #0]
  403d2c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403d2e:	2b00      	cmp	r3, #0
  403d30:	f000 839e 	beq.w	404470 <_dtoa_r+0xae0>
  403d34:	9804      	ldr	r0, [sp, #16]
  403d36:	601d      	str	r5, [r3, #0]
  403d38:	b01b      	add	sp, #108	; 0x6c
  403d3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403d3e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403d40:	2a00      	cmp	r2, #0
  403d42:	d03e      	beq.n	403dc2 <_dtoa_r+0x432>
  403d44:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403d46:	2a01      	cmp	r2, #1
  403d48:	f340 8311 	ble.w	40436e <_dtoa_r+0x9de>
  403d4c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403d4e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403d50:	1e5f      	subs	r7, r3, #1
  403d52:	42ba      	cmp	r2, r7
  403d54:	f2c0 838f 	blt.w	404476 <_dtoa_r+0xae6>
  403d58:	1bd7      	subs	r7, r2, r7
  403d5a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403d5c:	2b00      	cmp	r3, #0
  403d5e:	f2c0 848b 	blt.w	404678 <_dtoa_r+0xce8>
  403d62:	9d08      	ldr	r5, [sp, #32]
  403d64:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403d66:	9a08      	ldr	r2, [sp, #32]
  403d68:	441a      	add	r2, r3
  403d6a:	9208      	str	r2, [sp, #32]
  403d6c:	9a06      	ldr	r2, [sp, #24]
  403d6e:	2101      	movs	r1, #1
  403d70:	441a      	add	r2, r3
  403d72:	4620      	mov	r0, r4
  403d74:	9206      	str	r2, [sp, #24]
  403d76:	f001 f9c9 	bl	40510c <__i2b>
  403d7a:	4606      	mov	r6, r0
  403d7c:	e024      	b.n	403dc8 <_dtoa_r+0x438>
  403d7e:	2301      	movs	r3, #1
  403d80:	930e      	str	r3, [sp, #56]	; 0x38
  403d82:	e6af      	b.n	403ae4 <_dtoa_r+0x154>
  403d84:	9a08      	ldr	r2, [sp, #32]
  403d86:	9b02      	ldr	r3, [sp, #8]
  403d88:	1ad2      	subs	r2, r2, r3
  403d8a:	425b      	negs	r3, r3
  403d8c:	930c      	str	r3, [sp, #48]	; 0x30
  403d8e:	2300      	movs	r3, #0
  403d90:	9208      	str	r2, [sp, #32]
  403d92:	930d      	str	r3, [sp, #52]	; 0x34
  403d94:	e6b8      	b.n	403b08 <_dtoa_r+0x178>
  403d96:	f1c7 0301 	rsb	r3, r7, #1
  403d9a:	9308      	str	r3, [sp, #32]
  403d9c:	2300      	movs	r3, #0
  403d9e:	9306      	str	r3, [sp, #24]
  403da0:	e6a7      	b.n	403af2 <_dtoa_r+0x162>
  403da2:	9d02      	ldr	r5, [sp, #8]
  403da4:	4628      	mov	r0, r5
  403da6:	f7fd ffbd 	bl	401d24 <__aeabi_i2d>
  403daa:	4602      	mov	r2, r0
  403dac:	460b      	mov	r3, r1
  403dae:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403db2:	f002 f93d 	bl	406030 <__aeabi_dcmpeq>
  403db6:	2800      	cmp	r0, #0
  403db8:	f47f ae80 	bne.w	403abc <_dtoa_r+0x12c>
  403dbc:	1e6b      	subs	r3, r5, #1
  403dbe:	9302      	str	r3, [sp, #8]
  403dc0:	e67c      	b.n	403abc <_dtoa_r+0x12c>
  403dc2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403dc4:	9d08      	ldr	r5, [sp, #32]
  403dc6:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  403dc8:	2d00      	cmp	r5, #0
  403dca:	dd0c      	ble.n	403de6 <_dtoa_r+0x456>
  403dcc:	9906      	ldr	r1, [sp, #24]
  403dce:	2900      	cmp	r1, #0
  403dd0:	460b      	mov	r3, r1
  403dd2:	dd08      	ble.n	403de6 <_dtoa_r+0x456>
  403dd4:	42a9      	cmp	r1, r5
  403dd6:	9a08      	ldr	r2, [sp, #32]
  403dd8:	bfa8      	it	ge
  403dda:	462b      	movge	r3, r5
  403ddc:	1ad2      	subs	r2, r2, r3
  403dde:	1aed      	subs	r5, r5, r3
  403de0:	1acb      	subs	r3, r1, r3
  403de2:	9208      	str	r2, [sp, #32]
  403de4:	9306      	str	r3, [sp, #24]
  403de6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403de8:	b1d3      	cbz	r3, 403e20 <_dtoa_r+0x490>
  403dea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403dec:	2b00      	cmp	r3, #0
  403dee:	f000 82b7 	beq.w	404360 <_dtoa_r+0x9d0>
  403df2:	2f00      	cmp	r7, #0
  403df4:	dd10      	ble.n	403e18 <_dtoa_r+0x488>
  403df6:	4631      	mov	r1, r6
  403df8:	463a      	mov	r2, r7
  403dfa:	4620      	mov	r0, r4
  403dfc:	f001 fa22 	bl	405244 <__pow5mult>
  403e00:	464a      	mov	r2, r9
  403e02:	4601      	mov	r1, r0
  403e04:	4606      	mov	r6, r0
  403e06:	4620      	mov	r0, r4
  403e08:	f001 f98a 	bl	405120 <__multiply>
  403e0c:	4649      	mov	r1, r9
  403e0e:	4680      	mov	r8, r0
  403e10:	4620      	mov	r0, r4
  403e12:	f001 f8e1 	bl	404fd8 <_Bfree>
  403e16:	46c1      	mov	r9, r8
  403e18:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403e1a:	1bda      	subs	r2, r3, r7
  403e1c:	f040 82a1 	bne.w	404362 <_dtoa_r+0x9d2>
  403e20:	2101      	movs	r1, #1
  403e22:	4620      	mov	r0, r4
  403e24:	f001 f972 	bl	40510c <__i2b>
  403e28:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403e2a:	2b00      	cmp	r3, #0
  403e2c:	4680      	mov	r8, r0
  403e2e:	dd1c      	ble.n	403e6a <_dtoa_r+0x4da>
  403e30:	4601      	mov	r1, r0
  403e32:	461a      	mov	r2, r3
  403e34:	4620      	mov	r0, r4
  403e36:	f001 fa05 	bl	405244 <__pow5mult>
  403e3a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403e3c:	2b01      	cmp	r3, #1
  403e3e:	4680      	mov	r8, r0
  403e40:	f340 8254 	ble.w	4042ec <_dtoa_r+0x95c>
  403e44:	2300      	movs	r3, #0
  403e46:	930c      	str	r3, [sp, #48]	; 0x30
  403e48:	f8d8 3010 	ldr.w	r3, [r8, #16]
  403e4c:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  403e50:	6918      	ldr	r0, [r3, #16]
  403e52:	f001 f90b 	bl	40506c <__hi0bits>
  403e56:	f1c0 0020 	rsb	r0, r0, #32
  403e5a:	e010      	b.n	403e7e <_dtoa_r+0x4ee>
  403e5c:	f1c3 0520 	rsb	r5, r3, #32
  403e60:	fa0a f005 	lsl.w	r0, sl, r5
  403e64:	e674      	b.n	403b50 <_dtoa_r+0x1c0>
  403e66:	900e      	str	r0, [sp, #56]	; 0x38
  403e68:	e63c      	b.n	403ae4 <_dtoa_r+0x154>
  403e6a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403e6c:	2b01      	cmp	r3, #1
  403e6e:	f340 8287 	ble.w	404380 <_dtoa_r+0x9f0>
  403e72:	2300      	movs	r3, #0
  403e74:	930c      	str	r3, [sp, #48]	; 0x30
  403e76:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403e78:	2001      	movs	r0, #1
  403e7a:	2b00      	cmp	r3, #0
  403e7c:	d1e4      	bne.n	403e48 <_dtoa_r+0x4b8>
  403e7e:	9a06      	ldr	r2, [sp, #24]
  403e80:	4410      	add	r0, r2
  403e82:	f010 001f 	ands.w	r0, r0, #31
  403e86:	f000 80a1 	beq.w	403fcc <_dtoa_r+0x63c>
  403e8a:	f1c0 0320 	rsb	r3, r0, #32
  403e8e:	2b04      	cmp	r3, #4
  403e90:	f340 849e 	ble.w	4047d0 <_dtoa_r+0xe40>
  403e94:	9b08      	ldr	r3, [sp, #32]
  403e96:	f1c0 001c 	rsb	r0, r0, #28
  403e9a:	4403      	add	r3, r0
  403e9c:	9308      	str	r3, [sp, #32]
  403e9e:	4613      	mov	r3, r2
  403ea0:	4403      	add	r3, r0
  403ea2:	4405      	add	r5, r0
  403ea4:	9306      	str	r3, [sp, #24]
  403ea6:	9b08      	ldr	r3, [sp, #32]
  403ea8:	2b00      	cmp	r3, #0
  403eaa:	dd05      	ble.n	403eb8 <_dtoa_r+0x528>
  403eac:	4649      	mov	r1, r9
  403eae:	461a      	mov	r2, r3
  403eb0:	4620      	mov	r0, r4
  403eb2:	f001 fa17 	bl	4052e4 <__lshift>
  403eb6:	4681      	mov	r9, r0
  403eb8:	9b06      	ldr	r3, [sp, #24]
  403eba:	2b00      	cmp	r3, #0
  403ebc:	dd05      	ble.n	403eca <_dtoa_r+0x53a>
  403ebe:	4641      	mov	r1, r8
  403ec0:	461a      	mov	r2, r3
  403ec2:	4620      	mov	r0, r4
  403ec4:	f001 fa0e 	bl	4052e4 <__lshift>
  403ec8:	4680      	mov	r8, r0
  403eca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403ecc:	2b00      	cmp	r3, #0
  403ece:	f040 8086 	bne.w	403fde <_dtoa_r+0x64e>
  403ed2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403ed4:	2b00      	cmp	r3, #0
  403ed6:	f340 8266 	ble.w	4043a6 <_dtoa_r+0xa16>
  403eda:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403edc:	2b00      	cmp	r3, #0
  403ede:	f000 8098 	beq.w	404012 <_dtoa_r+0x682>
  403ee2:	2d00      	cmp	r5, #0
  403ee4:	dd05      	ble.n	403ef2 <_dtoa_r+0x562>
  403ee6:	4631      	mov	r1, r6
  403ee8:	462a      	mov	r2, r5
  403eea:	4620      	mov	r0, r4
  403eec:	f001 f9fa 	bl	4052e4 <__lshift>
  403ef0:	4606      	mov	r6, r0
  403ef2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403ef4:	2b00      	cmp	r3, #0
  403ef6:	f040 8337 	bne.w	404568 <_dtoa_r+0xbd8>
  403efa:	9606      	str	r6, [sp, #24]
  403efc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403efe:	9a04      	ldr	r2, [sp, #16]
  403f00:	f8dd b018 	ldr.w	fp, [sp, #24]
  403f04:	3b01      	subs	r3, #1
  403f06:	18d3      	adds	r3, r2, r3
  403f08:	930b      	str	r3, [sp, #44]	; 0x2c
  403f0a:	f00a 0301 	and.w	r3, sl, #1
  403f0e:	930c      	str	r3, [sp, #48]	; 0x30
  403f10:	4617      	mov	r7, r2
  403f12:	46c2      	mov	sl, r8
  403f14:	4651      	mov	r1, sl
  403f16:	4648      	mov	r0, r9
  403f18:	f7ff fca6 	bl	403868 <quorem>
  403f1c:	4631      	mov	r1, r6
  403f1e:	4605      	mov	r5, r0
  403f20:	4648      	mov	r0, r9
  403f22:	f001 fa31 	bl	405388 <__mcmp>
  403f26:	465a      	mov	r2, fp
  403f28:	900a      	str	r0, [sp, #40]	; 0x28
  403f2a:	4651      	mov	r1, sl
  403f2c:	4620      	mov	r0, r4
  403f2e:	f001 fa47 	bl	4053c0 <__mdiff>
  403f32:	68c2      	ldr	r2, [r0, #12]
  403f34:	4680      	mov	r8, r0
  403f36:	f105 0330 	add.w	r3, r5, #48	; 0x30
  403f3a:	2a00      	cmp	r2, #0
  403f3c:	f040 822b 	bne.w	404396 <_dtoa_r+0xa06>
  403f40:	4601      	mov	r1, r0
  403f42:	4648      	mov	r0, r9
  403f44:	9308      	str	r3, [sp, #32]
  403f46:	f001 fa1f 	bl	405388 <__mcmp>
  403f4a:	4641      	mov	r1, r8
  403f4c:	9006      	str	r0, [sp, #24]
  403f4e:	4620      	mov	r0, r4
  403f50:	f001 f842 	bl	404fd8 <_Bfree>
  403f54:	9a06      	ldr	r2, [sp, #24]
  403f56:	9b08      	ldr	r3, [sp, #32]
  403f58:	b932      	cbnz	r2, 403f68 <_dtoa_r+0x5d8>
  403f5a:	9924      	ldr	r1, [sp, #144]	; 0x90
  403f5c:	b921      	cbnz	r1, 403f68 <_dtoa_r+0x5d8>
  403f5e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403f60:	2a00      	cmp	r2, #0
  403f62:	f000 83ef 	beq.w	404744 <_dtoa_r+0xdb4>
  403f66:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403f68:	990a      	ldr	r1, [sp, #40]	; 0x28
  403f6a:	2900      	cmp	r1, #0
  403f6c:	f2c0 829f 	blt.w	4044ae <_dtoa_r+0xb1e>
  403f70:	d105      	bne.n	403f7e <_dtoa_r+0x5ee>
  403f72:	9924      	ldr	r1, [sp, #144]	; 0x90
  403f74:	b919      	cbnz	r1, 403f7e <_dtoa_r+0x5ee>
  403f76:	990c      	ldr	r1, [sp, #48]	; 0x30
  403f78:	2900      	cmp	r1, #0
  403f7a:	f000 8298 	beq.w	4044ae <_dtoa_r+0xb1e>
  403f7e:	2a00      	cmp	r2, #0
  403f80:	f300 8306 	bgt.w	404590 <_dtoa_r+0xc00>
  403f84:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403f86:	703b      	strb	r3, [r7, #0]
  403f88:	f107 0801 	add.w	r8, r7, #1
  403f8c:	4297      	cmp	r7, r2
  403f8e:	4645      	mov	r5, r8
  403f90:	f000 830c 	beq.w	4045ac <_dtoa_r+0xc1c>
  403f94:	4649      	mov	r1, r9
  403f96:	2300      	movs	r3, #0
  403f98:	220a      	movs	r2, #10
  403f9a:	4620      	mov	r0, r4
  403f9c:	f001 f826 	bl	404fec <__multadd>
  403fa0:	455e      	cmp	r6, fp
  403fa2:	4681      	mov	r9, r0
  403fa4:	4631      	mov	r1, r6
  403fa6:	f04f 0300 	mov.w	r3, #0
  403faa:	f04f 020a 	mov.w	r2, #10
  403fae:	4620      	mov	r0, r4
  403fb0:	f000 81eb 	beq.w	40438a <_dtoa_r+0x9fa>
  403fb4:	f001 f81a 	bl	404fec <__multadd>
  403fb8:	4659      	mov	r1, fp
  403fba:	4606      	mov	r6, r0
  403fbc:	2300      	movs	r3, #0
  403fbe:	220a      	movs	r2, #10
  403fc0:	4620      	mov	r0, r4
  403fc2:	f001 f813 	bl	404fec <__multadd>
  403fc6:	4647      	mov	r7, r8
  403fc8:	4683      	mov	fp, r0
  403fca:	e7a3      	b.n	403f14 <_dtoa_r+0x584>
  403fcc:	201c      	movs	r0, #28
  403fce:	9b08      	ldr	r3, [sp, #32]
  403fd0:	4403      	add	r3, r0
  403fd2:	9308      	str	r3, [sp, #32]
  403fd4:	9b06      	ldr	r3, [sp, #24]
  403fd6:	4403      	add	r3, r0
  403fd8:	4405      	add	r5, r0
  403fda:	9306      	str	r3, [sp, #24]
  403fdc:	e763      	b.n	403ea6 <_dtoa_r+0x516>
  403fde:	4641      	mov	r1, r8
  403fe0:	4648      	mov	r0, r9
  403fe2:	f001 f9d1 	bl	405388 <__mcmp>
  403fe6:	2800      	cmp	r0, #0
  403fe8:	f6bf af73 	bge.w	403ed2 <_dtoa_r+0x542>
  403fec:	9f02      	ldr	r7, [sp, #8]
  403fee:	4649      	mov	r1, r9
  403ff0:	2300      	movs	r3, #0
  403ff2:	220a      	movs	r2, #10
  403ff4:	4620      	mov	r0, r4
  403ff6:	3f01      	subs	r7, #1
  403ff8:	9702      	str	r7, [sp, #8]
  403ffa:	f000 fff7 	bl	404fec <__multadd>
  403ffe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  404000:	4681      	mov	r9, r0
  404002:	2b00      	cmp	r3, #0
  404004:	f040 83b6 	bne.w	404774 <_dtoa_r+0xde4>
  404008:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40400a:	2b00      	cmp	r3, #0
  40400c:	f340 83bf 	ble.w	40478e <_dtoa_r+0xdfe>
  404010:	930a      	str	r3, [sp, #40]	; 0x28
  404012:	f8dd b010 	ldr.w	fp, [sp, #16]
  404016:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  404018:	465d      	mov	r5, fp
  40401a:	e002      	b.n	404022 <_dtoa_r+0x692>
  40401c:	f000 ffe6 	bl	404fec <__multadd>
  404020:	4681      	mov	r9, r0
  404022:	4641      	mov	r1, r8
  404024:	4648      	mov	r0, r9
  404026:	f7ff fc1f 	bl	403868 <quorem>
  40402a:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  40402e:	f805 ab01 	strb.w	sl, [r5], #1
  404032:	eba5 030b 	sub.w	r3, r5, fp
  404036:	42bb      	cmp	r3, r7
  404038:	f04f 020a 	mov.w	r2, #10
  40403c:	f04f 0300 	mov.w	r3, #0
  404040:	4649      	mov	r1, r9
  404042:	4620      	mov	r0, r4
  404044:	dbea      	blt.n	40401c <_dtoa_r+0x68c>
  404046:	9b04      	ldr	r3, [sp, #16]
  404048:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40404a:	2a01      	cmp	r2, #1
  40404c:	bfac      	ite	ge
  40404e:	189b      	addge	r3, r3, r2
  404050:	3301      	addlt	r3, #1
  404052:	461d      	mov	r5, r3
  404054:	f04f 0b00 	mov.w	fp, #0
  404058:	4649      	mov	r1, r9
  40405a:	2201      	movs	r2, #1
  40405c:	4620      	mov	r0, r4
  40405e:	f001 f941 	bl	4052e4 <__lshift>
  404062:	4641      	mov	r1, r8
  404064:	4681      	mov	r9, r0
  404066:	f001 f98f 	bl	405388 <__mcmp>
  40406a:	2800      	cmp	r0, #0
  40406c:	f340 823d 	ble.w	4044ea <_dtoa_r+0xb5a>
  404070:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  404074:	9904      	ldr	r1, [sp, #16]
  404076:	1e6b      	subs	r3, r5, #1
  404078:	e004      	b.n	404084 <_dtoa_r+0x6f4>
  40407a:	428b      	cmp	r3, r1
  40407c:	f000 81ae 	beq.w	4043dc <_dtoa_r+0xa4c>
  404080:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  404084:	2a39      	cmp	r2, #57	; 0x39
  404086:	f103 0501 	add.w	r5, r3, #1
  40408a:	d0f6      	beq.n	40407a <_dtoa_r+0x6ea>
  40408c:	3201      	adds	r2, #1
  40408e:	701a      	strb	r2, [r3, #0]
  404090:	4641      	mov	r1, r8
  404092:	4620      	mov	r0, r4
  404094:	f000 ffa0 	bl	404fd8 <_Bfree>
  404098:	2e00      	cmp	r6, #0
  40409a:	f43f ae3d 	beq.w	403d18 <_dtoa_r+0x388>
  40409e:	f1bb 0f00 	cmp.w	fp, #0
  4040a2:	d005      	beq.n	4040b0 <_dtoa_r+0x720>
  4040a4:	45b3      	cmp	fp, r6
  4040a6:	d003      	beq.n	4040b0 <_dtoa_r+0x720>
  4040a8:	4659      	mov	r1, fp
  4040aa:	4620      	mov	r0, r4
  4040ac:	f000 ff94 	bl	404fd8 <_Bfree>
  4040b0:	4631      	mov	r1, r6
  4040b2:	4620      	mov	r0, r4
  4040b4:	f000 ff90 	bl	404fd8 <_Bfree>
  4040b8:	e62e      	b.n	403d18 <_dtoa_r+0x388>
  4040ba:	2300      	movs	r3, #0
  4040bc:	930b      	str	r3, [sp, #44]	; 0x2c
  4040be:	9b02      	ldr	r3, [sp, #8]
  4040c0:	9a25      	ldr	r2, [sp, #148]	; 0x94
  4040c2:	4413      	add	r3, r2
  4040c4:	930f      	str	r3, [sp, #60]	; 0x3c
  4040c6:	3301      	adds	r3, #1
  4040c8:	2b01      	cmp	r3, #1
  4040ca:	461f      	mov	r7, r3
  4040cc:	461e      	mov	r6, r3
  4040ce:	930a      	str	r3, [sp, #40]	; 0x28
  4040d0:	bfb8      	it	lt
  4040d2:	2701      	movlt	r7, #1
  4040d4:	2100      	movs	r1, #0
  4040d6:	2f17      	cmp	r7, #23
  4040d8:	6461      	str	r1, [r4, #68]	; 0x44
  4040da:	d90a      	bls.n	4040f2 <_dtoa_r+0x762>
  4040dc:	2201      	movs	r2, #1
  4040de:	2304      	movs	r3, #4
  4040e0:	005b      	lsls	r3, r3, #1
  4040e2:	f103 0014 	add.w	r0, r3, #20
  4040e6:	4287      	cmp	r7, r0
  4040e8:	4611      	mov	r1, r2
  4040ea:	f102 0201 	add.w	r2, r2, #1
  4040ee:	d2f7      	bcs.n	4040e0 <_dtoa_r+0x750>
  4040f0:	6461      	str	r1, [r4, #68]	; 0x44
  4040f2:	4620      	mov	r0, r4
  4040f4:	f000 ff4a 	bl	404f8c <_Balloc>
  4040f8:	2e0e      	cmp	r6, #14
  4040fa:	9004      	str	r0, [sp, #16]
  4040fc:	6420      	str	r0, [r4, #64]	; 0x40
  4040fe:	f63f ad41 	bhi.w	403b84 <_dtoa_r+0x1f4>
  404102:	2d00      	cmp	r5, #0
  404104:	f43f ad3e 	beq.w	403b84 <_dtoa_r+0x1f4>
  404108:	9902      	ldr	r1, [sp, #8]
  40410a:	2900      	cmp	r1, #0
  40410c:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  404110:	f340 8202 	ble.w	404518 <_dtoa_r+0xb88>
  404114:	4bb8      	ldr	r3, [pc, #736]	; (4043f8 <_dtoa_r+0xa68>)
  404116:	f001 020f 	and.w	r2, r1, #15
  40411a:	110d      	asrs	r5, r1, #4
  40411c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  404120:	06e9      	lsls	r1, r5, #27
  404122:	e9d3 6700 	ldrd	r6, r7, [r3]
  404126:	f140 81ae 	bpl.w	404486 <_dtoa_r+0xaf6>
  40412a:	4bb4      	ldr	r3, [pc, #720]	; (4043fc <_dtoa_r+0xa6c>)
  40412c:	4650      	mov	r0, sl
  40412e:	4659      	mov	r1, fp
  404130:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  404134:	f7fd ff86 	bl	402044 <__aeabi_ddiv>
  404138:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  40413c:	f005 050f 	and.w	r5, r5, #15
  404140:	f04f 0a03 	mov.w	sl, #3
  404144:	b18d      	cbz	r5, 40416a <_dtoa_r+0x7da>
  404146:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 4043fc <_dtoa_r+0xa6c>
  40414a:	07ea      	lsls	r2, r5, #31
  40414c:	d509      	bpl.n	404162 <_dtoa_r+0x7d2>
  40414e:	4630      	mov	r0, r6
  404150:	4639      	mov	r1, r7
  404152:	e9d8 2300 	ldrd	r2, r3, [r8]
  404156:	f7fd fe4b 	bl	401df0 <__aeabi_dmul>
  40415a:	f10a 0a01 	add.w	sl, sl, #1
  40415e:	4606      	mov	r6, r0
  404160:	460f      	mov	r7, r1
  404162:	106d      	asrs	r5, r5, #1
  404164:	f108 0808 	add.w	r8, r8, #8
  404168:	d1ef      	bne.n	40414a <_dtoa_r+0x7ba>
  40416a:	463b      	mov	r3, r7
  40416c:	4632      	mov	r2, r6
  40416e:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  404172:	f7fd ff67 	bl	402044 <__aeabi_ddiv>
  404176:	4607      	mov	r7, r0
  404178:	4688      	mov	r8, r1
  40417a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40417c:	b143      	cbz	r3, 404190 <_dtoa_r+0x800>
  40417e:	2200      	movs	r2, #0
  404180:	4b9f      	ldr	r3, [pc, #636]	; (404400 <_dtoa_r+0xa70>)
  404182:	4638      	mov	r0, r7
  404184:	4641      	mov	r1, r8
  404186:	f001 ff5d 	bl	406044 <__aeabi_dcmplt>
  40418a:	2800      	cmp	r0, #0
  40418c:	f040 8286 	bne.w	40469c <_dtoa_r+0xd0c>
  404190:	4650      	mov	r0, sl
  404192:	f7fd fdc7 	bl	401d24 <__aeabi_i2d>
  404196:	463a      	mov	r2, r7
  404198:	4643      	mov	r3, r8
  40419a:	f7fd fe29 	bl	401df0 <__aeabi_dmul>
  40419e:	4b99      	ldr	r3, [pc, #612]	; (404404 <_dtoa_r+0xa74>)
  4041a0:	2200      	movs	r2, #0
  4041a2:	f7fd fc73 	bl	401a8c <__adddf3>
  4041a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4041a8:	4605      	mov	r5, r0
  4041aa:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  4041ae:	2b00      	cmp	r3, #0
  4041b0:	f000 813e 	beq.w	404430 <_dtoa_r+0xaa0>
  4041b4:	9b02      	ldr	r3, [sp, #8]
  4041b6:	9315      	str	r3, [sp, #84]	; 0x54
  4041b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4041ba:	9312      	str	r3, [sp, #72]	; 0x48
  4041bc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4041be:	2b00      	cmp	r3, #0
  4041c0:	f000 81fa 	beq.w	4045b8 <_dtoa_r+0xc28>
  4041c4:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4041c6:	4b8c      	ldr	r3, [pc, #560]	; (4043f8 <_dtoa_r+0xa68>)
  4041c8:	498f      	ldr	r1, [pc, #572]	; (404408 <_dtoa_r+0xa78>)
  4041ca:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4041ce:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  4041d2:	2000      	movs	r0, #0
  4041d4:	f7fd ff36 	bl	402044 <__aeabi_ddiv>
  4041d8:	462a      	mov	r2, r5
  4041da:	4633      	mov	r3, r6
  4041dc:	f7fd fc54 	bl	401a88 <__aeabi_dsub>
  4041e0:	4682      	mov	sl, r0
  4041e2:	468b      	mov	fp, r1
  4041e4:	4638      	mov	r0, r7
  4041e6:	4641      	mov	r1, r8
  4041e8:	f001 ff6a 	bl	4060c0 <__aeabi_d2iz>
  4041ec:	4605      	mov	r5, r0
  4041ee:	f7fd fd99 	bl	401d24 <__aeabi_i2d>
  4041f2:	4602      	mov	r2, r0
  4041f4:	460b      	mov	r3, r1
  4041f6:	4638      	mov	r0, r7
  4041f8:	4641      	mov	r1, r8
  4041fa:	f7fd fc45 	bl	401a88 <__aeabi_dsub>
  4041fe:	3530      	adds	r5, #48	; 0x30
  404200:	fa5f f885 	uxtb.w	r8, r5
  404204:	9d04      	ldr	r5, [sp, #16]
  404206:	4606      	mov	r6, r0
  404208:	460f      	mov	r7, r1
  40420a:	f885 8000 	strb.w	r8, [r5]
  40420e:	4602      	mov	r2, r0
  404210:	460b      	mov	r3, r1
  404212:	4650      	mov	r0, sl
  404214:	4659      	mov	r1, fp
  404216:	3501      	adds	r5, #1
  404218:	f001 ff32 	bl	406080 <__aeabi_dcmpgt>
  40421c:	2800      	cmp	r0, #0
  40421e:	d154      	bne.n	4042ca <_dtoa_r+0x93a>
  404220:	4632      	mov	r2, r6
  404222:	463b      	mov	r3, r7
  404224:	2000      	movs	r0, #0
  404226:	4976      	ldr	r1, [pc, #472]	; (404400 <_dtoa_r+0xa70>)
  404228:	f7fd fc2e 	bl	401a88 <__aeabi_dsub>
  40422c:	4602      	mov	r2, r0
  40422e:	460b      	mov	r3, r1
  404230:	4650      	mov	r0, sl
  404232:	4659      	mov	r1, fp
  404234:	f001 ff24 	bl	406080 <__aeabi_dcmpgt>
  404238:	2800      	cmp	r0, #0
  40423a:	f040 8270 	bne.w	40471e <_dtoa_r+0xd8e>
  40423e:	9a12      	ldr	r2, [sp, #72]	; 0x48
  404240:	2a01      	cmp	r2, #1
  404242:	f000 8111 	beq.w	404468 <_dtoa_r+0xad8>
  404246:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404248:	9a04      	ldr	r2, [sp, #16]
  40424a:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  40424e:	4413      	add	r3, r2
  404250:	4699      	mov	r9, r3
  404252:	e00d      	b.n	404270 <_dtoa_r+0x8e0>
  404254:	2000      	movs	r0, #0
  404256:	496a      	ldr	r1, [pc, #424]	; (404400 <_dtoa_r+0xa70>)
  404258:	f7fd fc16 	bl	401a88 <__aeabi_dsub>
  40425c:	4652      	mov	r2, sl
  40425e:	465b      	mov	r3, fp
  404260:	f001 fef0 	bl	406044 <__aeabi_dcmplt>
  404264:	2800      	cmp	r0, #0
  404266:	f040 8258 	bne.w	40471a <_dtoa_r+0xd8a>
  40426a:	454d      	cmp	r5, r9
  40426c:	f000 80fa 	beq.w	404464 <_dtoa_r+0xad4>
  404270:	4650      	mov	r0, sl
  404272:	4659      	mov	r1, fp
  404274:	2200      	movs	r2, #0
  404276:	4b65      	ldr	r3, [pc, #404]	; (40440c <_dtoa_r+0xa7c>)
  404278:	f7fd fdba 	bl	401df0 <__aeabi_dmul>
  40427c:	2200      	movs	r2, #0
  40427e:	4b63      	ldr	r3, [pc, #396]	; (40440c <_dtoa_r+0xa7c>)
  404280:	4682      	mov	sl, r0
  404282:	468b      	mov	fp, r1
  404284:	4630      	mov	r0, r6
  404286:	4639      	mov	r1, r7
  404288:	f7fd fdb2 	bl	401df0 <__aeabi_dmul>
  40428c:	460f      	mov	r7, r1
  40428e:	4606      	mov	r6, r0
  404290:	f001 ff16 	bl	4060c0 <__aeabi_d2iz>
  404294:	4680      	mov	r8, r0
  404296:	f7fd fd45 	bl	401d24 <__aeabi_i2d>
  40429a:	4602      	mov	r2, r0
  40429c:	460b      	mov	r3, r1
  40429e:	4630      	mov	r0, r6
  4042a0:	4639      	mov	r1, r7
  4042a2:	f7fd fbf1 	bl	401a88 <__aeabi_dsub>
  4042a6:	f108 0830 	add.w	r8, r8, #48	; 0x30
  4042aa:	fa5f f888 	uxtb.w	r8, r8
  4042ae:	4652      	mov	r2, sl
  4042b0:	465b      	mov	r3, fp
  4042b2:	f805 8b01 	strb.w	r8, [r5], #1
  4042b6:	4606      	mov	r6, r0
  4042b8:	460f      	mov	r7, r1
  4042ba:	f001 fec3 	bl	406044 <__aeabi_dcmplt>
  4042be:	4632      	mov	r2, r6
  4042c0:	463b      	mov	r3, r7
  4042c2:	2800      	cmp	r0, #0
  4042c4:	d0c6      	beq.n	404254 <_dtoa_r+0x8c4>
  4042c6:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4042ca:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4042cc:	9302      	str	r3, [sp, #8]
  4042ce:	e523      	b.n	403d18 <_dtoa_r+0x388>
  4042d0:	2300      	movs	r3, #0
  4042d2:	930b      	str	r3, [sp, #44]	; 0x2c
  4042d4:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4042d6:	2b00      	cmp	r3, #0
  4042d8:	f340 80dc 	ble.w	404494 <_dtoa_r+0xb04>
  4042dc:	461f      	mov	r7, r3
  4042de:	461e      	mov	r6, r3
  4042e0:	930f      	str	r3, [sp, #60]	; 0x3c
  4042e2:	930a      	str	r3, [sp, #40]	; 0x28
  4042e4:	e6f6      	b.n	4040d4 <_dtoa_r+0x744>
  4042e6:	2301      	movs	r3, #1
  4042e8:	930b      	str	r3, [sp, #44]	; 0x2c
  4042ea:	e7f3      	b.n	4042d4 <_dtoa_r+0x944>
  4042ec:	f1ba 0f00 	cmp.w	sl, #0
  4042f0:	f47f ada8 	bne.w	403e44 <_dtoa_r+0x4b4>
  4042f4:	f3cb 0313 	ubfx	r3, fp, #0, #20
  4042f8:	2b00      	cmp	r3, #0
  4042fa:	f47f adba 	bne.w	403e72 <_dtoa_r+0x4e2>
  4042fe:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  404302:	0d3f      	lsrs	r7, r7, #20
  404304:	053f      	lsls	r7, r7, #20
  404306:	2f00      	cmp	r7, #0
  404308:	f000 820d 	beq.w	404726 <_dtoa_r+0xd96>
  40430c:	9b08      	ldr	r3, [sp, #32]
  40430e:	3301      	adds	r3, #1
  404310:	9308      	str	r3, [sp, #32]
  404312:	9b06      	ldr	r3, [sp, #24]
  404314:	3301      	adds	r3, #1
  404316:	9306      	str	r3, [sp, #24]
  404318:	2301      	movs	r3, #1
  40431a:	930c      	str	r3, [sp, #48]	; 0x30
  40431c:	e5ab      	b.n	403e76 <_dtoa_r+0x4e6>
  40431e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404320:	2b00      	cmp	r3, #0
  404322:	f73f ac42 	bgt.w	403baa <_dtoa_r+0x21a>
  404326:	f040 8221 	bne.w	40476c <_dtoa_r+0xddc>
  40432a:	2200      	movs	r2, #0
  40432c:	4b38      	ldr	r3, [pc, #224]	; (404410 <_dtoa_r+0xa80>)
  40432e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  404332:	f7fd fd5d 	bl	401df0 <__aeabi_dmul>
  404336:	4652      	mov	r2, sl
  404338:	465b      	mov	r3, fp
  40433a:	f001 fe97 	bl	40606c <__aeabi_dcmpge>
  40433e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  404342:	4646      	mov	r6, r8
  404344:	2800      	cmp	r0, #0
  404346:	d041      	beq.n	4043cc <_dtoa_r+0xa3c>
  404348:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40434a:	9d04      	ldr	r5, [sp, #16]
  40434c:	43db      	mvns	r3, r3
  40434e:	9302      	str	r3, [sp, #8]
  404350:	4641      	mov	r1, r8
  404352:	4620      	mov	r0, r4
  404354:	f000 fe40 	bl	404fd8 <_Bfree>
  404358:	2e00      	cmp	r6, #0
  40435a:	f43f acdd 	beq.w	403d18 <_dtoa_r+0x388>
  40435e:	e6a7      	b.n	4040b0 <_dtoa_r+0x720>
  404360:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  404362:	4649      	mov	r1, r9
  404364:	4620      	mov	r0, r4
  404366:	f000 ff6d 	bl	405244 <__pow5mult>
  40436a:	4681      	mov	r9, r0
  40436c:	e558      	b.n	403e20 <_dtoa_r+0x490>
  40436e:	9a14      	ldr	r2, [sp, #80]	; 0x50
  404370:	2a00      	cmp	r2, #0
  404372:	f000 8187 	beq.w	404684 <_dtoa_r+0xcf4>
  404376:	f203 4333 	addw	r3, r3, #1075	; 0x433
  40437a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  40437c:	9d08      	ldr	r5, [sp, #32]
  40437e:	e4f2      	b.n	403d66 <_dtoa_r+0x3d6>
  404380:	f1ba 0f00 	cmp.w	sl, #0
  404384:	f47f ad75 	bne.w	403e72 <_dtoa_r+0x4e2>
  404388:	e7b4      	b.n	4042f4 <_dtoa_r+0x964>
  40438a:	f000 fe2f 	bl	404fec <__multadd>
  40438e:	4647      	mov	r7, r8
  404390:	4606      	mov	r6, r0
  404392:	4683      	mov	fp, r0
  404394:	e5be      	b.n	403f14 <_dtoa_r+0x584>
  404396:	4601      	mov	r1, r0
  404398:	4620      	mov	r0, r4
  40439a:	9306      	str	r3, [sp, #24]
  40439c:	f000 fe1c 	bl	404fd8 <_Bfree>
  4043a0:	2201      	movs	r2, #1
  4043a2:	9b06      	ldr	r3, [sp, #24]
  4043a4:	e5e0      	b.n	403f68 <_dtoa_r+0x5d8>
  4043a6:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4043a8:	2b02      	cmp	r3, #2
  4043aa:	f77f ad96 	ble.w	403eda <_dtoa_r+0x54a>
  4043ae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4043b0:	2b00      	cmp	r3, #0
  4043b2:	d1c9      	bne.n	404348 <_dtoa_r+0x9b8>
  4043b4:	4641      	mov	r1, r8
  4043b6:	2205      	movs	r2, #5
  4043b8:	4620      	mov	r0, r4
  4043ba:	f000 fe17 	bl	404fec <__multadd>
  4043be:	4601      	mov	r1, r0
  4043c0:	4680      	mov	r8, r0
  4043c2:	4648      	mov	r0, r9
  4043c4:	f000 ffe0 	bl	405388 <__mcmp>
  4043c8:	2800      	cmp	r0, #0
  4043ca:	ddbd      	ble.n	404348 <_dtoa_r+0x9b8>
  4043cc:	9a02      	ldr	r2, [sp, #8]
  4043ce:	9904      	ldr	r1, [sp, #16]
  4043d0:	2331      	movs	r3, #49	; 0x31
  4043d2:	3201      	adds	r2, #1
  4043d4:	9202      	str	r2, [sp, #8]
  4043d6:	700b      	strb	r3, [r1, #0]
  4043d8:	1c4d      	adds	r5, r1, #1
  4043da:	e7b9      	b.n	404350 <_dtoa_r+0x9c0>
  4043dc:	9a02      	ldr	r2, [sp, #8]
  4043de:	3201      	adds	r2, #1
  4043e0:	9202      	str	r2, [sp, #8]
  4043e2:	9a04      	ldr	r2, [sp, #16]
  4043e4:	2331      	movs	r3, #49	; 0x31
  4043e6:	7013      	strb	r3, [r2, #0]
  4043e8:	e652      	b.n	404090 <_dtoa_r+0x700>
  4043ea:	2301      	movs	r3, #1
  4043ec:	930b      	str	r3, [sp, #44]	; 0x2c
  4043ee:	e666      	b.n	4040be <_dtoa_r+0x72e>
  4043f0:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  4043f4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4043f6:	e48f      	b.n	403d18 <_dtoa_r+0x388>
  4043f8:	00406f38 	.word	0x00406f38
  4043fc:	00406f10 	.word	0x00406f10
  404400:	3ff00000 	.word	0x3ff00000
  404404:	401c0000 	.word	0x401c0000
  404408:	3fe00000 	.word	0x3fe00000
  40440c:	40240000 	.word	0x40240000
  404410:	40140000 	.word	0x40140000
  404414:	4650      	mov	r0, sl
  404416:	f7fd fc85 	bl	401d24 <__aeabi_i2d>
  40441a:	463a      	mov	r2, r7
  40441c:	4643      	mov	r3, r8
  40441e:	f7fd fce7 	bl	401df0 <__aeabi_dmul>
  404422:	2200      	movs	r2, #0
  404424:	4bc1      	ldr	r3, [pc, #772]	; (40472c <_dtoa_r+0xd9c>)
  404426:	f7fd fb31 	bl	401a8c <__adddf3>
  40442a:	4605      	mov	r5, r0
  40442c:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  404430:	4641      	mov	r1, r8
  404432:	2200      	movs	r2, #0
  404434:	4bbe      	ldr	r3, [pc, #760]	; (404730 <_dtoa_r+0xda0>)
  404436:	4638      	mov	r0, r7
  404438:	f7fd fb26 	bl	401a88 <__aeabi_dsub>
  40443c:	462a      	mov	r2, r5
  40443e:	4633      	mov	r3, r6
  404440:	4682      	mov	sl, r0
  404442:	468b      	mov	fp, r1
  404444:	f001 fe1c 	bl	406080 <__aeabi_dcmpgt>
  404448:	4680      	mov	r8, r0
  40444a:	2800      	cmp	r0, #0
  40444c:	f040 8110 	bne.w	404670 <_dtoa_r+0xce0>
  404450:	462a      	mov	r2, r5
  404452:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  404456:	4650      	mov	r0, sl
  404458:	4659      	mov	r1, fp
  40445a:	f001 fdf3 	bl	406044 <__aeabi_dcmplt>
  40445e:	b118      	cbz	r0, 404468 <_dtoa_r+0xad8>
  404460:	4646      	mov	r6, r8
  404462:	e771      	b.n	404348 <_dtoa_r+0x9b8>
  404464:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404468:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  40446c:	f7ff bb8a 	b.w	403b84 <_dtoa_r+0x1f4>
  404470:	9804      	ldr	r0, [sp, #16]
  404472:	f7ff babb 	b.w	4039ec <_dtoa_r+0x5c>
  404476:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  404478:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  40447a:	970c      	str	r7, [sp, #48]	; 0x30
  40447c:	1afb      	subs	r3, r7, r3
  40447e:	441a      	add	r2, r3
  404480:	920d      	str	r2, [sp, #52]	; 0x34
  404482:	2700      	movs	r7, #0
  404484:	e469      	b.n	403d5a <_dtoa_r+0x3ca>
  404486:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  40448a:	f04f 0a02 	mov.w	sl, #2
  40448e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  404492:	e657      	b.n	404144 <_dtoa_r+0x7b4>
  404494:	2100      	movs	r1, #0
  404496:	2301      	movs	r3, #1
  404498:	6461      	str	r1, [r4, #68]	; 0x44
  40449a:	4620      	mov	r0, r4
  40449c:	9325      	str	r3, [sp, #148]	; 0x94
  40449e:	f000 fd75 	bl	404f8c <_Balloc>
  4044a2:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4044a4:	9004      	str	r0, [sp, #16]
  4044a6:	6420      	str	r0, [r4, #64]	; 0x40
  4044a8:	930a      	str	r3, [sp, #40]	; 0x28
  4044aa:	930f      	str	r3, [sp, #60]	; 0x3c
  4044ac:	e629      	b.n	404102 <_dtoa_r+0x772>
  4044ae:	2a00      	cmp	r2, #0
  4044b0:	46d0      	mov	r8, sl
  4044b2:	f8cd b018 	str.w	fp, [sp, #24]
  4044b6:	469a      	mov	sl, r3
  4044b8:	dd11      	ble.n	4044de <_dtoa_r+0xb4e>
  4044ba:	4649      	mov	r1, r9
  4044bc:	2201      	movs	r2, #1
  4044be:	4620      	mov	r0, r4
  4044c0:	f000 ff10 	bl	4052e4 <__lshift>
  4044c4:	4641      	mov	r1, r8
  4044c6:	4681      	mov	r9, r0
  4044c8:	f000 ff5e 	bl	405388 <__mcmp>
  4044cc:	2800      	cmp	r0, #0
  4044ce:	f340 8146 	ble.w	40475e <_dtoa_r+0xdce>
  4044d2:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  4044d6:	f000 8106 	beq.w	4046e6 <_dtoa_r+0xd56>
  4044da:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  4044de:	46b3      	mov	fp, r6
  4044e0:	f887 a000 	strb.w	sl, [r7]
  4044e4:	1c7d      	adds	r5, r7, #1
  4044e6:	9e06      	ldr	r6, [sp, #24]
  4044e8:	e5d2      	b.n	404090 <_dtoa_r+0x700>
  4044ea:	d104      	bne.n	4044f6 <_dtoa_r+0xb66>
  4044ec:	f01a 0f01 	tst.w	sl, #1
  4044f0:	d001      	beq.n	4044f6 <_dtoa_r+0xb66>
  4044f2:	e5bd      	b.n	404070 <_dtoa_r+0x6e0>
  4044f4:	4615      	mov	r5, r2
  4044f6:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  4044fa:	2b30      	cmp	r3, #48	; 0x30
  4044fc:	f105 32ff 	add.w	r2, r5, #4294967295
  404500:	d0f8      	beq.n	4044f4 <_dtoa_r+0xb64>
  404502:	e5c5      	b.n	404090 <_dtoa_r+0x700>
  404504:	9904      	ldr	r1, [sp, #16]
  404506:	2230      	movs	r2, #48	; 0x30
  404508:	700a      	strb	r2, [r1, #0]
  40450a:	9a02      	ldr	r2, [sp, #8]
  40450c:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  404510:	3201      	adds	r2, #1
  404512:	9202      	str	r2, [sp, #8]
  404514:	f7ff bbfc 	b.w	403d10 <_dtoa_r+0x380>
  404518:	f000 80bb 	beq.w	404692 <_dtoa_r+0xd02>
  40451c:	9b02      	ldr	r3, [sp, #8]
  40451e:	425d      	negs	r5, r3
  404520:	4b84      	ldr	r3, [pc, #528]	; (404734 <_dtoa_r+0xda4>)
  404522:	f005 020f 	and.w	r2, r5, #15
  404526:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  40452a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40452e:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  404532:	f7fd fc5d 	bl	401df0 <__aeabi_dmul>
  404536:	112d      	asrs	r5, r5, #4
  404538:	4607      	mov	r7, r0
  40453a:	4688      	mov	r8, r1
  40453c:	f000 812c 	beq.w	404798 <_dtoa_r+0xe08>
  404540:	4e7d      	ldr	r6, [pc, #500]	; (404738 <_dtoa_r+0xda8>)
  404542:	f04f 0a02 	mov.w	sl, #2
  404546:	07eb      	lsls	r3, r5, #31
  404548:	d509      	bpl.n	40455e <_dtoa_r+0xbce>
  40454a:	4638      	mov	r0, r7
  40454c:	4641      	mov	r1, r8
  40454e:	e9d6 2300 	ldrd	r2, r3, [r6]
  404552:	f7fd fc4d 	bl	401df0 <__aeabi_dmul>
  404556:	f10a 0a01 	add.w	sl, sl, #1
  40455a:	4607      	mov	r7, r0
  40455c:	4688      	mov	r8, r1
  40455e:	106d      	asrs	r5, r5, #1
  404560:	f106 0608 	add.w	r6, r6, #8
  404564:	d1ef      	bne.n	404546 <_dtoa_r+0xbb6>
  404566:	e608      	b.n	40417a <_dtoa_r+0x7ea>
  404568:	6871      	ldr	r1, [r6, #4]
  40456a:	4620      	mov	r0, r4
  40456c:	f000 fd0e 	bl	404f8c <_Balloc>
  404570:	6933      	ldr	r3, [r6, #16]
  404572:	3302      	adds	r3, #2
  404574:	009a      	lsls	r2, r3, #2
  404576:	4605      	mov	r5, r0
  404578:	f106 010c 	add.w	r1, r6, #12
  40457c:	300c      	adds	r0, #12
  40457e:	f000 fc5f 	bl	404e40 <memcpy>
  404582:	4629      	mov	r1, r5
  404584:	2201      	movs	r2, #1
  404586:	4620      	mov	r0, r4
  404588:	f000 feac 	bl	4052e4 <__lshift>
  40458c:	9006      	str	r0, [sp, #24]
  40458e:	e4b5      	b.n	403efc <_dtoa_r+0x56c>
  404590:	2b39      	cmp	r3, #57	; 0x39
  404592:	f8cd b018 	str.w	fp, [sp, #24]
  404596:	46d0      	mov	r8, sl
  404598:	f000 80a5 	beq.w	4046e6 <_dtoa_r+0xd56>
  40459c:	f103 0a01 	add.w	sl, r3, #1
  4045a0:	46b3      	mov	fp, r6
  4045a2:	f887 a000 	strb.w	sl, [r7]
  4045a6:	1c7d      	adds	r5, r7, #1
  4045a8:	9e06      	ldr	r6, [sp, #24]
  4045aa:	e571      	b.n	404090 <_dtoa_r+0x700>
  4045ac:	465a      	mov	r2, fp
  4045ae:	46d0      	mov	r8, sl
  4045b0:	46b3      	mov	fp, r6
  4045b2:	469a      	mov	sl, r3
  4045b4:	4616      	mov	r6, r2
  4045b6:	e54f      	b.n	404058 <_dtoa_r+0x6c8>
  4045b8:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4045ba:	495e      	ldr	r1, [pc, #376]	; (404734 <_dtoa_r+0xda4>)
  4045bc:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  4045c0:	462a      	mov	r2, r5
  4045c2:	4633      	mov	r3, r6
  4045c4:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  4045c8:	f7fd fc12 	bl	401df0 <__aeabi_dmul>
  4045cc:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  4045d0:	4638      	mov	r0, r7
  4045d2:	4641      	mov	r1, r8
  4045d4:	f001 fd74 	bl	4060c0 <__aeabi_d2iz>
  4045d8:	4605      	mov	r5, r0
  4045da:	f7fd fba3 	bl	401d24 <__aeabi_i2d>
  4045de:	460b      	mov	r3, r1
  4045e0:	4602      	mov	r2, r0
  4045e2:	4641      	mov	r1, r8
  4045e4:	4638      	mov	r0, r7
  4045e6:	f7fd fa4f 	bl	401a88 <__aeabi_dsub>
  4045ea:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4045ec:	460f      	mov	r7, r1
  4045ee:	9904      	ldr	r1, [sp, #16]
  4045f0:	3530      	adds	r5, #48	; 0x30
  4045f2:	2b01      	cmp	r3, #1
  4045f4:	700d      	strb	r5, [r1, #0]
  4045f6:	4606      	mov	r6, r0
  4045f8:	f101 0501 	add.w	r5, r1, #1
  4045fc:	d026      	beq.n	40464c <_dtoa_r+0xcbc>
  4045fe:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404600:	9a04      	ldr	r2, [sp, #16]
  404602:	f8df b13c 	ldr.w	fp, [pc, #316]	; 404740 <_dtoa_r+0xdb0>
  404606:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  40460a:	4413      	add	r3, r2
  40460c:	f04f 0a00 	mov.w	sl, #0
  404610:	4699      	mov	r9, r3
  404612:	4652      	mov	r2, sl
  404614:	465b      	mov	r3, fp
  404616:	4630      	mov	r0, r6
  404618:	4639      	mov	r1, r7
  40461a:	f7fd fbe9 	bl	401df0 <__aeabi_dmul>
  40461e:	460f      	mov	r7, r1
  404620:	4606      	mov	r6, r0
  404622:	f001 fd4d 	bl	4060c0 <__aeabi_d2iz>
  404626:	4680      	mov	r8, r0
  404628:	f7fd fb7c 	bl	401d24 <__aeabi_i2d>
  40462c:	f108 0830 	add.w	r8, r8, #48	; 0x30
  404630:	4602      	mov	r2, r0
  404632:	460b      	mov	r3, r1
  404634:	4630      	mov	r0, r6
  404636:	4639      	mov	r1, r7
  404638:	f7fd fa26 	bl	401a88 <__aeabi_dsub>
  40463c:	f805 8b01 	strb.w	r8, [r5], #1
  404640:	454d      	cmp	r5, r9
  404642:	4606      	mov	r6, r0
  404644:	460f      	mov	r7, r1
  404646:	d1e4      	bne.n	404612 <_dtoa_r+0xc82>
  404648:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  40464c:	4b3b      	ldr	r3, [pc, #236]	; (40473c <_dtoa_r+0xdac>)
  40464e:	2200      	movs	r2, #0
  404650:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  404654:	f7fd fa1a 	bl	401a8c <__adddf3>
  404658:	4632      	mov	r2, r6
  40465a:	463b      	mov	r3, r7
  40465c:	f001 fcf2 	bl	406044 <__aeabi_dcmplt>
  404660:	2800      	cmp	r0, #0
  404662:	d046      	beq.n	4046f2 <_dtoa_r+0xd62>
  404664:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404666:	9302      	str	r3, [sp, #8]
  404668:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  40466c:	f7ff bb43 	b.w	403cf6 <_dtoa_r+0x366>
  404670:	f04f 0800 	mov.w	r8, #0
  404674:	4646      	mov	r6, r8
  404676:	e6a9      	b.n	4043cc <_dtoa_r+0xa3c>
  404678:	9b08      	ldr	r3, [sp, #32]
  40467a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40467c:	1a9d      	subs	r5, r3, r2
  40467e:	2300      	movs	r3, #0
  404680:	f7ff bb71 	b.w	403d66 <_dtoa_r+0x3d6>
  404684:	9b18      	ldr	r3, [sp, #96]	; 0x60
  404686:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404688:	9d08      	ldr	r5, [sp, #32]
  40468a:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  40468e:	f7ff bb6a 	b.w	403d66 <_dtoa_r+0x3d6>
  404692:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  404696:	f04f 0a02 	mov.w	sl, #2
  40469a:	e56e      	b.n	40417a <_dtoa_r+0x7ea>
  40469c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40469e:	2b00      	cmp	r3, #0
  4046a0:	f43f aeb8 	beq.w	404414 <_dtoa_r+0xa84>
  4046a4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4046a6:	2b00      	cmp	r3, #0
  4046a8:	f77f aede 	ble.w	404468 <_dtoa_r+0xad8>
  4046ac:	2200      	movs	r2, #0
  4046ae:	4b24      	ldr	r3, [pc, #144]	; (404740 <_dtoa_r+0xdb0>)
  4046b0:	4638      	mov	r0, r7
  4046b2:	4641      	mov	r1, r8
  4046b4:	f7fd fb9c 	bl	401df0 <__aeabi_dmul>
  4046b8:	4607      	mov	r7, r0
  4046ba:	4688      	mov	r8, r1
  4046bc:	f10a 0001 	add.w	r0, sl, #1
  4046c0:	f7fd fb30 	bl	401d24 <__aeabi_i2d>
  4046c4:	463a      	mov	r2, r7
  4046c6:	4643      	mov	r3, r8
  4046c8:	f7fd fb92 	bl	401df0 <__aeabi_dmul>
  4046cc:	2200      	movs	r2, #0
  4046ce:	4b17      	ldr	r3, [pc, #92]	; (40472c <_dtoa_r+0xd9c>)
  4046d0:	f7fd f9dc 	bl	401a8c <__adddf3>
  4046d4:	9a02      	ldr	r2, [sp, #8]
  4046d6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4046d8:	9312      	str	r3, [sp, #72]	; 0x48
  4046da:	3a01      	subs	r2, #1
  4046dc:	4605      	mov	r5, r0
  4046de:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  4046e2:	9215      	str	r2, [sp, #84]	; 0x54
  4046e4:	e56a      	b.n	4041bc <_dtoa_r+0x82c>
  4046e6:	2239      	movs	r2, #57	; 0x39
  4046e8:	46b3      	mov	fp, r6
  4046ea:	703a      	strb	r2, [r7, #0]
  4046ec:	9e06      	ldr	r6, [sp, #24]
  4046ee:	1c7d      	adds	r5, r7, #1
  4046f0:	e4c0      	b.n	404074 <_dtoa_r+0x6e4>
  4046f2:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  4046f6:	2000      	movs	r0, #0
  4046f8:	4910      	ldr	r1, [pc, #64]	; (40473c <_dtoa_r+0xdac>)
  4046fa:	f7fd f9c5 	bl	401a88 <__aeabi_dsub>
  4046fe:	4632      	mov	r2, r6
  404700:	463b      	mov	r3, r7
  404702:	f001 fcbd 	bl	406080 <__aeabi_dcmpgt>
  404706:	b908      	cbnz	r0, 40470c <_dtoa_r+0xd7c>
  404708:	e6ae      	b.n	404468 <_dtoa_r+0xad8>
  40470a:	4615      	mov	r5, r2
  40470c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  404710:	2b30      	cmp	r3, #48	; 0x30
  404712:	f105 32ff 	add.w	r2, r5, #4294967295
  404716:	d0f8      	beq.n	40470a <_dtoa_r+0xd7a>
  404718:	e5d7      	b.n	4042ca <_dtoa_r+0x93a>
  40471a:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  40471e:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404720:	9302      	str	r3, [sp, #8]
  404722:	f7ff bae8 	b.w	403cf6 <_dtoa_r+0x366>
  404726:	970c      	str	r7, [sp, #48]	; 0x30
  404728:	f7ff bba5 	b.w	403e76 <_dtoa_r+0x4e6>
  40472c:	401c0000 	.word	0x401c0000
  404730:	40140000 	.word	0x40140000
  404734:	00406f38 	.word	0x00406f38
  404738:	00406f10 	.word	0x00406f10
  40473c:	3fe00000 	.word	0x3fe00000
  404740:	40240000 	.word	0x40240000
  404744:	2b39      	cmp	r3, #57	; 0x39
  404746:	f8cd b018 	str.w	fp, [sp, #24]
  40474a:	46d0      	mov	r8, sl
  40474c:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  404750:	469a      	mov	sl, r3
  404752:	d0c8      	beq.n	4046e6 <_dtoa_r+0xd56>
  404754:	f1bb 0f00 	cmp.w	fp, #0
  404758:	f73f aebf 	bgt.w	4044da <_dtoa_r+0xb4a>
  40475c:	e6bf      	b.n	4044de <_dtoa_r+0xb4e>
  40475e:	f47f aebe 	bne.w	4044de <_dtoa_r+0xb4e>
  404762:	f01a 0f01 	tst.w	sl, #1
  404766:	f43f aeba 	beq.w	4044de <_dtoa_r+0xb4e>
  40476a:	e6b2      	b.n	4044d2 <_dtoa_r+0xb42>
  40476c:	f04f 0800 	mov.w	r8, #0
  404770:	4646      	mov	r6, r8
  404772:	e5e9      	b.n	404348 <_dtoa_r+0x9b8>
  404774:	4631      	mov	r1, r6
  404776:	2300      	movs	r3, #0
  404778:	220a      	movs	r2, #10
  40477a:	4620      	mov	r0, r4
  40477c:	f000 fc36 	bl	404fec <__multadd>
  404780:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404782:	2b00      	cmp	r3, #0
  404784:	4606      	mov	r6, r0
  404786:	dd0a      	ble.n	40479e <_dtoa_r+0xe0e>
  404788:	930a      	str	r3, [sp, #40]	; 0x28
  40478a:	f7ff bbaa 	b.w	403ee2 <_dtoa_r+0x552>
  40478e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404790:	2b02      	cmp	r3, #2
  404792:	dc23      	bgt.n	4047dc <_dtoa_r+0xe4c>
  404794:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404796:	e43b      	b.n	404010 <_dtoa_r+0x680>
  404798:	f04f 0a02 	mov.w	sl, #2
  40479c:	e4ed      	b.n	40417a <_dtoa_r+0x7ea>
  40479e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4047a0:	2b02      	cmp	r3, #2
  4047a2:	dc1b      	bgt.n	4047dc <_dtoa_r+0xe4c>
  4047a4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4047a6:	e7ef      	b.n	404788 <_dtoa_r+0xdf8>
  4047a8:	2500      	movs	r5, #0
  4047aa:	6465      	str	r5, [r4, #68]	; 0x44
  4047ac:	4629      	mov	r1, r5
  4047ae:	4620      	mov	r0, r4
  4047b0:	f000 fbec 	bl	404f8c <_Balloc>
  4047b4:	f04f 33ff 	mov.w	r3, #4294967295
  4047b8:	930a      	str	r3, [sp, #40]	; 0x28
  4047ba:	930f      	str	r3, [sp, #60]	; 0x3c
  4047bc:	2301      	movs	r3, #1
  4047be:	9004      	str	r0, [sp, #16]
  4047c0:	9525      	str	r5, [sp, #148]	; 0x94
  4047c2:	6420      	str	r0, [r4, #64]	; 0x40
  4047c4:	930b      	str	r3, [sp, #44]	; 0x2c
  4047c6:	f7ff b9dd 	b.w	403b84 <_dtoa_r+0x1f4>
  4047ca:	2501      	movs	r5, #1
  4047cc:	f7ff b9a5 	b.w	403b1a <_dtoa_r+0x18a>
  4047d0:	f43f ab69 	beq.w	403ea6 <_dtoa_r+0x516>
  4047d4:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  4047d8:	f7ff bbf9 	b.w	403fce <_dtoa_r+0x63e>
  4047dc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4047de:	930a      	str	r3, [sp, #40]	; 0x28
  4047e0:	e5e5      	b.n	4043ae <_dtoa_r+0xa1e>
  4047e2:	bf00      	nop

004047e4 <__libc_fini_array>:
  4047e4:	b538      	push	{r3, r4, r5, lr}
  4047e6:	4c0a      	ldr	r4, [pc, #40]	; (404810 <__libc_fini_array+0x2c>)
  4047e8:	4d0a      	ldr	r5, [pc, #40]	; (404814 <__libc_fini_array+0x30>)
  4047ea:	1b64      	subs	r4, r4, r5
  4047ec:	10a4      	asrs	r4, r4, #2
  4047ee:	d00a      	beq.n	404806 <__libc_fini_array+0x22>
  4047f0:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  4047f4:	3b01      	subs	r3, #1
  4047f6:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  4047fa:	3c01      	subs	r4, #1
  4047fc:	f855 3904 	ldr.w	r3, [r5], #-4
  404800:	4798      	blx	r3
  404802:	2c00      	cmp	r4, #0
  404804:	d1f9      	bne.n	4047fa <__libc_fini_array+0x16>
  404806:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  40480a:	f002 bc93 	b.w	407134 <_fini>
  40480e:	bf00      	nop
  404810:	00407144 	.word	0x00407144
  404814:	00407140 	.word	0x00407140

00404818 <_localeconv_r>:
  404818:	4a04      	ldr	r2, [pc, #16]	; (40482c <_localeconv_r+0x14>)
  40481a:	4b05      	ldr	r3, [pc, #20]	; (404830 <_localeconv_r+0x18>)
  40481c:	6812      	ldr	r2, [r2, #0]
  40481e:	6b50      	ldr	r0, [r2, #52]	; 0x34
  404820:	2800      	cmp	r0, #0
  404822:	bf08      	it	eq
  404824:	4618      	moveq	r0, r3
  404826:	30f0      	adds	r0, #240	; 0xf0
  404828:	4770      	bx	lr
  40482a:	bf00      	nop
  40482c:	20400020 	.word	0x20400020
  404830:	20400864 	.word	0x20400864

00404834 <__retarget_lock_acquire_recursive>:
  404834:	4770      	bx	lr
  404836:	bf00      	nop

00404838 <__retarget_lock_release_recursive>:
  404838:	4770      	bx	lr
  40483a:	bf00      	nop

0040483c <_malloc_r>:
  40483c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404840:	f101 060b 	add.w	r6, r1, #11
  404844:	2e16      	cmp	r6, #22
  404846:	b083      	sub	sp, #12
  404848:	4605      	mov	r5, r0
  40484a:	f240 809e 	bls.w	40498a <_malloc_r+0x14e>
  40484e:	f036 0607 	bics.w	r6, r6, #7
  404852:	f100 80bd 	bmi.w	4049d0 <_malloc_r+0x194>
  404856:	42b1      	cmp	r1, r6
  404858:	f200 80ba 	bhi.w	4049d0 <_malloc_r+0x194>
  40485c:	f000 fb8a 	bl	404f74 <__malloc_lock>
  404860:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  404864:	f0c0 8293 	bcc.w	404d8e <_malloc_r+0x552>
  404868:	0a73      	lsrs	r3, r6, #9
  40486a:	f000 80b8 	beq.w	4049de <_malloc_r+0x1a2>
  40486e:	2b04      	cmp	r3, #4
  404870:	f200 8179 	bhi.w	404b66 <_malloc_r+0x32a>
  404874:	09b3      	lsrs	r3, r6, #6
  404876:	f103 0039 	add.w	r0, r3, #57	; 0x39
  40487a:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  40487e:	00c3      	lsls	r3, r0, #3
  404880:	4fbf      	ldr	r7, [pc, #764]	; (404b80 <_malloc_r+0x344>)
  404882:	443b      	add	r3, r7
  404884:	f1a3 0108 	sub.w	r1, r3, #8
  404888:	685c      	ldr	r4, [r3, #4]
  40488a:	42a1      	cmp	r1, r4
  40488c:	d106      	bne.n	40489c <_malloc_r+0x60>
  40488e:	e00c      	b.n	4048aa <_malloc_r+0x6e>
  404890:	2a00      	cmp	r2, #0
  404892:	f280 80aa 	bge.w	4049ea <_malloc_r+0x1ae>
  404896:	68e4      	ldr	r4, [r4, #12]
  404898:	42a1      	cmp	r1, r4
  40489a:	d006      	beq.n	4048aa <_malloc_r+0x6e>
  40489c:	6863      	ldr	r3, [r4, #4]
  40489e:	f023 0303 	bic.w	r3, r3, #3
  4048a2:	1b9a      	subs	r2, r3, r6
  4048a4:	2a0f      	cmp	r2, #15
  4048a6:	ddf3      	ble.n	404890 <_malloc_r+0x54>
  4048a8:	4670      	mov	r0, lr
  4048aa:	693c      	ldr	r4, [r7, #16]
  4048ac:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 404b94 <_malloc_r+0x358>
  4048b0:	4574      	cmp	r4, lr
  4048b2:	f000 81ab 	beq.w	404c0c <_malloc_r+0x3d0>
  4048b6:	6863      	ldr	r3, [r4, #4]
  4048b8:	f023 0303 	bic.w	r3, r3, #3
  4048bc:	1b9a      	subs	r2, r3, r6
  4048be:	2a0f      	cmp	r2, #15
  4048c0:	f300 8190 	bgt.w	404be4 <_malloc_r+0x3a8>
  4048c4:	2a00      	cmp	r2, #0
  4048c6:	f8c7 e014 	str.w	lr, [r7, #20]
  4048ca:	f8c7 e010 	str.w	lr, [r7, #16]
  4048ce:	f280 809d 	bge.w	404a0c <_malloc_r+0x1d0>
  4048d2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4048d6:	f080 8161 	bcs.w	404b9c <_malloc_r+0x360>
  4048da:	08db      	lsrs	r3, r3, #3
  4048dc:	f103 0c01 	add.w	ip, r3, #1
  4048e0:	1099      	asrs	r1, r3, #2
  4048e2:	687a      	ldr	r2, [r7, #4]
  4048e4:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  4048e8:	f8c4 8008 	str.w	r8, [r4, #8]
  4048ec:	2301      	movs	r3, #1
  4048ee:	408b      	lsls	r3, r1
  4048f0:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  4048f4:	4313      	orrs	r3, r2
  4048f6:	3908      	subs	r1, #8
  4048f8:	60e1      	str	r1, [r4, #12]
  4048fa:	607b      	str	r3, [r7, #4]
  4048fc:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  404900:	f8c8 400c 	str.w	r4, [r8, #12]
  404904:	1082      	asrs	r2, r0, #2
  404906:	2401      	movs	r4, #1
  404908:	4094      	lsls	r4, r2
  40490a:	429c      	cmp	r4, r3
  40490c:	f200 808b 	bhi.w	404a26 <_malloc_r+0x1ea>
  404910:	421c      	tst	r4, r3
  404912:	d106      	bne.n	404922 <_malloc_r+0xe6>
  404914:	f020 0003 	bic.w	r0, r0, #3
  404918:	0064      	lsls	r4, r4, #1
  40491a:	421c      	tst	r4, r3
  40491c:	f100 0004 	add.w	r0, r0, #4
  404920:	d0fa      	beq.n	404918 <_malloc_r+0xdc>
  404922:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  404926:	46cc      	mov	ip, r9
  404928:	4680      	mov	r8, r0
  40492a:	f8dc 300c 	ldr.w	r3, [ip, #12]
  40492e:	459c      	cmp	ip, r3
  404930:	d107      	bne.n	404942 <_malloc_r+0x106>
  404932:	e16d      	b.n	404c10 <_malloc_r+0x3d4>
  404934:	2a00      	cmp	r2, #0
  404936:	f280 817b 	bge.w	404c30 <_malloc_r+0x3f4>
  40493a:	68db      	ldr	r3, [r3, #12]
  40493c:	459c      	cmp	ip, r3
  40493e:	f000 8167 	beq.w	404c10 <_malloc_r+0x3d4>
  404942:	6859      	ldr	r1, [r3, #4]
  404944:	f021 0103 	bic.w	r1, r1, #3
  404948:	1b8a      	subs	r2, r1, r6
  40494a:	2a0f      	cmp	r2, #15
  40494c:	ddf2      	ble.n	404934 <_malloc_r+0xf8>
  40494e:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  404952:	f8d3 8008 	ldr.w	r8, [r3, #8]
  404956:	9300      	str	r3, [sp, #0]
  404958:	199c      	adds	r4, r3, r6
  40495a:	4628      	mov	r0, r5
  40495c:	f046 0601 	orr.w	r6, r6, #1
  404960:	f042 0501 	orr.w	r5, r2, #1
  404964:	605e      	str	r6, [r3, #4]
  404966:	f8c8 c00c 	str.w	ip, [r8, #12]
  40496a:	f8cc 8008 	str.w	r8, [ip, #8]
  40496e:	617c      	str	r4, [r7, #20]
  404970:	613c      	str	r4, [r7, #16]
  404972:	f8c4 e00c 	str.w	lr, [r4, #12]
  404976:	f8c4 e008 	str.w	lr, [r4, #8]
  40497a:	6065      	str	r5, [r4, #4]
  40497c:	505a      	str	r2, [r3, r1]
  40497e:	f000 faff 	bl	404f80 <__malloc_unlock>
  404982:	9b00      	ldr	r3, [sp, #0]
  404984:	f103 0408 	add.w	r4, r3, #8
  404988:	e01e      	b.n	4049c8 <_malloc_r+0x18c>
  40498a:	2910      	cmp	r1, #16
  40498c:	d820      	bhi.n	4049d0 <_malloc_r+0x194>
  40498e:	f000 faf1 	bl	404f74 <__malloc_lock>
  404992:	2610      	movs	r6, #16
  404994:	2318      	movs	r3, #24
  404996:	2002      	movs	r0, #2
  404998:	4f79      	ldr	r7, [pc, #484]	; (404b80 <_malloc_r+0x344>)
  40499a:	443b      	add	r3, r7
  40499c:	f1a3 0208 	sub.w	r2, r3, #8
  4049a0:	685c      	ldr	r4, [r3, #4]
  4049a2:	4294      	cmp	r4, r2
  4049a4:	f000 813d 	beq.w	404c22 <_malloc_r+0x3e6>
  4049a8:	6863      	ldr	r3, [r4, #4]
  4049aa:	68e1      	ldr	r1, [r4, #12]
  4049ac:	68a6      	ldr	r6, [r4, #8]
  4049ae:	f023 0303 	bic.w	r3, r3, #3
  4049b2:	4423      	add	r3, r4
  4049b4:	4628      	mov	r0, r5
  4049b6:	685a      	ldr	r2, [r3, #4]
  4049b8:	60f1      	str	r1, [r6, #12]
  4049ba:	f042 0201 	orr.w	r2, r2, #1
  4049be:	608e      	str	r6, [r1, #8]
  4049c0:	605a      	str	r2, [r3, #4]
  4049c2:	f000 fadd 	bl	404f80 <__malloc_unlock>
  4049c6:	3408      	adds	r4, #8
  4049c8:	4620      	mov	r0, r4
  4049ca:	b003      	add	sp, #12
  4049cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4049d0:	2400      	movs	r4, #0
  4049d2:	230c      	movs	r3, #12
  4049d4:	4620      	mov	r0, r4
  4049d6:	602b      	str	r3, [r5, #0]
  4049d8:	b003      	add	sp, #12
  4049da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4049de:	2040      	movs	r0, #64	; 0x40
  4049e0:	f44f 7300 	mov.w	r3, #512	; 0x200
  4049e4:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  4049e8:	e74a      	b.n	404880 <_malloc_r+0x44>
  4049ea:	4423      	add	r3, r4
  4049ec:	68e1      	ldr	r1, [r4, #12]
  4049ee:	685a      	ldr	r2, [r3, #4]
  4049f0:	68a6      	ldr	r6, [r4, #8]
  4049f2:	f042 0201 	orr.w	r2, r2, #1
  4049f6:	60f1      	str	r1, [r6, #12]
  4049f8:	4628      	mov	r0, r5
  4049fa:	608e      	str	r6, [r1, #8]
  4049fc:	605a      	str	r2, [r3, #4]
  4049fe:	f000 fabf 	bl	404f80 <__malloc_unlock>
  404a02:	3408      	adds	r4, #8
  404a04:	4620      	mov	r0, r4
  404a06:	b003      	add	sp, #12
  404a08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404a0c:	4423      	add	r3, r4
  404a0e:	4628      	mov	r0, r5
  404a10:	685a      	ldr	r2, [r3, #4]
  404a12:	f042 0201 	orr.w	r2, r2, #1
  404a16:	605a      	str	r2, [r3, #4]
  404a18:	f000 fab2 	bl	404f80 <__malloc_unlock>
  404a1c:	3408      	adds	r4, #8
  404a1e:	4620      	mov	r0, r4
  404a20:	b003      	add	sp, #12
  404a22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404a26:	68bc      	ldr	r4, [r7, #8]
  404a28:	6863      	ldr	r3, [r4, #4]
  404a2a:	f023 0803 	bic.w	r8, r3, #3
  404a2e:	45b0      	cmp	r8, r6
  404a30:	d304      	bcc.n	404a3c <_malloc_r+0x200>
  404a32:	eba8 0306 	sub.w	r3, r8, r6
  404a36:	2b0f      	cmp	r3, #15
  404a38:	f300 8085 	bgt.w	404b46 <_malloc_r+0x30a>
  404a3c:	f8df 9158 	ldr.w	r9, [pc, #344]	; 404b98 <_malloc_r+0x35c>
  404a40:	4b50      	ldr	r3, [pc, #320]	; (404b84 <_malloc_r+0x348>)
  404a42:	f8d9 2000 	ldr.w	r2, [r9]
  404a46:	681b      	ldr	r3, [r3, #0]
  404a48:	3201      	adds	r2, #1
  404a4a:	4433      	add	r3, r6
  404a4c:	eb04 0a08 	add.w	sl, r4, r8
  404a50:	f000 8155 	beq.w	404cfe <_malloc_r+0x4c2>
  404a54:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  404a58:	330f      	adds	r3, #15
  404a5a:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  404a5e:	f02b 0b0f 	bic.w	fp, fp, #15
  404a62:	4659      	mov	r1, fp
  404a64:	4628      	mov	r0, r5
  404a66:	f000 fd8b 	bl	405580 <_sbrk_r>
  404a6a:	1c41      	adds	r1, r0, #1
  404a6c:	4602      	mov	r2, r0
  404a6e:	f000 80fc 	beq.w	404c6a <_malloc_r+0x42e>
  404a72:	4582      	cmp	sl, r0
  404a74:	f200 80f7 	bhi.w	404c66 <_malloc_r+0x42a>
  404a78:	4b43      	ldr	r3, [pc, #268]	; (404b88 <_malloc_r+0x34c>)
  404a7a:	6819      	ldr	r1, [r3, #0]
  404a7c:	4459      	add	r1, fp
  404a7e:	6019      	str	r1, [r3, #0]
  404a80:	f000 814d 	beq.w	404d1e <_malloc_r+0x4e2>
  404a84:	f8d9 0000 	ldr.w	r0, [r9]
  404a88:	3001      	adds	r0, #1
  404a8a:	bf1b      	ittet	ne
  404a8c:	eba2 0a0a 	subne.w	sl, r2, sl
  404a90:	4451      	addne	r1, sl
  404a92:	f8c9 2000 	streq.w	r2, [r9]
  404a96:	6019      	strne	r1, [r3, #0]
  404a98:	f012 0107 	ands.w	r1, r2, #7
  404a9c:	f000 8115 	beq.w	404cca <_malloc_r+0x48e>
  404aa0:	f1c1 0008 	rsb	r0, r1, #8
  404aa4:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  404aa8:	4402      	add	r2, r0
  404aaa:	3108      	adds	r1, #8
  404aac:	eb02 090b 	add.w	r9, r2, fp
  404ab0:	f3c9 090b 	ubfx	r9, r9, #0, #12
  404ab4:	eba1 0909 	sub.w	r9, r1, r9
  404ab8:	4649      	mov	r1, r9
  404aba:	4628      	mov	r0, r5
  404abc:	9301      	str	r3, [sp, #4]
  404abe:	9200      	str	r2, [sp, #0]
  404ac0:	f000 fd5e 	bl	405580 <_sbrk_r>
  404ac4:	1c43      	adds	r3, r0, #1
  404ac6:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404aca:	f000 8143 	beq.w	404d54 <_malloc_r+0x518>
  404ace:	1a80      	subs	r0, r0, r2
  404ad0:	4448      	add	r0, r9
  404ad2:	f040 0001 	orr.w	r0, r0, #1
  404ad6:	6819      	ldr	r1, [r3, #0]
  404ad8:	60ba      	str	r2, [r7, #8]
  404ada:	4449      	add	r1, r9
  404adc:	42bc      	cmp	r4, r7
  404ade:	6050      	str	r0, [r2, #4]
  404ae0:	6019      	str	r1, [r3, #0]
  404ae2:	d017      	beq.n	404b14 <_malloc_r+0x2d8>
  404ae4:	f1b8 0f0f 	cmp.w	r8, #15
  404ae8:	f240 80fb 	bls.w	404ce2 <_malloc_r+0x4a6>
  404aec:	6860      	ldr	r0, [r4, #4]
  404aee:	f1a8 020c 	sub.w	r2, r8, #12
  404af2:	f022 0207 	bic.w	r2, r2, #7
  404af6:	eb04 0e02 	add.w	lr, r4, r2
  404afa:	f000 0001 	and.w	r0, r0, #1
  404afe:	f04f 0c05 	mov.w	ip, #5
  404b02:	4310      	orrs	r0, r2
  404b04:	2a0f      	cmp	r2, #15
  404b06:	6060      	str	r0, [r4, #4]
  404b08:	f8ce c004 	str.w	ip, [lr, #4]
  404b0c:	f8ce c008 	str.w	ip, [lr, #8]
  404b10:	f200 8117 	bhi.w	404d42 <_malloc_r+0x506>
  404b14:	4b1d      	ldr	r3, [pc, #116]	; (404b8c <_malloc_r+0x350>)
  404b16:	68bc      	ldr	r4, [r7, #8]
  404b18:	681a      	ldr	r2, [r3, #0]
  404b1a:	4291      	cmp	r1, r2
  404b1c:	bf88      	it	hi
  404b1e:	6019      	strhi	r1, [r3, #0]
  404b20:	4b1b      	ldr	r3, [pc, #108]	; (404b90 <_malloc_r+0x354>)
  404b22:	681a      	ldr	r2, [r3, #0]
  404b24:	4291      	cmp	r1, r2
  404b26:	6862      	ldr	r2, [r4, #4]
  404b28:	bf88      	it	hi
  404b2a:	6019      	strhi	r1, [r3, #0]
  404b2c:	f022 0203 	bic.w	r2, r2, #3
  404b30:	4296      	cmp	r6, r2
  404b32:	eba2 0306 	sub.w	r3, r2, r6
  404b36:	d801      	bhi.n	404b3c <_malloc_r+0x300>
  404b38:	2b0f      	cmp	r3, #15
  404b3a:	dc04      	bgt.n	404b46 <_malloc_r+0x30a>
  404b3c:	4628      	mov	r0, r5
  404b3e:	f000 fa1f 	bl	404f80 <__malloc_unlock>
  404b42:	2400      	movs	r4, #0
  404b44:	e740      	b.n	4049c8 <_malloc_r+0x18c>
  404b46:	19a2      	adds	r2, r4, r6
  404b48:	f043 0301 	orr.w	r3, r3, #1
  404b4c:	f046 0601 	orr.w	r6, r6, #1
  404b50:	6066      	str	r6, [r4, #4]
  404b52:	4628      	mov	r0, r5
  404b54:	60ba      	str	r2, [r7, #8]
  404b56:	6053      	str	r3, [r2, #4]
  404b58:	f000 fa12 	bl	404f80 <__malloc_unlock>
  404b5c:	3408      	adds	r4, #8
  404b5e:	4620      	mov	r0, r4
  404b60:	b003      	add	sp, #12
  404b62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404b66:	2b14      	cmp	r3, #20
  404b68:	d971      	bls.n	404c4e <_malloc_r+0x412>
  404b6a:	2b54      	cmp	r3, #84	; 0x54
  404b6c:	f200 80a3 	bhi.w	404cb6 <_malloc_r+0x47a>
  404b70:	0b33      	lsrs	r3, r6, #12
  404b72:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  404b76:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  404b7a:	00c3      	lsls	r3, r0, #3
  404b7c:	e680      	b.n	404880 <_malloc_r+0x44>
  404b7e:	bf00      	nop
  404b80:	20400454 	.word	0x20400454
  404b84:	20400cb0 	.word	0x20400cb0
  404b88:	20400c80 	.word	0x20400c80
  404b8c:	20400ca8 	.word	0x20400ca8
  404b90:	20400cac 	.word	0x20400cac
  404b94:	2040045c 	.word	0x2040045c
  404b98:	2040085c 	.word	0x2040085c
  404b9c:	0a5a      	lsrs	r2, r3, #9
  404b9e:	2a04      	cmp	r2, #4
  404ba0:	d95b      	bls.n	404c5a <_malloc_r+0x41e>
  404ba2:	2a14      	cmp	r2, #20
  404ba4:	f200 80ae 	bhi.w	404d04 <_malloc_r+0x4c8>
  404ba8:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  404bac:	00c9      	lsls	r1, r1, #3
  404bae:	325b      	adds	r2, #91	; 0x5b
  404bb0:	eb07 0c01 	add.w	ip, r7, r1
  404bb4:	5879      	ldr	r1, [r7, r1]
  404bb6:	f1ac 0c08 	sub.w	ip, ip, #8
  404bba:	458c      	cmp	ip, r1
  404bbc:	f000 8088 	beq.w	404cd0 <_malloc_r+0x494>
  404bc0:	684a      	ldr	r2, [r1, #4]
  404bc2:	f022 0203 	bic.w	r2, r2, #3
  404bc6:	4293      	cmp	r3, r2
  404bc8:	d273      	bcs.n	404cb2 <_malloc_r+0x476>
  404bca:	6889      	ldr	r1, [r1, #8]
  404bcc:	458c      	cmp	ip, r1
  404bce:	d1f7      	bne.n	404bc0 <_malloc_r+0x384>
  404bd0:	f8dc 200c 	ldr.w	r2, [ip, #12]
  404bd4:	687b      	ldr	r3, [r7, #4]
  404bd6:	60e2      	str	r2, [r4, #12]
  404bd8:	f8c4 c008 	str.w	ip, [r4, #8]
  404bdc:	6094      	str	r4, [r2, #8]
  404bde:	f8cc 400c 	str.w	r4, [ip, #12]
  404be2:	e68f      	b.n	404904 <_malloc_r+0xc8>
  404be4:	19a1      	adds	r1, r4, r6
  404be6:	f046 0c01 	orr.w	ip, r6, #1
  404bea:	f042 0601 	orr.w	r6, r2, #1
  404bee:	f8c4 c004 	str.w	ip, [r4, #4]
  404bf2:	4628      	mov	r0, r5
  404bf4:	6179      	str	r1, [r7, #20]
  404bf6:	6139      	str	r1, [r7, #16]
  404bf8:	f8c1 e00c 	str.w	lr, [r1, #12]
  404bfc:	f8c1 e008 	str.w	lr, [r1, #8]
  404c00:	604e      	str	r6, [r1, #4]
  404c02:	50e2      	str	r2, [r4, r3]
  404c04:	f000 f9bc 	bl	404f80 <__malloc_unlock>
  404c08:	3408      	adds	r4, #8
  404c0a:	e6dd      	b.n	4049c8 <_malloc_r+0x18c>
  404c0c:	687b      	ldr	r3, [r7, #4]
  404c0e:	e679      	b.n	404904 <_malloc_r+0xc8>
  404c10:	f108 0801 	add.w	r8, r8, #1
  404c14:	f018 0f03 	tst.w	r8, #3
  404c18:	f10c 0c08 	add.w	ip, ip, #8
  404c1c:	f47f ae85 	bne.w	40492a <_malloc_r+0xee>
  404c20:	e02d      	b.n	404c7e <_malloc_r+0x442>
  404c22:	68dc      	ldr	r4, [r3, #12]
  404c24:	42a3      	cmp	r3, r4
  404c26:	bf08      	it	eq
  404c28:	3002      	addeq	r0, #2
  404c2a:	f43f ae3e 	beq.w	4048aa <_malloc_r+0x6e>
  404c2e:	e6bb      	b.n	4049a8 <_malloc_r+0x16c>
  404c30:	4419      	add	r1, r3
  404c32:	461c      	mov	r4, r3
  404c34:	684a      	ldr	r2, [r1, #4]
  404c36:	68db      	ldr	r3, [r3, #12]
  404c38:	f854 6f08 	ldr.w	r6, [r4, #8]!
  404c3c:	f042 0201 	orr.w	r2, r2, #1
  404c40:	604a      	str	r2, [r1, #4]
  404c42:	4628      	mov	r0, r5
  404c44:	60f3      	str	r3, [r6, #12]
  404c46:	609e      	str	r6, [r3, #8]
  404c48:	f000 f99a 	bl	404f80 <__malloc_unlock>
  404c4c:	e6bc      	b.n	4049c8 <_malloc_r+0x18c>
  404c4e:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  404c52:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  404c56:	00c3      	lsls	r3, r0, #3
  404c58:	e612      	b.n	404880 <_malloc_r+0x44>
  404c5a:	099a      	lsrs	r2, r3, #6
  404c5c:	f102 0139 	add.w	r1, r2, #57	; 0x39
  404c60:	00c9      	lsls	r1, r1, #3
  404c62:	3238      	adds	r2, #56	; 0x38
  404c64:	e7a4      	b.n	404bb0 <_malloc_r+0x374>
  404c66:	42bc      	cmp	r4, r7
  404c68:	d054      	beq.n	404d14 <_malloc_r+0x4d8>
  404c6a:	68bc      	ldr	r4, [r7, #8]
  404c6c:	6862      	ldr	r2, [r4, #4]
  404c6e:	f022 0203 	bic.w	r2, r2, #3
  404c72:	e75d      	b.n	404b30 <_malloc_r+0x2f4>
  404c74:	f859 3908 	ldr.w	r3, [r9], #-8
  404c78:	4599      	cmp	r9, r3
  404c7a:	f040 8086 	bne.w	404d8a <_malloc_r+0x54e>
  404c7e:	f010 0f03 	tst.w	r0, #3
  404c82:	f100 30ff 	add.w	r0, r0, #4294967295
  404c86:	d1f5      	bne.n	404c74 <_malloc_r+0x438>
  404c88:	687b      	ldr	r3, [r7, #4]
  404c8a:	ea23 0304 	bic.w	r3, r3, r4
  404c8e:	607b      	str	r3, [r7, #4]
  404c90:	0064      	lsls	r4, r4, #1
  404c92:	429c      	cmp	r4, r3
  404c94:	f63f aec7 	bhi.w	404a26 <_malloc_r+0x1ea>
  404c98:	2c00      	cmp	r4, #0
  404c9a:	f43f aec4 	beq.w	404a26 <_malloc_r+0x1ea>
  404c9e:	421c      	tst	r4, r3
  404ca0:	4640      	mov	r0, r8
  404ca2:	f47f ae3e 	bne.w	404922 <_malloc_r+0xe6>
  404ca6:	0064      	lsls	r4, r4, #1
  404ca8:	421c      	tst	r4, r3
  404caa:	f100 0004 	add.w	r0, r0, #4
  404cae:	d0fa      	beq.n	404ca6 <_malloc_r+0x46a>
  404cb0:	e637      	b.n	404922 <_malloc_r+0xe6>
  404cb2:	468c      	mov	ip, r1
  404cb4:	e78c      	b.n	404bd0 <_malloc_r+0x394>
  404cb6:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  404cba:	d815      	bhi.n	404ce8 <_malloc_r+0x4ac>
  404cbc:	0bf3      	lsrs	r3, r6, #15
  404cbe:	f103 0078 	add.w	r0, r3, #120	; 0x78
  404cc2:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  404cc6:	00c3      	lsls	r3, r0, #3
  404cc8:	e5da      	b.n	404880 <_malloc_r+0x44>
  404cca:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  404cce:	e6ed      	b.n	404aac <_malloc_r+0x270>
  404cd0:	687b      	ldr	r3, [r7, #4]
  404cd2:	1092      	asrs	r2, r2, #2
  404cd4:	2101      	movs	r1, #1
  404cd6:	fa01 f202 	lsl.w	r2, r1, r2
  404cda:	4313      	orrs	r3, r2
  404cdc:	607b      	str	r3, [r7, #4]
  404cde:	4662      	mov	r2, ip
  404ce0:	e779      	b.n	404bd6 <_malloc_r+0x39a>
  404ce2:	2301      	movs	r3, #1
  404ce4:	6053      	str	r3, [r2, #4]
  404ce6:	e729      	b.n	404b3c <_malloc_r+0x300>
  404ce8:	f240 5254 	movw	r2, #1364	; 0x554
  404cec:	4293      	cmp	r3, r2
  404cee:	d822      	bhi.n	404d36 <_malloc_r+0x4fa>
  404cf0:	0cb3      	lsrs	r3, r6, #18
  404cf2:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  404cf6:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  404cfa:	00c3      	lsls	r3, r0, #3
  404cfc:	e5c0      	b.n	404880 <_malloc_r+0x44>
  404cfe:	f103 0b10 	add.w	fp, r3, #16
  404d02:	e6ae      	b.n	404a62 <_malloc_r+0x226>
  404d04:	2a54      	cmp	r2, #84	; 0x54
  404d06:	d829      	bhi.n	404d5c <_malloc_r+0x520>
  404d08:	0b1a      	lsrs	r2, r3, #12
  404d0a:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  404d0e:	00c9      	lsls	r1, r1, #3
  404d10:	326e      	adds	r2, #110	; 0x6e
  404d12:	e74d      	b.n	404bb0 <_malloc_r+0x374>
  404d14:	4b20      	ldr	r3, [pc, #128]	; (404d98 <_malloc_r+0x55c>)
  404d16:	6819      	ldr	r1, [r3, #0]
  404d18:	4459      	add	r1, fp
  404d1a:	6019      	str	r1, [r3, #0]
  404d1c:	e6b2      	b.n	404a84 <_malloc_r+0x248>
  404d1e:	f3ca 000b 	ubfx	r0, sl, #0, #12
  404d22:	2800      	cmp	r0, #0
  404d24:	f47f aeae 	bne.w	404a84 <_malloc_r+0x248>
  404d28:	eb08 030b 	add.w	r3, r8, fp
  404d2c:	68ba      	ldr	r2, [r7, #8]
  404d2e:	f043 0301 	orr.w	r3, r3, #1
  404d32:	6053      	str	r3, [r2, #4]
  404d34:	e6ee      	b.n	404b14 <_malloc_r+0x2d8>
  404d36:	207f      	movs	r0, #127	; 0x7f
  404d38:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  404d3c:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  404d40:	e59e      	b.n	404880 <_malloc_r+0x44>
  404d42:	f104 0108 	add.w	r1, r4, #8
  404d46:	4628      	mov	r0, r5
  404d48:	9300      	str	r3, [sp, #0]
  404d4a:	f000 fe07 	bl	40595c <_free_r>
  404d4e:	9b00      	ldr	r3, [sp, #0]
  404d50:	6819      	ldr	r1, [r3, #0]
  404d52:	e6df      	b.n	404b14 <_malloc_r+0x2d8>
  404d54:	2001      	movs	r0, #1
  404d56:	f04f 0900 	mov.w	r9, #0
  404d5a:	e6bc      	b.n	404ad6 <_malloc_r+0x29a>
  404d5c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  404d60:	d805      	bhi.n	404d6e <_malloc_r+0x532>
  404d62:	0bda      	lsrs	r2, r3, #15
  404d64:	f102 0178 	add.w	r1, r2, #120	; 0x78
  404d68:	00c9      	lsls	r1, r1, #3
  404d6a:	3277      	adds	r2, #119	; 0x77
  404d6c:	e720      	b.n	404bb0 <_malloc_r+0x374>
  404d6e:	f240 5154 	movw	r1, #1364	; 0x554
  404d72:	428a      	cmp	r2, r1
  404d74:	d805      	bhi.n	404d82 <_malloc_r+0x546>
  404d76:	0c9a      	lsrs	r2, r3, #18
  404d78:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  404d7c:	00c9      	lsls	r1, r1, #3
  404d7e:	327c      	adds	r2, #124	; 0x7c
  404d80:	e716      	b.n	404bb0 <_malloc_r+0x374>
  404d82:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  404d86:	227e      	movs	r2, #126	; 0x7e
  404d88:	e712      	b.n	404bb0 <_malloc_r+0x374>
  404d8a:	687b      	ldr	r3, [r7, #4]
  404d8c:	e780      	b.n	404c90 <_malloc_r+0x454>
  404d8e:	08f0      	lsrs	r0, r6, #3
  404d90:	f106 0308 	add.w	r3, r6, #8
  404d94:	e600      	b.n	404998 <_malloc_r+0x15c>
  404d96:	bf00      	nop
  404d98:	20400c80 	.word	0x20400c80
  404d9c:	00000000 	.word	0x00000000

00404da0 <memchr>:
  404da0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404da4:	2a10      	cmp	r2, #16
  404da6:	db2b      	blt.n	404e00 <memchr+0x60>
  404da8:	f010 0f07 	tst.w	r0, #7
  404dac:	d008      	beq.n	404dc0 <memchr+0x20>
  404dae:	f810 3b01 	ldrb.w	r3, [r0], #1
  404db2:	3a01      	subs	r2, #1
  404db4:	428b      	cmp	r3, r1
  404db6:	d02d      	beq.n	404e14 <memchr+0x74>
  404db8:	f010 0f07 	tst.w	r0, #7
  404dbc:	b342      	cbz	r2, 404e10 <memchr+0x70>
  404dbe:	d1f6      	bne.n	404dae <memchr+0xe>
  404dc0:	b4f0      	push	{r4, r5, r6, r7}
  404dc2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  404dc6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  404dca:	f022 0407 	bic.w	r4, r2, #7
  404dce:	f07f 0700 	mvns.w	r7, #0
  404dd2:	2300      	movs	r3, #0
  404dd4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  404dd8:	3c08      	subs	r4, #8
  404dda:	ea85 0501 	eor.w	r5, r5, r1
  404dde:	ea86 0601 	eor.w	r6, r6, r1
  404de2:	fa85 f547 	uadd8	r5, r5, r7
  404de6:	faa3 f587 	sel	r5, r3, r7
  404dea:	fa86 f647 	uadd8	r6, r6, r7
  404dee:	faa5 f687 	sel	r6, r5, r7
  404df2:	b98e      	cbnz	r6, 404e18 <memchr+0x78>
  404df4:	d1ee      	bne.n	404dd4 <memchr+0x34>
  404df6:	bcf0      	pop	{r4, r5, r6, r7}
  404df8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404dfc:	f002 0207 	and.w	r2, r2, #7
  404e00:	b132      	cbz	r2, 404e10 <memchr+0x70>
  404e02:	f810 3b01 	ldrb.w	r3, [r0], #1
  404e06:	3a01      	subs	r2, #1
  404e08:	ea83 0301 	eor.w	r3, r3, r1
  404e0c:	b113      	cbz	r3, 404e14 <memchr+0x74>
  404e0e:	d1f8      	bne.n	404e02 <memchr+0x62>
  404e10:	2000      	movs	r0, #0
  404e12:	4770      	bx	lr
  404e14:	3801      	subs	r0, #1
  404e16:	4770      	bx	lr
  404e18:	2d00      	cmp	r5, #0
  404e1a:	bf06      	itte	eq
  404e1c:	4635      	moveq	r5, r6
  404e1e:	3803      	subeq	r0, #3
  404e20:	3807      	subne	r0, #7
  404e22:	f015 0f01 	tst.w	r5, #1
  404e26:	d107      	bne.n	404e38 <memchr+0x98>
  404e28:	3001      	adds	r0, #1
  404e2a:	f415 7f80 	tst.w	r5, #256	; 0x100
  404e2e:	bf02      	ittt	eq
  404e30:	3001      	addeq	r0, #1
  404e32:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  404e36:	3001      	addeq	r0, #1
  404e38:	bcf0      	pop	{r4, r5, r6, r7}
  404e3a:	3801      	subs	r0, #1
  404e3c:	4770      	bx	lr
  404e3e:	bf00      	nop

00404e40 <memcpy>:
  404e40:	4684      	mov	ip, r0
  404e42:	ea41 0300 	orr.w	r3, r1, r0
  404e46:	f013 0303 	ands.w	r3, r3, #3
  404e4a:	d16d      	bne.n	404f28 <memcpy+0xe8>
  404e4c:	3a40      	subs	r2, #64	; 0x40
  404e4e:	d341      	bcc.n	404ed4 <memcpy+0x94>
  404e50:	f851 3b04 	ldr.w	r3, [r1], #4
  404e54:	f840 3b04 	str.w	r3, [r0], #4
  404e58:	f851 3b04 	ldr.w	r3, [r1], #4
  404e5c:	f840 3b04 	str.w	r3, [r0], #4
  404e60:	f851 3b04 	ldr.w	r3, [r1], #4
  404e64:	f840 3b04 	str.w	r3, [r0], #4
  404e68:	f851 3b04 	ldr.w	r3, [r1], #4
  404e6c:	f840 3b04 	str.w	r3, [r0], #4
  404e70:	f851 3b04 	ldr.w	r3, [r1], #4
  404e74:	f840 3b04 	str.w	r3, [r0], #4
  404e78:	f851 3b04 	ldr.w	r3, [r1], #4
  404e7c:	f840 3b04 	str.w	r3, [r0], #4
  404e80:	f851 3b04 	ldr.w	r3, [r1], #4
  404e84:	f840 3b04 	str.w	r3, [r0], #4
  404e88:	f851 3b04 	ldr.w	r3, [r1], #4
  404e8c:	f840 3b04 	str.w	r3, [r0], #4
  404e90:	f851 3b04 	ldr.w	r3, [r1], #4
  404e94:	f840 3b04 	str.w	r3, [r0], #4
  404e98:	f851 3b04 	ldr.w	r3, [r1], #4
  404e9c:	f840 3b04 	str.w	r3, [r0], #4
  404ea0:	f851 3b04 	ldr.w	r3, [r1], #4
  404ea4:	f840 3b04 	str.w	r3, [r0], #4
  404ea8:	f851 3b04 	ldr.w	r3, [r1], #4
  404eac:	f840 3b04 	str.w	r3, [r0], #4
  404eb0:	f851 3b04 	ldr.w	r3, [r1], #4
  404eb4:	f840 3b04 	str.w	r3, [r0], #4
  404eb8:	f851 3b04 	ldr.w	r3, [r1], #4
  404ebc:	f840 3b04 	str.w	r3, [r0], #4
  404ec0:	f851 3b04 	ldr.w	r3, [r1], #4
  404ec4:	f840 3b04 	str.w	r3, [r0], #4
  404ec8:	f851 3b04 	ldr.w	r3, [r1], #4
  404ecc:	f840 3b04 	str.w	r3, [r0], #4
  404ed0:	3a40      	subs	r2, #64	; 0x40
  404ed2:	d2bd      	bcs.n	404e50 <memcpy+0x10>
  404ed4:	3230      	adds	r2, #48	; 0x30
  404ed6:	d311      	bcc.n	404efc <memcpy+0xbc>
  404ed8:	f851 3b04 	ldr.w	r3, [r1], #4
  404edc:	f840 3b04 	str.w	r3, [r0], #4
  404ee0:	f851 3b04 	ldr.w	r3, [r1], #4
  404ee4:	f840 3b04 	str.w	r3, [r0], #4
  404ee8:	f851 3b04 	ldr.w	r3, [r1], #4
  404eec:	f840 3b04 	str.w	r3, [r0], #4
  404ef0:	f851 3b04 	ldr.w	r3, [r1], #4
  404ef4:	f840 3b04 	str.w	r3, [r0], #4
  404ef8:	3a10      	subs	r2, #16
  404efa:	d2ed      	bcs.n	404ed8 <memcpy+0x98>
  404efc:	320c      	adds	r2, #12
  404efe:	d305      	bcc.n	404f0c <memcpy+0xcc>
  404f00:	f851 3b04 	ldr.w	r3, [r1], #4
  404f04:	f840 3b04 	str.w	r3, [r0], #4
  404f08:	3a04      	subs	r2, #4
  404f0a:	d2f9      	bcs.n	404f00 <memcpy+0xc0>
  404f0c:	3204      	adds	r2, #4
  404f0e:	d008      	beq.n	404f22 <memcpy+0xe2>
  404f10:	07d2      	lsls	r2, r2, #31
  404f12:	bf1c      	itt	ne
  404f14:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404f18:	f800 3b01 	strbne.w	r3, [r0], #1
  404f1c:	d301      	bcc.n	404f22 <memcpy+0xe2>
  404f1e:	880b      	ldrh	r3, [r1, #0]
  404f20:	8003      	strh	r3, [r0, #0]
  404f22:	4660      	mov	r0, ip
  404f24:	4770      	bx	lr
  404f26:	bf00      	nop
  404f28:	2a08      	cmp	r2, #8
  404f2a:	d313      	bcc.n	404f54 <memcpy+0x114>
  404f2c:	078b      	lsls	r3, r1, #30
  404f2e:	d08d      	beq.n	404e4c <memcpy+0xc>
  404f30:	f010 0303 	ands.w	r3, r0, #3
  404f34:	d08a      	beq.n	404e4c <memcpy+0xc>
  404f36:	f1c3 0304 	rsb	r3, r3, #4
  404f3a:	1ad2      	subs	r2, r2, r3
  404f3c:	07db      	lsls	r3, r3, #31
  404f3e:	bf1c      	itt	ne
  404f40:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404f44:	f800 3b01 	strbne.w	r3, [r0], #1
  404f48:	d380      	bcc.n	404e4c <memcpy+0xc>
  404f4a:	f831 3b02 	ldrh.w	r3, [r1], #2
  404f4e:	f820 3b02 	strh.w	r3, [r0], #2
  404f52:	e77b      	b.n	404e4c <memcpy+0xc>
  404f54:	3a04      	subs	r2, #4
  404f56:	d3d9      	bcc.n	404f0c <memcpy+0xcc>
  404f58:	3a01      	subs	r2, #1
  404f5a:	f811 3b01 	ldrb.w	r3, [r1], #1
  404f5e:	f800 3b01 	strb.w	r3, [r0], #1
  404f62:	d2f9      	bcs.n	404f58 <memcpy+0x118>
  404f64:	780b      	ldrb	r3, [r1, #0]
  404f66:	7003      	strb	r3, [r0, #0]
  404f68:	784b      	ldrb	r3, [r1, #1]
  404f6a:	7043      	strb	r3, [r0, #1]
  404f6c:	788b      	ldrb	r3, [r1, #2]
  404f6e:	7083      	strb	r3, [r0, #2]
  404f70:	4660      	mov	r0, ip
  404f72:	4770      	bx	lr

00404f74 <__malloc_lock>:
  404f74:	4801      	ldr	r0, [pc, #4]	; (404f7c <__malloc_lock+0x8>)
  404f76:	f7ff bc5d 	b.w	404834 <__retarget_lock_acquire_recursive>
  404f7a:	bf00      	nop
  404f7c:	20400cc4 	.word	0x20400cc4

00404f80 <__malloc_unlock>:
  404f80:	4801      	ldr	r0, [pc, #4]	; (404f88 <__malloc_unlock+0x8>)
  404f82:	f7ff bc59 	b.w	404838 <__retarget_lock_release_recursive>
  404f86:	bf00      	nop
  404f88:	20400cc4 	.word	0x20400cc4

00404f8c <_Balloc>:
  404f8c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  404f8e:	b570      	push	{r4, r5, r6, lr}
  404f90:	4605      	mov	r5, r0
  404f92:	460c      	mov	r4, r1
  404f94:	b14b      	cbz	r3, 404faa <_Balloc+0x1e>
  404f96:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  404f9a:	b180      	cbz	r0, 404fbe <_Balloc+0x32>
  404f9c:	6802      	ldr	r2, [r0, #0]
  404f9e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  404fa2:	2300      	movs	r3, #0
  404fa4:	6103      	str	r3, [r0, #16]
  404fa6:	60c3      	str	r3, [r0, #12]
  404fa8:	bd70      	pop	{r4, r5, r6, pc}
  404faa:	2221      	movs	r2, #33	; 0x21
  404fac:	2104      	movs	r1, #4
  404fae:	f000 fc55 	bl	40585c <_calloc_r>
  404fb2:	64e8      	str	r0, [r5, #76]	; 0x4c
  404fb4:	4603      	mov	r3, r0
  404fb6:	2800      	cmp	r0, #0
  404fb8:	d1ed      	bne.n	404f96 <_Balloc+0xa>
  404fba:	2000      	movs	r0, #0
  404fbc:	bd70      	pop	{r4, r5, r6, pc}
  404fbe:	2101      	movs	r1, #1
  404fc0:	fa01 f604 	lsl.w	r6, r1, r4
  404fc4:	1d72      	adds	r2, r6, #5
  404fc6:	4628      	mov	r0, r5
  404fc8:	0092      	lsls	r2, r2, #2
  404fca:	f000 fc47 	bl	40585c <_calloc_r>
  404fce:	2800      	cmp	r0, #0
  404fd0:	d0f3      	beq.n	404fba <_Balloc+0x2e>
  404fd2:	6044      	str	r4, [r0, #4]
  404fd4:	6086      	str	r6, [r0, #8]
  404fd6:	e7e4      	b.n	404fa2 <_Balloc+0x16>

00404fd8 <_Bfree>:
  404fd8:	b131      	cbz	r1, 404fe8 <_Bfree+0x10>
  404fda:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  404fdc:	684a      	ldr	r2, [r1, #4]
  404fde:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  404fe2:	6008      	str	r0, [r1, #0]
  404fe4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  404fe8:	4770      	bx	lr
  404fea:	bf00      	nop

00404fec <__multadd>:
  404fec:	b5f0      	push	{r4, r5, r6, r7, lr}
  404fee:	690c      	ldr	r4, [r1, #16]
  404ff0:	b083      	sub	sp, #12
  404ff2:	460d      	mov	r5, r1
  404ff4:	4606      	mov	r6, r0
  404ff6:	f101 0e14 	add.w	lr, r1, #20
  404ffa:	2700      	movs	r7, #0
  404ffc:	f8de 0000 	ldr.w	r0, [lr]
  405000:	b281      	uxth	r1, r0
  405002:	fb02 3301 	mla	r3, r2, r1, r3
  405006:	0c01      	lsrs	r1, r0, #16
  405008:	0c18      	lsrs	r0, r3, #16
  40500a:	fb02 0101 	mla	r1, r2, r1, r0
  40500e:	b29b      	uxth	r3, r3
  405010:	3701      	adds	r7, #1
  405012:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  405016:	42bc      	cmp	r4, r7
  405018:	f84e 3b04 	str.w	r3, [lr], #4
  40501c:	ea4f 4311 	mov.w	r3, r1, lsr #16
  405020:	dcec      	bgt.n	404ffc <__multadd+0x10>
  405022:	b13b      	cbz	r3, 405034 <__multadd+0x48>
  405024:	68aa      	ldr	r2, [r5, #8]
  405026:	4294      	cmp	r4, r2
  405028:	da07      	bge.n	40503a <__multadd+0x4e>
  40502a:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  40502e:	3401      	adds	r4, #1
  405030:	6153      	str	r3, [r2, #20]
  405032:	612c      	str	r4, [r5, #16]
  405034:	4628      	mov	r0, r5
  405036:	b003      	add	sp, #12
  405038:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40503a:	6869      	ldr	r1, [r5, #4]
  40503c:	9301      	str	r3, [sp, #4]
  40503e:	3101      	adds	r1, #1
  405040:	4630      	mov	r0, r6
  405042:	f7ff ffa3 	bl	404f8c <_Balloc>
  405046:	692a      	ldr	r2, [r5, #16]
  405048:	3202      	adds	r2, #2
  40504a:	f105 010c 	add.w	r1, r5, #12
  40504e:	4607      	mov	r7, r0
  405050:	0092      	lsls	r2, r2, #2
  405052:	300c      	adds	r0, #12
  405054:	f7ff fef4 	bl	404e40 <memcpy>
  405058:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  40505a:	6869      	ldr	r1, [r5, #4]
  40505c:	9b01      	ldr	r3, [sp, #4]
  40505e:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  405062:	6028      	str	r0, [r5, #0]
  405064:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  405068:	463d      	mov	r5, r7
  40506a:	e7de      	b.n	40502a <__multadd+0x3e>

0040506c <__hi0bits>:
  40506c:	0c02      	lsrs	r2, r0, #16
  40506e:	0412      	lsls	r2, r2, #16
  405070:	4603      	mov	r3, r0
  405072:	b9b2      	cbnz	r2, 4050a2 <__hi0bits+0x36>
  405074:	0403      	lsls	r3, r0, #16
  405076:	2010      	movs	r0, #16
  405078:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  40507c:	bf04      	itt	eq
  40507e:	021b      	lsleq	r3, r3, #8
  405080:	3008      	addeq	r0, #8
  405082:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  405086:	bf04      	itt	eq
  405088:	011b      	lsleq	r3, r3, #4
  40508a:	3004      	addeq	r0, #4
  40508c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  405090:	bf04      	itt	eq
  405092:	009b      	lsleq	r3, r3, #2
  405094:	3002      	addeq	r0, #2
  405096:	2b00      	cmp	r3, #0
  405098:	db02      	blt.n	4050a0 <__hi0bits+0x34>
  40509a:	005b      	lsls	r3, r3, #1
  40509c:	d403      	bmi.n	4050a6 <__hi0bits+0x3a>
  40509e:	2020      	movs	r0, #32
  4050a0:	4770      	bx	lr
  4050a2:	2000      	movs	r0, #0
  4050a4:	e7e8      	b.n	405078 <__hi0bits+0xc>
  4050a6:	3001      	adds	r0, #1
  4050a8:	4770      	bx	lr
  4050aa:	bf00      	nop

004050ac <__lo0bits>:
  4050ac:	6803      	ldr	r3, [r0, #0]
  4050ae:	f013 0207 	ands.w	r2, r3, #7
  4050b2:	4601      	mov	r1, r0
  4050b4:	d007      	beq.n	4050c6 <__lo0bits+0x1a>
  4050b6:	07da      	lsls	r2, r3, #31
  4050b8:	d421      	bmi.n	4050fe <__lo0bits+0x52>
  4050ba:	0798      	lsls	r0, r3, #30
  4050bc:	d421      	bmi.n	405102 <__lo0bits+0x56>
  4050be:	089b      	lsrs	r3, r3, #2
  4050c0:	600b      	str	r3, [r1, #0]
  4050c2:	2002      	movs	r0, #2
  4050c4:	4770      	bx	lr
  4050c6:	b298      	uxth	r0, r3
  4050c8:	b198      	cbz	r0, 4050f2 <__lo0bits+0x46>
  4050ca:	4610      	mov	r0, r2
  4050cc:	f013 0fff 	tst.w	r3, #255	; 0xff
  4050d0:	bf04      	itt	eq
  4050d2:	0a1b      	lsreq	r3, r3, #8
  4050d4:	3008      	addeq	r0, #8
  4050d6:	071a      	lsls	r2, r3, #28
  4050d8:	bf04      	itt	eq
  4050da:	091b      	lsreq	r3, r3, #4
  4050dc:	3004      	addeq	r0, #4
  4050de:	079a      	lsls	r2, r3, #30
  4050e0:	bf04      	itt	eq
  4050e2:	089b      	lsreq	r3, r3, #2
  4050e4:	3002      	addeq	r0, #2
  4050e6:	07da      	lsls	r2, r3, #31
  4050e8:	d407      	bmi.n	4050fa <__lo0bits+0x4e>
  4050ea:	085b      	lsrs	r3, r3, #1
  4050ec:	d104      	bne.n	4050f8 <__lo0bits+0x4c>
  4050ee:	2020      	movs	r0, #32
  4050f0:	4770      	bx	lr
  4050f2:	0c1b      	lsrs	r3, r3, #16
  4050f4:	2010      	movs	r0, #16
  4050f6:	e7e9      	b.n	4050cc <__lo0bits+0x20>
  4050f8:	3001      	adds	r0, #1
  4050fa:	600b      	str	r3, [r1, #0]
  4050fc:	4770      	bx	lr
  4050fe:	2000      	movs	r0, #0
  405100:	4770      	bx	lr
  405102:	085b      	lsrs	r3, r3, #1
  405104:	600b      	str	r3, [r1, #0]
  405106:	2001      	movs	r0, #1
  405108:	4770      	bx	lr
  40510a:	bf00      	nop

0040510c <__i2b>:
  40510c:	b510      	push	{r4, lr}
  40510e:	460c      	mov	r4, r1
  405110:	2101      	movs	r1, #1
  405112:	f7ff ff3b 	bl	404f8c <_Balloc>
  405116:	2201      	movs	r2, #1
  405118:	6144      	str	r4, [r0, #20]
  40511a:	6102      	str	r2, [r0, #16]
  40511c:	bd10      	pop	{r4, pc}
  40511e:	bf00      	nop

00405120 <__multiply>:
  405120:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405124:	690c      	ldr	r4, [r1, #16]
  405126:	6915      	ldr	r5, [r2, #16]
  405128:	42ac      	cmp	r4, r5
  40512a:	b083      	sub	sp, #12
  40512c:	468b      	mov	fp, r1
  40512e:	4616      	mov	r6, r2
  405130:	da04      	bge.n	40513c <__multiply+0x1c>
  405132:	4622      	mov	r2, r4
  405134:	46b3      	mov	fp, r6
  405136:	462c      	mov	r4, r5
  405138:	460e      	mov	r6, r1
  40513a:	4615      	mov	r5, r2
  40513c:	f8db 3008 	ldr.w	r3, [fp, #8]
  405140:	f8db 1004 	ldr.w	r1, [fp, #4]
  405144:	eb04 0805 	add.w	r8, r4, r5
  405148:	4598      	cmp	r8, r3
  40514a:	bfc8      	it	gt
  40514c:	3101      	addgt	r1, #1
  40514e:	f7ff ff1d 	bl	404f8c <_Balloc>
  405152:	f100 0914 	add.w	r9, r0, #20
  405156:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  40515a:	45d1      	cmp	r9, sl
  40515c:	9000      	str	r0, [sp, #0]
  40515e:	d205      	bcs.n	40516c <__multiply+0x4c>
  405160:	464b      	mov	r3, r9
  405162:	2100      	movs	r1, #0
  405164:	f843 1b04 	str.w	r1, [r3], #4
  405168:	459a      	cmp	sl, r3
  40516a:	d8fb      	bhi.n	405164 <__multiply+0x44>
  40516c:	f106 0c14 	add.w	ip, r6, #20
  405170:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  405174:	f10b 0b14 	add.w	fp, fp, #20
  405178:	459c      	cmp	ip, r3
  40517a:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  40517e:	d24c      	bcs.n	40521a <__multiply+0xfa>
  405180:	f8cd a004 	str.w	sl, [sp, #4]
  405184:	469a      	mov	sl, r3
  405186:	f8dc 5000 	ldr.w	r5, [ip]
  40518a:	b2af      	uxth	r7, r5
  40518c:	b1ef      	cbz	r7, 4051ca <__multiply+0xaa>
  40518e:	2100      	movs	r1, #0
  405190:	464d      	mov	r5, r9
  405192:	465e      	mov	r6, fp
  405194:	460c      	mov	r4, r1
  405196:	f856 2b04 	ldr.w	r2, [r6], #4
  40519a:	6828      	ldr	r0, [r5, #0]
  40519c:	b293      	uxth	r3, r2
  40519e:	b281      	uxth	r1, r0
  4051a0:	fb07 1303 	mla	r3, r7, r3, r1
  4051a4:	0c12      	lsrs	r2, r2, #16
  4051a6:	0c01      	lsrs	r1, r0, #16
  4051a8:	4423      	add	r3, r4
  4051aa:	fb07 1102 	mla	r1, r7, r2, r1
  4051ae:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  4051b2:	b29b      	uxth	r3, r3
  4051b4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  4051b8:	45b6      	cmp	lr, r6
  4051ba:	f845 3b04 	str.w	r3, [r5], #4
  4051be:	ea4f 4411 	mov.w	r4, r1, lsr #16
  4051c2:	d8e8      	bhi.n	405196 <__multiply+0x76>
  4051c4:	602c      	str	r4, [r5, #0]
  4051c6:	f8dc 5000 	ldr.w	r5, [ip]
  4051ca:	0c2d      	lsrs	r5, r5, #16
  4051cc:	d01d      	beq.n	40520a <__multiply+0xea>
  4051ce:	f8d9 3000 	ldr.w	r3, [r9]
  4051d2:	4648      	mov	r0, r9
  4051d4:	461c      	mov	r4, r3
  4051d6:	4659      	mov	r1, fp
  4051d8:	2200      	movs	r2, #0
  4051da:	880e      	ldrh	r6, [r1, #0]
  4051dc:	0c24      	lsrs	r4, r4, #16
  4051de:	fb05 4406 	mla	r4, r5, r6, r4
  4051e2:	4422      	add	r2, r4
  4051e4:	b29b      	uxth	r3, r3
  4051e6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  4051ea:	f840 3b04 	str.w	r3, [r0], #4
  4051ee:	f851 3b04 	ldr.w	r3, [r1], #4
  4051f2:	6804      	ldr	r4, [r0, #0]
  4051f4:	0c1b      	lsrs	r3, r3, #16
  4051f6:	b2a6      	uxth	r6, r4
  4051f8:	fb05 6303 	mla	r3, r5, r3, r6
  4051fc:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  405200:	458e      	cmp	lr, r1
  405202:	ea4f 4213 	mov.w	r2, r3, lsr #16
  405206:	d8e8      	bhi.n	4051da <__multiply+0xba>
  405208:	6003      	str	r3, [r0, #0]
  40520a:	f10c 0c04 	add.w	ip, ip, #4
  40520e:	45e2      	cmp	sl, ip
  405210:	f109 0904 	add.w	r9, r9, #4
  405214:	d8b7      	bhi.n	405186 <__multiply+0x66>
  405216:	f8dd a004 	ldr.w	sl, [sp, #4]
  40521a:	f1b8 0f00 	cmp.w	r8, #0
  40521e:	dd0b      	ble.n	405238 <__multiply+0x118>
  405220:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  405224:	f1aa 0a04 	sub.w	sl, sl, #4
  405228:	b11b      	cbz	r3, 405232 <__multiply+0x112>
  40522a:	e005      	b.n	405238 <__multiply+0x118>
  40522c:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  405230:	b913      	cbnz	r3, 405238 <__multiply+0x118>
  405232:	f1b8 0801 	subs.w	r8, r8, #1
  405236:	d1f9      	bne.n	40522c <__multiply+0x10c>
  405238:	9800      	ldr	r0, [sp, #0]
  40523a:	f8c0 8010 	str.w	r8, [r0, #16]
  40523e:	b003      	add	sp, #12
  405240:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00405244 <__pow5mult>:
  405244:	f012 0303 	ands.w	r3, r2, #3
  405248:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40524c:	4614      	mov	r4, r2
  40524e:	4607      	mov	r7, r0
  405250:	d12e      	bne.n	4052b0 <__pow5mult+0x6c>
  405252:	460d      	mov	r5, r1
  405254:	10a4      	asrs	r4, r4, #2
  405256:	d01c      	beq.n	405292 <__pow5mult+0x4e>
  405258:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  40525a:	b396      	cbz	r6, 4052c2 <__pow5mult+0x7e>
  40525c:	07e3      	lsls	r3, r4, #31
  40525e:	f04f 0800 	mov.w	r8, #0
  405262:	d406      	bmi.n	405272 <__pow5mult+0x2e>
  405264:	1064      	asrs	r4, r4, #1
  405266:	d014      	beq.n	405292 <__pow5mult+0x4e>
  405268:	6830      	ldr	r0, [r6, #0]
  40526a:	b1a8      	cbz	r0, 405298 <__pow5mult+0x54>
  40526c:	4606      	mov	r6, r0
  40526e:	07e3      	lsls	r3, r4, #31
  405270:	d5f8      	bpl.n	405264 <__pow5mult+0x20>
  405272:	4632      	mov	r2, r6
  405274:	4629      	mov	r1, r5
  405276:	4638      	mov	r0, r7
  405278:	f7ff ff52 	bl	405120 <__multiply>
  40527c:	b1b5      	cbz	r5, 4052ac <__pow5mult+0x68>
  40527e:	686a      	ldr	r2, [r5, #4]
  405280:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  405282:	1064      	asrs	r4, r4, #1
  405284:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  405288:	6029      	str	r1, [r5, #0]
  40528a:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  40528e:	4605      	mov	r5, r0
  405290:	d1ea      	bne.n	405268 <__pow5mult+0x24>
  405292:	4628      	mov	r0, r5
  405294:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405298:	4632      	mov	r2, r6
  40529a:	4631      	mov	r1, r6
  40529c:	4638      	mov	r0, r7
  40529e:	f7ff ff3f 	bl	405120 <__multiply>
  4052a2:	6030      	str	r0, [r6, #0]
  4052a4:	f8c0 8000 	str.w	r8, [r0]
  4052a8:	4606      	mov	r6, r0
  4052aa:	e7e0      	b.n	40526e <__pow5mult+0x2a>
  4052ac:	4605      	mov	r5, r0
  4052ae:	e7d9      	b.n	405264 <__pow5mult+0x20>
  4052b0:	1e5a      	subs	r2, r3, #1
  4052b2:	4d0b      	ldr	r5, [pc, #44]	; (4052e0 <__pow5mult+0x9c>)
  4052b4:	2300      	movs	r3, #0
  4052b6:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  4052ba:	f7ff fe97 	bl	404fec <__multadd>
  4052be:	4605      	mov	r5, r0
  4052c0:	e7c8      	b.n	405254 <__pow5mult+0x10>
  4052c2:	2101      	movs	r1, #1
  4052c4:	4638      	mov	r0, r7
  4052c6:	f7ff fe61 	bl	404f8c <_Balloc>
  4052ca:	f240 2171 	movw	r1, #625	; 0x271
  4052ce:	2201      	movs	r2, #1
  4052d0:	2300      	movs	r3, #0
  4052d2:	6141      	str	r1, [r0, #20]
  4052d4:	6102      	str	r2, [r0, #16]
  4052d6:	4606      	mov	r6, r0
  4052d8:	64b8      	str	r0, [r7, #72]	; 0x48
  4052da:	6003      	str	r3, [r0, #0]
  4052dc:	e7be      	b.n	40525c <__pow5mult+0x18>
  4052de:	bf00      	nop
  4052e0:	00407000 	.word	0x00407000

004052e4 <__lshift>:
  4052e4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4052e8:	4691      	mov	r9, r2
  4052ea:	690a      	ldr	r2, [r1, #16]
  4052ec:	688b      	ldr	r3, [r1, #8]
  4052ee:	ea4f 1469 	mov.w	r4, r9, asr #5
  4052f2:	eb04 0802 	add.w	r8, r4, r2
  4052f6:	f108 0501 	add.w	r5, r8, #1
  4052fa:	429d      	cmp	r5, r3
  4052fc:	460e      	mov	r6, r1
  4052fe:	4607      	mov	r7, r0
  405300:	6849      	ldr	r1, [r1, #4]
  405302:	dd04      	ble.n	40530e <__lshift+0x2a>
  405304:	005b      	lsls	r3, r3, #1
  405306:	429d      	cmp	r5, r3
  405308:	f101 0101 	add.w	r1, r1, #1
  40530c:	dcfa      	bgt.n	405304 <__lshift+0x20>
  40530e:	4638      	mov	r0, r7
  405310:	f7ff fe3c 	bl	404f8c <_Balloc>
  405314:	2c00      	cmp	r4, #0
  405316:	f100 0314 	add.w	r3, r0, #20
  40531a:	dd06      	ble.n	40532a <__lshift+0x46>
  40531c:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  405320:	2100      	movs	r1, #0
  405322:	f843 1b04 	str.w	r1, [r3], #4
  405326:	429a      	cmp	r2, r3
  405328:	d1fb      	bne.n	405322 <__lshift+0x3e>
  40532a:	6934      	ldr	r4, [r6, #16]
  40532c:	f106 0114 	add.w	r1, r6, #20
  405330:	f019 091f 	ands.w	r9, r9, #31
  405334:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  405338:	d01d      	beq.n	405376 <__lshift+0x92>
  40533a:	f1c9 0c20 	rsb	ip, r9, #32
  40533e:	2200      	movs	r2, #0
  405340:	680c      	ldr	r4, [r1, #0]
  405342:	fa04 f409 	lsl.w	r4, r4, r9
  405346:	4314      	orrs	r4, r2
  405348:	f843 4b04 	str.w	r4, [r3], #4
  40534c:	f851 2b04 	ldr.w	r2, [r1], #4
  405350:	458e      	cmp	lr, r1
  405352:	fa22 f20c 	lsr.w	r2, r2, ip
  405356:	d8f3      	bhi.n	405340 <__lshift+0x5c>
  405358:	601a      	str	r2, [r3, #0]
  40535a:	b10a      	cbz	r2, 405360 <__lshift+0x7c>
  40535c:	f108 0502 	add.w	r5, r8, #2
  405360:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  405362:	6872      	ldr	r2, [r6, #4]
  405364:	3d01      	subs	r5, #1
  405366:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  40536a:	6105      	str	r5, [r0, #16]
  40536c:	6031      	str	r1, [r6, #0]
  40536e:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  405372:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405376:	3b04      	subs	r3, #4
  405378:	f851 2b04 	ldr.w	r2, [r1], #4
  40537c:	f843 2f04 	str.w	r2, [r3, #4]!
  405380:	458e      	cmp	lr, r1
  405382:	d8f9      	bhi.n	405378 <__lshift+0x94>
  405384:	e7ec      	b.n	405360 <__lshift+0x7c>
  405386:	bf00      	nop

00405388 <__mcmp>:
  405388:	b430      	push	{r4, r5}
  40538a:	690b      	ldr	r3, [r1, #16]
  40538c:	4605      	mov	r5, r0
  40538e:	6900      	ldr	r0, [r0, #16]
  405390:	1ac0      	subs	r0, r0, r3
  405392:	d10f      	bne.n	4053b4 <__mcmp+0x2c>
  405394:	009b      	lsls	r3, r3, #2
  405396:	3514      	adds	r5, #20
  405398:	3114      	adds	r1, #20
  40539a:	4419      	add	r1, r3
  40539c:	442b      	add	r3, r5
  40539e:	e001      	b.n	4053a4 <__mcmp+0x1c>
  4053a0:	429d      	cmp	r5, r3
  4053a2:	d207      	bcs.n	4053b4 <__mcmp+0x2c>
  4053a4:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  4053a8:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  4053ac:	4294      	cmp	r4, r2
  4053ae:	d0f7      	beq.n	4053a0 <__mcmp+0x18>
  4053b0:	d302      	bcc.n	4053b8 <__mcmp+0x30>
  4053b2:	2001      	movs	r0, #1
  4053b4:	bc30      	pop	{r4, r5}
  4053b6:	4770      	bx	lr
  4053b8:	f04f 30ff 	mov.w	r0, #4294967295
  4053bc:	e7fa      	b.n	4053b4 <__mcmp+0x2c>
  4053be:	bf00      	nop

004053c0 <__mdiff>:
  4053c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4053c4:	690f      	ldr	r7, [r1, #16]
  4053c6:	460e      	mov	r6, r1
  4053c8:	6911      	ldr	r1, [r2, #16]
  4053ca:	1a7f      	subs	r7, r7, r1
  4053cc:	2f00      	cmp	r7, #0
  4053ce:	4690      	mov	r8, r2
  4053d0:	d117      	bne.n	405402 <__mdiff+0x42>
  4053d2:	0089      	lsls	r1, r1, #2
  4053d4:	f106 0514 	add.w	r5, r6, #20
  4053d8:	f102 0e14 	add.w	lr, r2, #20
  4053dc:	186b      	adds	r3, r5, r1
  4053de:	4471      	add	r1, lr
  4053e0:	e001      	b.n	4053e6 <__mdiff+0x26>
  4053e2:	429d      	cmp	r5, r3
  4053e4:	d25c      	bcs.n	4054a0 <__mdiff+0xe0>
  4053e6:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  4053ea:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  4053ee:	42a2      	cmp	r2, r4
  4053f0:	d0f7      	beq.n	4053e2 <__mdiff+0x22>
  4053f2:	d25e      	bcs.n	4054b2 <__mdiff+0xf2>
  4053f4:	4633      	mov	r3, r6
  4053f6:	462c      	mov	r4, r5
  4053f8:	4646      	mov	r6, r8
  4053fa:	4675      	mov	r5, lr
  4053fc:	4698      	mov	r8, r3
  4053fe:	2701      	movs	r7, #1
  405400:	e005      	b.n	40540e <__mdiff+0x4e>
  405402:	db58      	blt.n	4054b6 <__mdiff+0xf6>
  405404:	f106 0514 	add.w	r5, r6, #20
  405408:	f108 0414 	add.w	r4, r8, #20
  40540c:	2700      	movs	r7, #0
  40540e:	6871      	ldr	r1, [r6, #4]
  405410:	f7ff fdbc 	bl	404f8c <_Balloc>
  405414:	f8d8 3010 	ldr.w	r3, [r8, #16]
  405418:	6936      	ldr	r6, [r6, #16]
  40541a:	60c7      	str	r7, [r0, #12]
  40541c:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  405420:	46a6      	mov	lr, r4
  405422:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  405426:	f100 0414 	add.w	r4, r0, #20
  40542a:	2300      	movs	r3, #0
  40542c:	f85e 1b04 	ldr.w	r1, [lr], #4
  405430:	f855 8b04 	ldr.w	r8, [r5], #4
  405434:	b28a      	uxth	r2, r1
  405436:	fa13 f388 	uxtah	r3, r3, r8
  40543a:	0c09      	lsrs	r1, r1, #16
  40543c:	1a9a      	subs	r2, r3, r2
  40543e:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  405442:	eb03 4322 	add.w	r3, r3, r2, asr #16
  405446:	b292      	uxth	r2, r2
  405448:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  40544c:	45f4      	cmp	ip, lr
  40544e:	f844 2b04 	str.w	r2, [r4], #4
  405452:	ea4f 4323 	mov.w	r3, r3, asr #16
  405456:	d8e9      	bhi.n	40542c <__mdiff+0x6c>
  405458:	42af      	cmp	r7, r5
  40545a:	d917      	bls.n	40548c <__mdiff+0xcc>
  40545c:	46a4      	mov	ip, r4
  40545e:	46ae      	mov	lr, r5
  405460:	f85e 2b04 	ldr.w	r2, [lr], #4
  405464:	fa13 f382 	uxtah	r3, r3, r2
  405468:	1419      	asrs	r1, r3, #16
  40546a:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  40546e:	b29b      	uxth	r3, r3
  405470:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  405474:	4577      	cmp	r7, lr
  405476:	f84c 2b04 	str.w	r2, [ip], #4
  40547a:	ea4f 4321 	mov.w	r3, r1, asr #16
  40547e:	d8ef      	bhi.n	405460 <__mdiff+0xa0>
  405480:	43ed      	mvns	r5, r5
  405482:	442f      	add	r7, r5
  405484:	f027 0703 	bic.w	r7, r7, #3
  405488:	3704      	adds	r7, #4
  40548a:	443c      	add	r4, r7
  40548c:	3c04      	subs	r4, #4
  40548e:	b922      	cbnz	r2, 40549a <__mdiff+0xda>
  405490:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  405494:	3e01      	subs	r6, #1
  405496:	2b00      	cmp	r3, #0
  405498:	d0fa      	beq.n	405490 <__mdiff+0xd0>
  40549a:	6106      	str	r6, [r0, #16]
  40549c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4054a0:	2100      	movs	r1, #0
  4054a2:	f7ff fd73 	bl	404f8c <_Balloc>
  4054a6:	2201      	movs	r2, #1
  4054a8:	2300      	movs	r3, #0
  4054aa:	6102      	str	r2, [r0, #16]
  4054ac:	6143      	str	r3, [r0, #20]
  4054ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4054b2:	4674      	mov	r4, lr
  4054b4:	e7ab      	b.n	40540e <__mdiff+0x4e>
  4054b6:	4633      	mov	r3, r6
  4054b8:	f106 0414 	add.w	r4, r6, #20
  4054bc:	f102 0514 	add.w	r5, r2, #20
  4054c0:	4616      	mov	r6, r2
  4054c2:	2701      	movs	r7, #1
  4054c4:	4698      	mov	r8, r3
  4054c6:	e7a2      	b.n	40540e <__mdiff+0x4e>

004054c8 <__d2b>:
  4054c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4054cc:	b082      	sub	sp, #8
  4054ce:	2101      	movs	r1, #1
  4054d0:	461c      	mov	r4, r3
  4054d2:	f3c3 570a 	ubfx	r7, r3, #20, #11
  4054d6:	4615      	mov	r5, r2
  4054d8:	9e08      	ldr	r6, [sp, #32]
  4054da:	f7ff fd57 	bl	404f8c <_Balloc>
  4054de:	f3c4 0413 	ubfx	r4, r4, #0, #20
  4054e2:	4680      	mov	r8, r0
  4054e4:	b10f      	cbz	r7, 4054ea <__d2b+0x22>
  4054e6:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  4054ea:	9401      	str	r4, [sp, #4]
  4054ec:	b31d      	cbz	r5, 405536 <__d2b+0x6e>
  4054ee:	a802      	add	r0, sp, #8
  4054f0:	f840 5d08 	str.w	r5, [r0, #-8]!
  4054f4:	f7ff fdda 	bl	4050ac <__lo0bits>
  4054f8:	2800      	cmp	r0, #0
  4054fa:	d134      	bne.n	405566 <__d2b+0x9e>
  4054fc:	e89d 000c 	ldmia.w	sp, {r2, r3}
  405500:	f8c8 2014 	str.w	r2, [r8, #20]
  405504:	2b00      	cmp	r3, #0
  405506:	bf0c      	ite	eq
  405508:	2101      	moveq	r1, #1
  40550a:	2102      	movne	r1, #2
  40550c:	f8c8 3018 	str.w	r3, [r8, #24]
  405510:	f8c8 1010 	str.w	r1, [r8, #16]
  405514:	b9df      	cbnz	r7, 40554e <__d2b+0x86>
  405516:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  40551a:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  40551e:	6030      	str	r0, [r6, #0]
  405520:	6918      	ldr	r0, [r3, #16]
  405522:	f7ff fda3 	bl	40506c <__hi0bits>
  405526:	9b09      	ldr	r3, [sp, #36]	; 0x24
  405528:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  40552c:	6018      	str	r0, [r3, #0]
  40552e:	4640      	mov	r0, r8
  405530:	b002      	add	sp, #8
  405532:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405536:	a801      	add	r0, sp, #4
  405538:	f7ff fdb8 	bl	4050ac <__lo0bits>
  40553c:	9b01      	ldr	r3, [sp, #4]
  40553e:	f8c8 3014 	str.w	r3, [r8, #20]
  405542:	2101      	movs	r1, #1
  405544:	3020      	adds	r0, #32
  405546:	f8c8 1010 	str.w	r1, [r8, #16]
  40554a:	2f00      	cmp	r7, #0
  40554c:	d0e3      	beq.n	405516 <__d2b+0x4e>
  40554e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  405550:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  405554:	4407      	add	r7, r0
  405556:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  40555a:	6037      	str	r7, [r6, #0]
  40555c:	6018      	str	r0, [r3, #0]
  40555e:	4640      	mov	r0, r8
  405560:	b002      	add	sp, #8
  405562:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405566:	e89d 000a 	ldmia.w	sp, {r1, r3}
  40556a:	f1c0 0220 	rsb	r2, r0, #32
  40556e:	fa03 f202 	lsl.w	r2, r3, r2
  405572:	430a      	orrs	r2, r1
  405574:	40c3      	lsrs	r3, r0
  405576:	9301      	str	r3, [sp, #4]
  405578:	f8c8 2014 	str.w	r2, [r8, #20]
  40557c:	e7c2      	b.n	405504 <__d2b+0x3c>
  40557e:	bf00      	nop

00405580 <_sbrk_r>:
  405580:	b538      	push	{r3, r4, r5, lr}
  405582:	4c07      	ldr	r4, [pc, #28]	; (4055a0 <_sbrk_r+0x20>)
  405584:	2300      	movs	r3, #0
  405586:	4605      	mov	r5, r0
  405588:	4608      	mov	r0, r1
  40558a:	6023      	str	r3, [r4, #0]
  40558c:	f7fc f93a 	bl	401804 <_sbrk>
  405590:	1c43      	adds	r3, r0, #1
  405592:	d000      	beq.n	405596 <_sbrk_r+0x16>
  405594:	bd38      	pop	{r3, r4, r5, pc}
  405596:	6823      	ldr	r3, [r4, #0]
  405598:	2b00      	cmp	r3, #0
  40559a:	d0fb      	beq.n	405594 <_sbrk_r+0x14>
  40559c:	602b      	str	r3, [r5, #0]
  40559e:	bd38      	pop	{r3, r4, r5, pc}
  4055a0:	20400cd8 	.word	0x20400cd8
	...

004055c0 <strlen>:
  4055c0:	f890 f000 	pld	[r0]
  4055c4:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  4055c8:	f020 0107 	bic.w	r1, r0, #7
  4055cc:	f06f 0c00 	mvn.w	ip, #0
  4055d0:	f010 0407 	ands.w	r4, r0, #7
  4055d4:	f891 f020 	pld	[r1, #32]
  4055d8:	f040 8049 	bne.w	40566e <strlen+0xae>
  4055dc:	f04f 0400 	mov.w	r4, #0
  4055e0:	f06f 0007 	mvn.w	r0, #7
  4055e4:	e9d1 2300 	ldrd	r2, r3, [r1]
  4055e8:	f891 f040 	pld	[r1, #64]	; 0x40
  4055ec:	f100 0008 	add.w	r0, r0, #8
  4055f0:	fa82 f24c 	uadd8	r2, r2, ip
  4055f4:	faa4 f28c 	sel	r2, r4, ip
  4055f8:	fa83 f34c 	uadd8	r3, r3, ip
  4055fc:	faa2 f38c 	sel	r3, r2, ip
  405600:	bb4b      	cbnz	r3, 405656 <strlen+0x96>
  405602:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  405606:	fa82 f24c 	uadd8	r2, r2, ip
  40560a:	f100 0008 	add.w	r0, r0, #8
  40560e:	faa4 f28c 	sel	r2, r4, ip
  405612:	fa83 f34c 	uadd8	r3, r3, ip
  405616:	faa2 f38c 	sel	r3, r2, ip
  40561a:	b9e3      	cbnz	r3, 405656 <strlen+0x96>
  40561c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  405620:	fa82 f24c 	uadd8	r2, r2, ip
  405624:	f100 0008 	add.w	r0, r0, #8
  405628:	faa4 f28c 	sel	r2, r4, ip
  40562c:	fa83 f34c 	uadd8	r3, r3, ip
  405630:	faa2 f38c 	sel	r3, r2, ip
  405634:	b97b      	cbnz	r3, 405656 <strlen+0x96>
  405636:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  40563a:	f101 0120 	add.w	r1, r1, #32
  40563e:	fa82 f24c 	uadd8	r2, r2, ip
  405642:	f100 0008 	add.w	r0, r0, #8
  405646:	faa4 f28c 	sel	r2, r4, ip
  40564a:	fa83 f34c 	uadd8	r3, r3, ip
  40564e:	faa2 f38c 	sel	r3, r2, ip
  405652:	2b00      	cmp	r3, #0
  405654:	d0c6      	beq.n	4055e4 <strlen+0x24>
  405656:	2a00      	cmp	r2, #0
  405658:	bf04      	itt	eq
  40565a:	3004      	addeq	r0, #4
  40565c:	461a      	moveq	r2, r3
  40565e:	ba12      	rev	r2, r2
  405660:	fab2 f282 	clz	r2, r2
  405664:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  405668:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  40566c:	4770      	bx	lr
  40566e:	e9d1 2300 	ldrd	r2, r3, [r1]
  405672:	f004 0503 	and.w	r5, r4, #3
  405676:	f1c4 0000 	rsb	r0, r4, #0
  40567a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  40567e:	f014 0f04 	tst.w	r4, #4
  405682:	f891 f040 	pld	[r1, #64]	; 0x40
  405686:	fa0c f505 	lsl.w	r5, ip, r5
  40568a:	ea62 0205 	orn	r2, r2, r5
  40568e:	bf1c      	itt	ne
  405690:	ea63 0305 	ornne	r3, r3, r5
  405694:	4662      	movne	r2, ip
  405696:	f04f 0400 	mov.w	r4, #0
  40569a:	e7a9      	b.n	4055f0 <strlen+0x30>

0040569c <__ssprint_r>:
  40569c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4056a0:	6893      	ldr	r3, [r2, #8]
  4056a2:	b083      	sub	sp, #12
  4056a4:	4690      	mov	r8, r2
  4056a6:	2b00      	cmp	r3, #0
  4056a8:	d070      	beq.n	40578c <__ssprint_r+0xf0>
  4056aa:	4682      	mov	sl, r0
  4056ac:	460c      	mov	r4, r1
  4056ae:	6817      	ldr	r7, [r2, #0]
  4056b0:	688d      	ldr	r5, [r1, #8]
  4056b2:	6808      	ldr	r0, [r1, #0]
  4056b4:	e042      	b.n	40573c <__ssprint_r+0xa0>
  4056b6:	89a3      	ldrh	r3, [r4, #12]
  4056b8:	f413 6f90 	tst.w	r3, #1152	; 0x480
  4056bc:	d02e      	beq.n	40571c <__ssprint_r+0x80>
  4056be:	6965      	ldr	r5, [r4, #20]
  4056c0:	6921      	ldr	r1, [r4, #16]
  4056c2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  4056c6:	eba0 0b01 	sub.w	fp, r0, r1
  4056ca:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  4056ce:	f10b 0001 	add.w	r0, fp, #1
  4056d2:	106d      	asrs	r5, r5, #1
  4056d4:	4430      	add	r0, r6
  4056d6:	42a8      	cmp	r0, r5
  4056d8:	462a      	mov	r2, r5
  4056da:	bf84      	itt	hi
  4056dc:	4605      	movhi	r5, r0
  4056de:	462a      	movhi	r2, r5
  4056e0:	055b      	lsls	r3, r3, #21
  4056e2:	d538      	bpl.n	405756 <__ssprint_r+0xba>
  4056e4:	4611      	mov	r1, r2
  4056e6:	4650      	mov	r0, sl
  4056e8:	f7ff f8a8 	bl	40483c <_malloc_r>
  4056ec:	2800      	cmp	r0, #0
  4056ee:	d03c      	beq.n	40576a <__ssprint_r+0xce>
  4056f0:	465a      	mov	r2, fp
  4056f2:	6921      	ldr	r1, [r4, #16]
  4056f4:	9001      	str	r0, [sp, #4]
  4056f6:	f7ff fba3 	bl	404e40 <memcpy>
  4056fa:	89a2      	ldrh	r2, [r4, #12]
  4056fc:	9b01      	ldr	r3, [sp, #4]
  4056fe:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  405702:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  405706:	81a2      	strh	r2, [r4, #12]
  405708:	eba5 020b 	sub.w	r2, r5, fp
  40570c:	eb03 000b 	add.w	r0, r3, fp
  405710:	6165      	str	r5, [r4, #20]
  405712:	6123      	str	r3, [r4, #16]
  405714:	6020      	str	r0, [r4, #0]
  405716:	60a2      	str	r2, [r4, #8]
  405718:	4635      	mov	r5, r6
  40571a:	46b3      	mov	fp, r6
  40571c:	465a      	mov	r2, fp
  40571e:	4649      	mov	r1, r9
  405720:	f000 fa18 	bl	405b54 <memmove>
  405724:	f8d8 3008 	ldr.w	r3, [r8, #8]
  405728:	68a2      	ldr	r2, [r4, #8]
  40572a:	6820      	ldr	r0, [r4, #0]
  40572c:	1b55      	subs	r5, r2, r5
  40572e:	4458      	add	r0, fp
  405730:	1b9e      	subs	r6, r3, r6
  405732:	60a5      	str	r5, [r4, #8]
  405734:	6020      	str	r0, [r4, #0]
  405736:	f8c8 6008 	str.w	r6, [r8, #8]
  40573a:	b33e      	cbz	r6, 40578c <__ssprint_r+0xf0>
  40573c:	687e      	ldr	r6, [r7, #4]
  40573e:	463b      	mov	r3, r7
  405740:	3708      	adds	r7, #8
  405742:	2e00      	cmp	r6, #0
  405744:	d0fa      	beq.n	40573c <__ssprint_r+0xa0>
  405746:	42ae      	cmp	r6, r5
  405748:	f8d3 9000 	ldr.w	r9, [r3]
  40574c:	46ab      	mov	fp, r5
  40574e:	d2b2      	bcs.n	4056b6 <__ssprint_r+0x1a>
  405750:	4635      	mov	r5, r6
  405752:	46b3      	mov	fp, r6
  405754:	e7e2      	b.n	40571c <__ssprint_r+0x80>
  405756:	4650      	mov	r0, sl
  405758:	f000 fa60 	bl	405c1c <_realloc_r>
  40575c:	4603      	mov	r3, r0
  40575e:	2800      	cmp	r0, #0
  405760:	d1d2      	bne.n	405708 <__ssprint_r+0x6c>
  405762:	6921      	ldr	r1, [r4, #16]
  405764:	4650      	mov	r0, sl
  405766:	f000 f8f9 	bl	40595c <_free_r>
  40576a:	230c      	movs	r3, #12
  40576c:	f8ca 3000 	str.w	r3, [sl]
  405770:	89a3      	ldrh	r3, [r4, #12]
  405772:	2200      	movs	r2, #0
  405774:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  405778:	f04f 30ff 	mov.w	r0, #4294967295
  40577c:	81a3      	strh	r3, [r4, #12]
  40577e:	f8c8 2008 	str.w	r2, [r8, #8]
  405782:	f8c8 2004 	str.w	r2, [r8, #4]
  405786:	b003      	add	sp, #12
  405788:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40578c:	2000      	movs	r0, #0
  40578e:	f8c8 0004 	str.w	r0, [r8, #4]
  405792:	b003      	add	sp, #12
  405794:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00405798 <__register_exitproc>:
  405798:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40579c:	4d2c      	ldr	r5, [pc, #176]	; (405850 <__register_exitproc+0xb8>)
  40579e:	4606      	mov	r6, r0
  4057a0:	6828      	ldr	r0, [r5, #0]
  4057a2:	4698      	mov	r8, r3
  4057a4:	460f      	mov	r7, r1
  4057a6:	4691      	mov	r9, r2
  4057a8:	f7ff f844 	bl	404834 <__retarget_lock_acquire_recursive>
  4057ac:	4b29      	ldr	r3, [pc, #164]	; (405854 <__register_exitproc+0xbc>)
  4057ae:	681c      	ldr	r4, [r3, #0]
  4057b0:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  4057b4:	2b00      	cmp	r3, #0
  4057b6:	d03e      	beq.n	405836 <__register_exitproc+0x9e>
  4057b8:	685a      	ldr	r2, [r3, #4]
  4057ba:	2a1f      	cmp	r2, #31
  4057bc:	dc1c      	bgt.n	4057f8 <__register_exitproc+0x60>
  4057be:	f102 0e01 	add.w	lr, r2, #1
  4057c2:	b176      	cbz	r6, 4057e2 <__register_exitproc+0x4a>
  4057c4:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  4057c8:	2401      	movs	r4, #1
  4057ca:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  4057ce:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  4057d2:	4094      	lsls	r4, r2
  4057d4:	4320      	orrs	r0, r4
  4057d6:	2e02      	cmp	r6, #2
  4057d8:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  4057dc:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  4057e0:	d023      	beq.n	40582a <__register_exitproc+0x92>
  4057e2:	3202      	adds	r2, #2
  4057e4:	f8c3 e004 	str.w	lr, [r3, #4]
  4057e8:	6828      	ldr	r0, [r5, #0]
  4057ea:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  4057ee:	f7ff f823 	bl	404838 <__retarget_lock_release_recursive>
  4057f2:	2000      	movs	r0, #0
  4057f4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4057f8:	4b17      	ldr	r3, [pc, #92]	; (405858 <__register_exitproc+0xc0>)
  4057fa:	b30b      	cbz	r3, 405840 <__register_exitproc+0xa8>
  4057fc:	f44f 70c8 	mov.w	r0, #400	; 0x190
  405800:	f3af 8000 	nop.w
  405804:	4603      	mov	r3, r0
  405806:	b1d8      	cbz	r0, 405840 <__register_exitproc+0xa8>
  405808:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  40580c:	6002      	str	r2, [r0, #0]
  40580e:	2100      	movs	r1, #0
  405810:	6041      	str	r1, [r0, #4]
  405812:	460a      	mov	r2, r1
  405814:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  405818:	f04f 0e01 	mov.w	lr, #1
  40581c:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  405820:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  405824:	2e00      	cmp	r6, #0
  405826:	d0dc      	beq.n	4057e2 <__register_exitproc+0x4a>
  405828:	e7cc      	b.n	4057c4 <__register_exitproc+0x2c>
  40582a:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  40582e:	430c      	orrs	r4, r1
  405830:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  405834:	e7d5      	b.n	4057e2 <__register_exitproc+0x4a>
  405836:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  40583a:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  40583e:	e7bb      	b.n	4057b8 <__register_exitproc+0x20>
  405840:	6828      	ldr	r0, [r5, #0]
  405842:	f7fe fff9 	bl	404838 <__retarget_lock_release_recursive>
  405846:	f04f 30ff 	mov.w	r0, #4294967295
  40584a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40584e:	bf00      	nop
  405850:	20400450 	.word	0x20400450
  405854:	00406e98 	.word	0x00406e98
  405858:	00000000 	.word	0x00000000

0040585c <_calloc_r>:
  40585c:	b510      	push	{r4, lr}
  40585e:	fb02 f101 	mul.w	r1, r2, r1
  405862:	f7fe ffeb 	bl	40483c <_malloc_r>
  405866:	4604      	mov	r4, r0
  405868:	b1d8      	cbz	r0, 4058a2 <_calloc_r+0x46>
  40586a:	f850 2c04 	ldr.w	r2, [r0, #-4]
  40586e:	f022 0203 	bic.w	r2, r2, #3
  405872:	3a04      	subs	r2, #4
  405874:	2a24      	cmp	r2, #36	; 0x24
  405876:	d818      	bhi.n	4058aa <_calloc_r+0x4e>
  405878:	2a13      	cmp	r2, #19
  40587a:	d914      	bls.n	4058a6 <_calloc_r+0x4a>
  40587c:	2300      	movs	r3, #0
  40587e:	2a1b      	cmp	r2, #27
  405880:	6003      	str	r3, [r0, #0]
  405882:	6043      	str	r3, [r0, #4]
  405884:	d916      	bls.n	4058b4 <_calloc_r+0x58>
  405886:	2a24      	cmp	r2, #36	; 0x24
  405888:	6083      	str	r3, [r0, #8]
  40588a:	60c3      	str	r3, [r0, #12]
  40588c:	bf11      	iteee	ne
  40588e:	f100 0210 	addne.w	r2, r0, #16
  405892:	6103      	streq	r3, [r0, #16]
  405894:	6143      	streq	r3, [r0, #20]
  405896:	f100 0218 	addeq.w	r2, r0, #24
  40589a:	2300      	movs	r3, #0
  40589c:	6013      	str	r3, [r2, #0]
  40589e:	6053      	str	r3, [r2, #4]
  4058a0:	6093      	str	r3, [r2, #8]
  4058a2:	4620      	mov	r0, r4
  4058a4:	bd10      	pop	{r4, pc}
  4058a6:	4602      	mov	r2, r0
  4058a8:	e7f7      	b.n	40589a <_calloc_r+0x3e>
  4058aa:	2100      	movs	r1, #0
  4058ac:	f7fc fd2a 	bl	402304 <memset>
  4058b0:	4620      	mov	r0, r4
  4058b2:	bd10      	pop	{r4, pc}
  4058b4:	f100 0208 	add.w	r2, r0, #8
  4058b8:	e7ef      	b.n	40589a <_calloc_r+0x3e>
  4058ba:	bf00      	nop

004058bc <_malloc_trim_r>:
  4058bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4058be:	4f24      	ldr	r7, [pc, #144]	; (405950 <_malloc_trim_r+0x94>)
  4058c0:	460c      	mov	r4, r1
  4058c2:	4606      	mov	r6, r0
  4058c4:	f7ff fb56 	bl	404f74 <__malloc_lock>
  4058c8:	68bb      	ldr	r3, [r7, #8]
  4058ca:	685d      	ldr	r5, [r3, #4]
  4058cc:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  4058d0:	310f      	adds	r1, #15
  4058d2:	f025 0503 	bic.w	r5, r5, #3
  4058d6:	4429      	add	r1, r5
  4058d8:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  4058dc:	f021 010f 	bic.w	r1, r1, #15
  4058e0:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  4058e4:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  4058e8:	db07      	blt.n	4058fa <_malloc_trim_r+0x3e>
  4058ea:	2100      	movs	r1, #0
  4058ec:	4630      	mov	r0, r6
  4058ee:	f7ff fe47 	bl	405580 <_sbrk_r>
  4058f2:	68bb      	ldr	r3, [r7, #8]
  4058f4:	442b      	add	r3, r5
  4058f6:	4298      	cmp	r0, r3
  4058f8:	d004      	beq.n	405904 <_malloc_trim_r+0x48>
  4058fa:	4630      	mov	r0, r6
  4058fc:	f7ff fb40 	bl	404f80 <__malloc_unlock>
  405900:	2000      	movs	r0, #0
  405902:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405904:	4261      	negs	r1, r4
  405906:	4630      	mov	r0, r6
  405908:	f7ff fe3a 	bl	405580 <_sbrk_r>
  40590c:	3001      	adds	r0, #1
  40590e:	d00d      	beq.n	40592c <_malloc_trim_r+0x70>
  405910:	4b10      	ldr	r3, [pc, #64]	; (405954 <_malloc_trim_r+0x98>)
  405912:	68ba      	ldr	r2, [r7, #8]
  405914:	6819      	ldr	r1, [r3, #0]
  405916:	1b2d      	subs	r5, r5, r4
  405918:	f045 0501 	orr.w	r5, r5, #1
  40591c:	4630      	mov	r0, r6
  40591e:	1b09      	subs	r1, r1, r4
  405920:	6055      	str	r5, [r2, #4]
  405922:	6019      	str	r1, [r3, #0]
  405924:	f7ff fb2c 	bl	404f80 <__malloc_unlock>
  405928:	2001      	movs	r0, #1
  40592a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40592c:	2100      	movs	r1, #0
  40592e:	4630      	mov	r0, r6
  405930:	f7ff fe26 	bl	405580 <_sbrk_r>
  405934:	68ba      	ldr	r2, [r7, #8]
  405936:	1a83      	subs	r3, r0, r2
  405938:	2b0f      	cmp	r3, #15
  40593a:	ddde      	ble.n	4058fa <_malloc_trim_r+0x3e>
  40593c:	4c06      	ldr	r4, [pc, #24]	; (405958 <_malloc_trim_r+0x9c>)
  40593e:	4905      	ldr	r1, [pc, #20]	; (405954 <_malloc_trim_r+0x98>)
  405940:	6824      	ldr	r4, [r4, #0]
  405942:	f043 0301 	orr.w	r3, r3, #1
  405946:	1b00      	subs	r0, r0, r4
  405948:	6053      	str	r3, [r2, #4]
  40594a:	6008      	str	r0, [r1, #0]
  40594c:	e7d5      	b.n	4058fa <_malloc_trim_r+0x3e>
  40594e:	bf00      	nop
  405950:	20400454 	.word	0x20400454
  405954:	20400c80 	.word	0x20400c80
  405958:	2040085c 	.word	0x2040085c

0040595c <_free_r>:
  40595c:	2900      	cmp	r1, #0
  40595e:	d044      	beq.n	4059ea <_free_r+0x8e>
  405960:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405964:	460d      	mov	r5, r1
  405966:	4680      	mov	r8, r0
  405968:	f7ff fb04 	bl	404f74 <__malloc_lock>
  40596c:	f855 7c04 	ldr.w	r7, [r5, #-4]
  405970:	4969      	ldr	r1, [pc, #420]	; (405b18 <_free_r+0x1bc>)
  405972:	f027 0301 	bic.w	r3, r7, #1
  405976:	f1a5 0408 	sub.w	r4, r5, #8
  40597a:	18e2      	adds	r2, r4, r3
  40597c:	688e      	ldr	r6, [r1, #8]
  40597e:	6850      	ldr	r0, [r2, #4]
  405980:	42b2      	cmp	r2, r6
  405982:	f020 0003 	bic.w	r0, r0, #3
  405986:	d05e      	beq.n	405a46 <_free_r+0xea>
  405988:	07fe      	lsls	r6, r7, #31
  40598a:	6050      	str	r0, [r2, #4]
  40598c:	d40b      	bmi.n	4059a6 <_free_r+0x4a>
  40598e:	f855 7c08 	ldr.w	r7, [r5, #-8]
  405992:	1be4      	subs	r4, r4, r7
  405994:	f101 0e08 	add.w	lr, r1, #8
  405998:	68a5      	ldr	r5, [r4, #8]
  40599a:	4575      	cmp	r5, lr
  40599c:	443b      	add	r3, r7
  40599e:	d06d      	beq.n	405a7c <_free_r+0x120>
  4059a0:	68e7      	ldr	r7, [r4, #12]
  4059a2:	60ef      	str	r7, [r5, #12]
  4059a4:	60bd      	str	r5, [r7, #8]
  4059a6:	1815      	adds	r5, r2, r0
  4059a8:	686d      	ldr	r5, [r5, #4]
  4059aa:	07ed      	lsls	r5, r5, #31
  4059ac:	d53e      	bpl.n	405a2c <_free_r+0xd0>
  4059ae:	f043 0201 	orr.w	r2, r3, #1
  4059b2:	6062      	str	r2, [r4, #4]
  4059b4:	50e3      	str	r3, [r4, r3]
  4059b6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4059ba:	d217      	bcs.n	4059ec <_free_r+0x90>
  4059bc:	08db      	lsrs	r3, r3, #3
  4059be:	1c58      	adds	r0, r3, #1
  4059c0:	109a      	asrs	r2, r3, #2
  4059c2:	684d      	ldr	r5, [r1, #4]
  4059c4:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  4059c8:	60a7      	str	r7, [r4, #8]
  4059ca:	2301      	movs	r3, #1
  4059cc:	4093      	lsls	r3, r2
  4059ce:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  4059d2:	432b      	orrs	r3, r5
  4059d4:	3a08      	subs	r2, #8
  4059d6:	60e2      	str	r2, [r4, #12]
  4059d8:	604b      	str	r3, [r1, #4]
  4059da:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  4059de:	60fc      	str	r4, [r7, #12]
  4059e0:	4640      	mov	r0, r8
  4059e2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4059e6:	f7ff bacb 	b.w	404f80 <__malloc_unlock>
  4059ea:	4770      	bx	lr
  4059ec:	0a5a      	lsrs	r2, r3, #9
  4059ee:	2a04      	cmp	r2, #4
  4059f0:	d852      	bhi.n	405a98 <_free_r+0x13c>
  4059f2:	099a      	lsrs	r2, r3, #6
  4059f4:	f102 0739 	add.w	r7, r2, #57	; 0x39
  4059f8:	00ff      	lsls	r7, r7, #3
  4059fa:	f102 0538 	add.w	r5, r2, #56	; 0x38
  4059fe:	19c8      	adds	r0, r1, r7
  405a00:	59ca      	ldr	r2, [r1, r7]
  405a02:	3808      	subs	r0, #8
  405a04:	4290      	cmp	r0, r2
  405a06:	d04f      	beq.n	405aa8 <_free_r+0x14c>
  405a08:	6851      	ldr	r1, [r2, #4]
  405a0a:	f021 0103 	bic.w	r1, r1, #3
  405a0e:	428b      	cmp	r3, r1
  405a10:	d232      	bcs.n	405a78 <_free_r+0x11c>
  405a12:	6892      	ldr	r2, [r2, #8]
  405a14:	4290      	cmp	r0, r2
  405a16:	d1f7      	bne.n	405a08 <_free_r+0xac>
  405a18:	68c3      	ldr	r3, [r0, #12]
  405a1a:	60a0      	str	r0, [r4, #8]
  405a1c:	60e3      	str	r3, [r4, #12]
  405a1e:	609c      	str	r4, [r3, #8]
  405a20:	60c4      	str	r4, [r0, #12]
  405a22:	4640      	mov	r0, r8
  405a24:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405a28:	f7ff baaa 	b.w	404f80 <__malloc_unlock>
  405a2c:	6895      	ldr	r5, [r2, #8]
  405a2e:	4f3b      	ldr	r7, [pc, #236]	; (405b1c <_free_r+0x1c0>)
  405a30:	42bd      	cmp	r5, r7
  405a32:	4403      	add	r3, r0
  405a34:	d040      	beq.n	405ab8 <_free_r+0x15c>
  405a36:	68d0      	ldr	r0, [r2, #12]
  405a38:	60e8      	str	r0, [r5, #12]
  405a3a:	f043 0201 	orr.w	r2, r3, #1
  405a3e:	6085      	str	r5, [r0, #8]
  405a40:	6062      	str	r2, [r4, #4]
  405a42:	50e3      	str	r3, [r4, r3]
  405a44:	e7b7      	b.n	4059b6 <_free_r+0x5a>
  405a46:	07ff      	lsls	r7, r7, #31
  405a48:	4403      	add	r3, r0
  405a4a:	d407      	bmi.n	405a5c <_free_r+0x100>
  405a4c:	f855 2c08 	ldr.w	r2, [r5, #-8]
  405a50:	1aa4      	subs	r4, r4, r2
  405a52:	4413      	add	r3, r2
  405a54:	68a0      	ldr	r0, [r4, #8]
  405a56:	68e2      	ldr	r2, [r4, #12]
  405a58:	60c2      	str	r2, [r0, #12]
  405a5a:	6090      	str	r0, [r2, #8]
  405a5c:	4a30      	ldr	r2, [pc, #192]	; (405b20 <_free_r+0x1c4>)
  405a5e:	6812      	ldr	r2, [r2, #0]
  405a60:	f043 0001 	orr.w	r0, r3, #1
  405a64:	4293      	cmp	r3, r2
  405a66:	6060      	str	r0, [r4, #4]
  405a68:	608c      	str	r4, [r1, #8]
  405a6a:	d3b9      	bcc.n	4059e0 <_free_r+0x84>
  405a6c:	4b2d      	ldr	r3, [pc, #180]	; (405b24 <_free_r+0x1c8>)
  405a6e:	4640      	mov	r0, r8
  405a70:	6819      	ldr	r1, [r3, #0]
  405a72:	f7ff ff23 	bl	4058bc <_malloc_trim_r>
  405a76:	e7b3      	b.n	4059e0 <_free_r+0x84>
  405a78:	4610      	mov	r0, r2
  405a7a:	e7cd      	b.n	405a18 <_free_r+0xbc>
  405a7c:	1811      	adds	r1, r2, r0
  405a7e:	6849      	ldr	r1, [r1, #4]
  405a80:	07c9      	lsls	r1, r1, #31
  405a82:	d444      	bmi.n	405b0e <_free_r+0x1b2>
  405a84:	6891      	ldr	r1, [r2, #8]
  405a86:	68d2      	ldr	r2, [r2, #12]
  405a88:	60ca      	str	r2, [r1, #12]
  405a8a:	4403      	add	r3, r0
  405a8c:	f043 0001 	orr.w	r0, r3, #1
  405a90:	6091      	str	r1, [r2, #8]
  405a92:	6060      	str	r0, [r4, #4]
  405a94:	50e3      	str	r3, [r4, r3]
  405a96:	e7a3      	b.n	4059e0 <_free_r+0x84>
  405a98:	2a14      	cmp	r2, #20
  405a9a:	d816      	bhi.n	405aca <_free_r+0x16e>
  405a9c:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  405aa0:	00ff      	lsls	r7, r7, #3
  405aa2:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  405aa6:	e7aa      	b.n	4059fe <_free_r+0xa2>
  405aa8:	10aa      	asrs	r2, r5, #2
  405aaa:	2301      	movs	r3, #1
  405aac:	684d      	ldr	r5, [r1, #4]
  405aae:	4093      	lsls	r3, r2
  405ab0:	432b      	orrs	r3, r5
  405ab2:	604b      	str	r3, [r1, #4]
  405ab4:	4603      	mov	r3, r0
  405ab6:	e7b0      	b.n	405a1a <_free_r+0xbe>
  405ab8:	f043 0201 	orr.w	r2, r3, #1
  405abc:	614c      	str	r4, [r1, #20]
  405abe:	610c      	str	r4, [r1, #16]
  405ac0:	60e5      	str	r5, [r4, #12]
  405ac2:	60a5      	str	r5, [r4, #8]
  405ac4:	6062      	str	r2, [r4, #4]
  405ac6:	50e3      	str	r3, [r4, r3]
  405ac8:	e78a      	b.n	4059e0 <_free_r+0x84>
  405aca:	2a54      	cmp	r2, #84	; 0x54
  405acc:	d806      	bhi.n	405adc <_free_r+0x180>
  405ace:	0b1a      	lsrs	r2, r3, #12
  405ad0:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  405ad4:	00ff      	lsls	r7, r7, #3
  405ad6:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  405ada:	e790      	b.n	4059fe <_free_r+0xa2>
  405adc:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  405ae0:	d806      	bhi.n	405af0 <_free_r+0x194>
  405ae2:	0bda      	lsrs	r2, r3, #15
  405ae4:	f102 0778 	add.w	r7, r2, #120	; 0x78
  405ae8:	00ff      	lsls	r7, r7, #3
  405aea:	f102 0577 	add.w	r5, r2, #119	; 0x77
  405aee:	e786      	b.n	4059fe <_free_r+0xa2>
  405af0:	f240 5054 	movw	r0, #1364	; 0x554
  405af4:	4282      	cmp	r2, r0
  405af6:	d806      	bhi.n	405b06 <_free_r+0x1aa>
  405af8:	0c9a      	lsrs	r2, r3, #18
  405afa:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  405afe:	00ff      	lsls	r7, r7, #3
  405b00:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  405b04:	e77b      	b.n	4059fe <_free_r+0xa2>
  405b06:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  405b0a:	257e      	movs	r5, #126	; 0x7e
  405b0c:	e777      	b.n	4059fe <_free_r+0xa2>
  405b0e:	f043 0101 	orr.w	r1, r3, #1
  405b12:	6061      	str	r1, [r4, #4]
  405b14:	6013      	str	r3, [r2, #0]
  405b16:	e763      	b.n	4059e0 <_free_r+0x84>
  405b18:	20400454 	.word	0x20400454
  405b1c:	2040045c 	.word	0x2040045c
  405b20:	20400860 	.word	0x20400860
  405b24:	20400cb0 	.word	0x20400cb0

00405b28 <__ascii_mbtowc>:
  405b28:	b082      	sub	sp, #8
  405b2a:	b149      	cbz	r1, 405b40 <__ascii_mbtowc+0x18>
  405b2c:	b15a      	cbz	r2, 405b46 <__ascii_mbtowc+0x1e>
  405b2e:	b16b      	cbz	r3, 405b4c <__ascii_mbtowc+0x24>
  405b30:	7813      	ldrb	r3, [r2, #0]
  405b32:	600b      	str	r3, [r1, #0]
  405b34:	7812      	ldrb	r2, [r2, #0]
  405b36:	1c10      	adds	r0, r2, #0
  405b38:	bf18      	it	ne
  405b3a:	2001      	movne	r0, #1
  405b3c:	b002      	add	sp, #8
  405b3e:	4770      	bx	lr
  405b40:	a901      	add	r1, sp, #4
  405b42:	2a00      	cmp	r2, #0
  405b44:	d1f3      	bne.n	405b2e <__ascii_mbtowc+0x6>
  405b46:	4610      	mov	r0, r2
  405b48:	b002      	add	sp, #8
  405b4a:	4770      	bx	lr
  405b4c:	f06f 0001 	mvn.w	r0, #1
  405b50:	e7f4      	b.n	405b3c <__ascii_mbtowc+0x14>
  405b52:	bf00      	nop

00405b54 <memmove>:
  405b54:	4288      	cmp	r0, r1
  405b56:	b5f0      	push	{r4, r5, r6, r7, lr}
  405b58:	d90d      	bls.n	405b76 <memmove+0x22>
  405b5a:	188b      	adds	r3, r1, r2
  405b5c:	4298      	cmp	r0, r3
  405b5e:	d20a      	bcs.n	405b76 <memmove+0x22>
  405b60:	1884      	adds	r4, r0, r2
  405b62:	2a00      	cmp	r2, #0
  405b64:	d051      	beq.n	405c0a <memmove+0xb6>
  405b66:	4622      	mov	r2, r4
  405b68:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  405b6c:	f802 4d01 	strb.w	r4, [r2, #-1]!
  405b70:	4299      	cmp	r1, r3
  405b72:	d1f9      	bne.n	405b68 <memmove+0x14>
  405b74:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405b76:	2a0f      	cmp	r2, #15
  405b78:	d948      	bls.n	405c0c <memmove+0xb8>
  405b7a:	ea41 0300 	orr.w	r3, r1, r0
  405b7e:	079b      	lsls	r3, r3, #30
  405b80:	d146      	bne.n	405c10 <memmove+0xbc>
  405b82:	f100 0410 	add.w	r4, r0, #16
  405b86:	f101 0310 	add.w	r3, r1, #16
  405b8a:	4615      	mov	r5, r2
  405b8c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  405b90:	f844 6c10 	str.w	r6, [r4, #-16]
  405b94:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  405b98:	f844 6c0c 	str.w	r6, [r4, #-12]
  405b9c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  405ba0:	f844 6c08 	str.w	r6, [r4, #-8]
  405ba4:	3d10      	subs	r5, #16
  405ba6:	f853 6c04 	ldr.w	r6, [r3, #-4]
  405baa:	f844 6c04 	str.w	r6, [r4, #-4]
  405bae:	2d0f      	cmp	r5, #15
  405bb0:	f103 0310 	add.w	r3, r3, #16
  405bb4:	f104 0410 	add.w	r4, r4, #16
  405bb8:	d8e8      	bhi.n	405b8c <memmove+0x38>
  405bba:	f1a2 0310 	sub.w	r3, r2, #16
  405bbe:	f023 030f 	bic.w	r3, r3, #15
  405bc2:	f002 0e0f 	and.w	lr, r2, #15
  405bc6:	3310      	adds	r3, #16
  405bc8:	f1be 0f03 	cmp.w	lr, #3
  405bcc:	4419      	add	r1, r3
  405bce:	4403      	add	r3, r0
  405bd0:	d921      	bls.n	405c16 <memmove+0xc2>
  405bd2:	1f1e      	subs	r6, r3, #4
  405bd4:	460d      	mov	r5, r1
  405bd6:	4674      	mov	r4, lr
  405bd8:	3c04      	subs	r4, #4
  405bda:	f855 7b04 	ldr.w	r7, [r5], #4
  405bde:	f846 7f04 	str.w	r7, [r6, #4]!
  405be2:	2c03      	cmp	r4, #3
  405be4:	d8f8      	bhi.n	405bd8 <memmove+0x84>
  405be6:	f1ae 0404 	sub.w	r4, lr, #4
  405bea:	f024 0403 	bic.w	r4, r4, #3
  405bee:	3404      	adds	r4, #4
  405bf0:	4421      	add	r1, r4
  405bf2:	4423      	add	r3, r4
  405bf4:	f002 0203 	and.w	r2, r2, #3
  405bf8:	b162      	cbz	r2, 405c14 <memmove+0xc0>
  405bfa:	3b01      	subs	r3, #1
  405bfc:	440a      	add	r2, r1
  405bfe:	f811 4b01 	ldrb.w	r4, [r1], #1
  405c02:	f803 4f01 	strb.w	r4, [r3, #1]!
  405c06:	428a      	cmp	r2, r1
  405c08:	d1f9      	bne.n	405bfe <memmove+0xaa>
  405c0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405c0c:	4603      	mov	r3, r0
  405c0e:	e7f3      	b.n	405bf8 <memmove+0xa4>
  405c10:	4603      	mov	r3, r0
  405c12:	e7f2      	b.n	405bfa <memmove+0xa6>
  405c14:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405c16:	4672      	mov	r2, lr
  405c18:	e7ee      	b.n	405bf8 <memmove+0xa4>
  405c1a:	bf00      	nop

00405c1c <_realloc_r>:
  405c1c:	2900      	cmp	r1, #0
  405c1e:	f000 8095 	beq.w	405d4c <_realloc_r+0x130>
  405c22:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405c26:	460d      	mov	r5, r1
  405c28:	4616      	mov	r6, r2
  405c2a:	b083      	sub	sp, #12
  405c2c:	4680      	mov	r8, r0
  405c2e:	f106 070b 	add.w	r7, r6, #11
  405c32:	f7ff f99f 	bl	404f74 <__malloc_lock>
  405c36:	f855 ec04 	ldr.w	lr, [r5, #-4]
  405c3a:	2f16      	cmp	r7, #22
  405c3c:	f02e 0403 	bic.w	r4, lr, #3
  405c40:	f1a5 0908 	sub.w	r9, r5, #8
  405c44:	d83c      	bhi.n	405cc0 <_realloc_r+0xa4>
  405c46:	2210      	movs	r2, #16
  405c48:	4617      	mov	r7, r2
  405c4a:	42be      	cmp	r6, r7
  405c4c:	d83d      	bhi.n	405cca <_realloc_r+0xae>
  405c4e:	4294      	cmp	r4, r2
  405c50:	da43      	bge.n	405cda <_realloc_r+0xbe>
  405c52:	4bc4      	ldr	r3, [pc, #784]	; (405f64 <_realloc_r+0x348>)
  405c54:	6899      	ldr	r1, [r3, #8]
  405c56:	eb09 0004 	add.w	r0, r9, r4
  405c5a:	4288      	cmp	r0, r1
  405c5c:	f000 80b4 	beq.w	405dc8 <_realloc_r+0x1ac>
  405c60:	6843      	ldr	r3, [r0, #4]
  405c62:	f023 0101 	bic.w	r1, r3, #1
  405c66:	4401      	add	r1, r0
  405c68:	6849      	ldr	r1, [r1, #4]
  405c6a:	07c9      	lsls	r1, r1, #31
  405c6c:	d54c      	bpl.n	405d08 <_realloc_r+0xec>
  405c6e:	f01e 0f01 	tst.w	lr, #1
  405c72:	f000 809b 	beq.w	405dac <_realloc_r+0x190>
  405c76:	4631      	mov	r1, r6
  405c78:	4640      	mov	r0, r8
  405c7a:	f7fe fddf 	bl	40483c <_malloc_r>
  405c7e:	4606      	mov	r6, r0
  405c80:	2800      	cmp	r0, #0
  405c82:	d03a      	beq.n	405cfa <_realloc_r+0xde>
  405c84:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405c88:	f023 0301 	bic.w	r3, r3, #1
  405c8c:	444b      	add	r3, r9
  405c8e:	f1a0 0208 	sub.w	r2, r0, #8
  405c92:	429a      	cmp	r2, r3
  405c94:	f000 8121 	beq.w	405eda <_realloc_r+0x2be>
  405c98:	1f22      	subs	r2, r4, #4
  405c9a:	2a24      	cmp	r2, #36	; 0x24
  405c9c:	f200 8107 	bhi.w	405eae <_realloc_r+0x292>
  405ca0:	2a13      	cmp	r2, #19
  405ca2:	f200 80db 	bhi.w	405e5c <_realloc_r+0x240>
  405ca6:	4603      	mov	r3, r0
  405ca8:	462a      	mov	r2, r5
  405caa:	6811      	ldr	r1, [r2, #0]
  405cac:	6019      	str	r1, [r3, #0]
  405cae:	6851      	ldr	r1, [r2, #4]
  405cb0:	6059      	str	r1, [r3, #4]
  405cb2:	6892      	ldr	r2, [r2, #8]
  405cb4:	609a      	str	r2, [r3, #8]
  405cb6:	4629      	mov	r1, r5
  405cb8:	4640      	mov	r0, r8
  405cba:	f7ff fe4f 	bl	40595c <_free_r>
  405cbe:	e01c      	b.n	405cfa <_realloc_r+0xde>
  405cc0:	f027 0707 	bic.w	r7, r7, #7
  405cc4:	2f00      	cmp	r7, #0
  405cc6:	463a      	mov	r2, r7
  405cc8:	dabf      	bge.n	405c4a <_realloc_r+0x2e>
  405cca:	2600      	movs	r6, #0
  405ccc:	230c      	movs	r3, #12
  405cce:	4630      	mov	r0, r6
  405cd0:	f8c8 3000 	str.w	r3, [r8]
  405cd4:	b003      	add	sp, #12
  405cd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405cda:	462e      	mov	r6, r5
  405cdc:	1be3      	subs	r3, r4, r7
  405cde:	2b0f      	cmp	r3, #15
  405ce0:	d81e      	bhi.n	405d20 <_realloc_r+0x104>
  405ce2:	f8d9 3004 	ldr.w	r3, [r9, #4]
  405ce6:	f003 0301 	and.w	r3, r3, #1
  405cea:	4323      	orrs	r3, r4
  405cec:	444c      	add	r4, r9
  405cee:	f8c9 3004 	str.w	r3, [r9, #4]
  405cf2:	6863      	ldr	r3, [r4, #4]
  405cf4:	f043 0301 	orr.w	r3, r3, #1
  405cf8:	6063      	str	r3, [r4, #4]
  405cfa:	4640      	mov	r0, r8
  405cfc:	f7ff f940 	bl	404f80 <__malloc_unlock>
  405d00:	4630      	mov	r0, r6
  405d02:	b003      	add	sp, #12
  405d04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405d08:	f023 0303 	bic.w	r3, r3, #3
  405d0c:	18e1      	adds	r1, r4, r3
  405d0e:	4291      	cmp	r1, r2
  405d10:	db1f      	blt.n	405d52 <_realloc_r+0x136>
  405d12:	68c3      	ldr	r3, [r0, #12]
  405d14:	6882      	ldr	r2, [r0, #8]
  405d16:	462e      	mov	r6, r5
  405d18:	60d3      	str	r3, [r2, #12]
  405d1a:	460c      	mov	r4, r1
  405d1c:	609a      	str	r2, [r3, #8]
  405d1e:	e7dd      	b.n	405cdc <_realloc_r+0xc0>
  405d20:	f8d9 2004 	ldr.w	r2, [r9, #4]
  405d24:	eb09 0107 	add.w	r1, r9, r7
  405d28:	f002 0201 	and.w	r2, r2, #1
  405d2c:	444c      	add	r4, r9
  405d2e:	f043 0301 	orr.w	r3, r3, #1
  405d32:	4317      	orrs	r7, r2
  405d34:	f8c9 7004 	str.w	r7, [r9, #4]
  405d38:	604b      	str	r3, [r1, #4]
  405d3a:	6863      	ldr	r3, [r4, #4]
  405d3c:	f043 0301 	orr.w	r3, r3, #1
  405d40:	3108      	adds	r1, #8
  405d42:	6063      	str	r3, [r4, #4]
  405d44:	4640      	mov	r0, r8
  405d46:	f7ff fe09 	bl	40595c <_free_r>
  405d4a:	e7d6      	b.n	405cfa <_realloc_r+0xde>
  405d4c:	4611      	mov	r1, r2
  405d4e:	f7fe bd75 	b.w	40483c <_malloc_r>
  405d52:	f01e 0f01 	tst.w	lr, #1
  405d56:	d18e      	bne.n	405c76 <_realloc_r+0x5a>
  405d58:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405d5c:	eba9 0a01 	sub.w	sl, r9, r1
  405d60:	f8da 1004 	ldr.w	r1, [sl, #4]
  405d64:	f021 0103 	bic.w	r1, r1, #3
  405d68:	440b      	add	r3, r1
  405d6a:	4423      	add	r3, r4
  405d6c:	4293      	cmp	r3, r2
  405d6e:	db25      	blt.n	405dbc <_realloc_r+0x1a0>
  405d70:	68c2      	ldr	r2, [r0, #12]
  405d72:	6881      	ldr	r1, [r0, #8]
  405d74:	4656      	mov	r6, sl
  405d76:	60ca      	str	r2, [r1, #12]
  405d78:	6091      	str	r1, [r2, #8]
  405d7a:	f8da 100c 	ldr.w	r1, [sl, #12]
  405d7e:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405d82:	1f22      	subs	r2, r4, #4
  405d84:	2a24      	cmp	r2, #36	; 0x24
  405d86:	60c1      	str	r1, [r0, #12]
  405d88:	6088      	str	r0, [r1, #8]
  405d8a:	f200 8094 	bhi.w	405eb6 <_realloc_r+0x29a>
  405d8e:	2a13      	cmp	r2, #19
  405d90:	d96f      	bls.n	405e72 <_realloc_r+0x256>
  405d92:	6829      	ldr	r1, [r5, #0]
  405d94:	f8ca 1008 	str.w	r1, [sl, #8]
  405d98:	6869      	ldr	r1, [r5, #4]
  405d9a:	f8ca 100c 	str.w	r1, [sl, #12]
  405d9e:	2a1b      	cmp	r2, #27
  405da0:	f200 80a2 	bhi.w	405ee8 <_realloc_r+0x2cc>
  405da4:	3508      	adds	r5, #8
  405da6:	f10a 0210 	add.w	r2, sl, #16
  405daa:	e063      	b.n	405e74 <_realloc_r+0x258>
  405dac:	f855 3c08 	ldr.w	r3, [r5, #-8]
  405db0:	eba9 0a03 	sub.w	sl, r9, r3
  405db4:	f8da 1004 	ldr.w	r1, [sl, #4]
  405db8:	f021 0103 	bic.w	r1, r1, #3
  405dbc:	1863      	adds	r3, r4, r1
  405dbe:	4293      	cmp	r3, r2
  405dc0:	f6ff af59 	blt.w	405c76 <_realloc_r+0x5a>
  405dc4:	4656      	mov	r6, sl
  405dc6:	e7d8      	b.n	405d7a <_realloc_r+0x15e>
  405dc8:	6841      	ldr	r1, [r0, #4]
  405dca:	f021 0b03 	bic.w	fp, r1, #3
  405dce:	44a3      	add	fp, r4
  405dd0:	f107 0010 	add.w	r0, r7, #16
  405dd4:	4583      	cmp	fp, r0
  405dd6:	da56      	bge.n	405e86 <_realloc_r+0x26a>
  405dd8:	f01e 0f01 	tst.w	lr, #1
  405ddc:	f47f af4b 	bne.w	405c76 <_realloc_r+0x5a>
  405de0:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405de4:	eba9 0a01 	sub.w	sl, r9, r1
  405de8:	f8da 1004 	ldr.w	r1, [sl, #4]
  405dec:	f021 0103 	bic.w	r1, r1, #3
  405df0:	448b      	add	fp, r1
  405df2:	4558      	cmp	r0, fp
  405df4:	dce2      	bgt.n	405dbc <_realloc_r+0x1a0>
  405df6:	4656      	mov	r6, sl
  405df8:	f8da 100c 	ldr.w	r1, [sl, #12]
  405dfc:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405e00:	1f22      	subs	r2, r4, #4
  405e02:	2a24      	cmp	r2, #36	; 0x24
  405e04:	60c1      	str	r1, [r0, #12]
  405e06:	6088      	str	r0, [r1, #8]
  405e08:	f200 808f 	bhi.w	405f2a <_realloc_r+0x30e>
  405e0c:	2a13      	cmp	r2, #19
  405e0e:	f240 808a 	bls.w	405f26 <_realloc_r+0x30a>
  405e12:	6829      	ldr	r1, [r5, #0]
  405e14:	f8ca 1008 	str.w	r1, [sl, #8]
  405e18:	6869      	ldr	r1, [r5, #4]
  405e1a:	f8ca 100c 	str.w	r1, [sl, #12]
  405e1e:	2a1b      	cmp	r2, #27
  405e20:	f200 808a 	bhi.w	405f38 <_realloc_r+0x31c>
  405e24:	3508      	adds	r5, #8
  405e26:	f10a 0210 	add.w	r2, sl, #16
  405e2a:	6829      	ldr	r1, [r5, #0]
  405e2c:	6011      	str	r1, [r2, #0]
  405e2e:	6869      	ldr	r1, [r5, #4]
  405e30:	6051      	str	r1, [r2, #4]
  405e32:	68a9      	ldr	r1, [r5, #8]
  405e34:	6091      	str	r1, [r2, #8]
  405e36:	eb0a 0107 	add.w	r1, sl, r7
  405e3a:	ebab 0207 	sub.w	r2, fp, r7
  405e3e:	f042 0201 	orr.w	r2, r2, #1
  405e42:	6099      	str	r1, [r3, #8]
  405e44:	604a      	str	r2, [r1, #4]
  405e46:	f8da 3004 	ldr.w	r3, [sl, #4]
  405e4a:	f003 0301 	and.w	r3, r3, #1
  405e4e:	431f      	orrs	r7, r3
  405e50:	4640      	mov	r0, r8
  405e52:	f8ca 7004 	str.w	r7, [sl, #4]
  405e56:	f7ff f893 	bl	404f80 <__malloc_unlock>
  405e5a:	e751      	b.n	405d00 <_realloc_r+0xe4>
  405e5c:	682b      	ldr	r3, [r5, #0]
  405e5e:	6003      	str	r3, [r0, #0]
  405e60:	686b      	ldr	r3, [r5, #4]
  405e62:	6043      	str	r3, [r0, #4]
  405e64:	2a1b      	cmp	r2, #27
  405e66:	d82d      	bhi.n	405ec4 <_realloc_r+0x2a8>
  405e68:	f100 0308 	add.w	r3, r0, #8
  405e6c:	f105 0208 	add.w	r2, r5, #8
  405e70:	e71b      	b.n	405caa <_realloc_r+0x8e>
  405e72:	4632      	mov	r2, r6
  405e74:	6829      	ldr	r1, [r5, #0]
  405e76:	6011      	str	r1, [r2, #0]
  405e78:	6869      	ldr	r1, [r5, #4]
  405e7a:	6051      	str	r1, [r2, #4]
  405e7c:	68a9      	ldr	r1, [r5, #8]
  405e7e:	6091      	str	r1, [r2, #8]
  405e80:	461c      	mov	r4, r3
  405e82:	46d1      	mov	r9, sl
  405e84:	e72a      	b.n	405cdc <_realloc_r+0xc0>
  405e86:	eb09 0107 	add.w	r1, r9, r7
  405e8a:	ebab 0b07 	sub.w	fp, fp, r7
  405e8e:	f04b 0201 	orr.w	r2, fp, #1
  405e92:	6099      	str	r1, [r3, #8]
  405e94:	604a      	str	r2, [r1, #4]
  405e96:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405e9a:	f003 0301 	and.w	r3, r3, #1
  405e9e:	431f      	orrs	r7, r3
  405ea0:	4640      	mov	r0, r8
  405ea2:	f845 7c04 	str.w	r7, [r5, #-4]
  405ea6:	f7ff f86b 	bl	404f80 <__malloc_unlock>
  405eaa:	462e      	mov	r6, r5
  405eac:	e728      	b.n	405d00 <_realloc_r+0xe4>
  405eae:	4629      	mov	r1, r5
  405eb0:	f7ff fe50 	bl	405b54 <memmove>
  405eb4:	e6ff      	b.n	405cb6 <_realloc_r+0x9a>
  405eb6:	4629      	mov	r1, r5
  405eb8:	4630      	mov	r0, r6
  405eba:	461c      	mov	r4, r3
  405ebc:	46d1      	mov	r9, sl
  405ebe:	f7ff fe49 	bl	405b54 <memmove>
  405ec2:	e70b      	b.n	405cdc <_realloc_r+0xc0>
  405ec4:	68ab      	ldr	r3, [r5, #8]
  405ec6:	6083      	str	r3, [r0, #8]
  405ec8:	68eb      	ldr	r3, [r5, #12]
  405eca:	60c3      	str	r3, [r0, #12]
  405ecc:	2a24      	cmp	r2, #36	; 0x24
  405ece:	d017      	beq.n	405f00 <_realloc_r+0x2e4>
  405ed0:	f100 0310 	add.w	r3, r0, #16
  405ed4:	f105 0210 	add.w	r2, r5, #16
  405ed8:	e6e7      	b.n	405caa <_realloc_r+0x8e>
  405eda:	f850 3c04 	ldr.w	r3, [r0, #-4]
  405ede:	f023 0303 	bic.w	r3, r3, #3
  405ee2:	441c      	add	r4, r3
  405ee4:	462e      	mov	r6, r5
  405ee6:	e6f9      	b.n	405cdc <_realloc_r+0xc0>
  405ee8:	68a9      	ldr	r1, [r5, #8]
  405eea:	f8ca 1010 	str.w	r1, [sl, #16]
  405eee:	68e9      	ldr	r1, [r5, #12]
  405ef0:	f8ca 1014 	str.w	r1, [sl, #20]
  405ef4:	2a24      	cmp	r2, #36	; 0x24
  405ef6:	d00c      	beq.n	405f12 <_realloc_r+0x2f6>
  405ef8:	3510      	adds	r5, #16
  405efa:	f10a 0218 	add.w	r2, sl, #24
  405efe:	e7b9      	b.n	405e74 <_realloc_r+0x258>
  405f00:	692b      	ldr	r3, [r5, #16]
  405f02:	6103      	str	r3, [r0, #16]
  405f04:	696b      	ldr	r3, [r5, #20]
  405f06:	6143      	str	r3, [r0, #20]
  405f08:	f105 0218 	add.w	r2, r5, #24
  405f0c:	f100 0318 	add.w	r3, r0, #24
  405f10:	e6cb      	b.n	405caa <_realloc_r+0x8e>
  405f12:	692a      	ldr	r2, [r5, #16]
  405f14:	f8ca 2018 	str.w	r2, [sl, #24]
  405f18:	696a      	ldr	r2, [r5, #20]
  405f1a:	f8ca 201c 	str.w	r2, [sl, #28]
  405f1e:	3518      	adds	r5, #24
  405f20:	f10a 0220 	add.w	r2, sl, #32
  405f24:	e7a6      	b.n	405e74 <_realloc_r+0x258>
  405f26:	4632      	mov	r2, r6
  405f28:	e77f      	b.n	405e2a <_realloc_r+0x20e>
  405f2a:	4629      	mov	r1, r5
  405f2c:	4630      	mov	r0, r6
  405f2e:	9301      	str	r3, [sp, #4]
  405f30:	f7ff fe10 	bl	405b54 <memmove>
  405f34:	9b01      	ldr	r3, [sp, #4]
  405f36:	e77e      	b.n	405e36 <_realloc_r+0x21a>
  405f38:	68a9      	ldr	r1, [r5, #8]
  405f3a:	f8ca 1010 	str.w	r1, [sl, #16]
  405f3e:	68e9      	ldr	r1, [r5, #12]
  405f40:	f8ca 1014 	str.w	r1, [sl, #20]
  405f44:	2a24      	cmp	r2, #36	; 0x24
  405f46:	d003      	beq.n	405f50 <_realloc_r+0x334>
  405f48:	3510      	adds	r5, #16
  405f4a:	f10a 0218 	add.w	r2, sl, #24
  405f4e:	e76c      	b.n	405e2a <_realloc_r+0x20e>
  405f50:	692a      	ldr	r2, [r5, #16]
  405f52:	f8ca 2018 	str.w	r2, [sl, #24]
  405f56:	696a      	ldr	r2, [r5, #20]
  405f58:	f8ca 201c 	str.w	r2, [sl, #28]
  405f5c:	3518      	adds	r5, #24
  405f5e:	f10a 0220 	add.w	r2, sl, #32
  405f62:	e762      	b.n	405e2a <_realloc_r+0x20e>
  405f64:	20400454 	.word	0x20400454

00405f68 <__ascii_wctomb>:
  405f68:	b121      	cbz	r1, 405f74 <__ascii_wctomb+0xc>
  405f6a:	2aff      	cmp	r2, #255	; 0xff
  405f6c:	d804      	bhi.n	405f78 <__ascii_wctomb+0x10>
  405f6e:	700a      	strb	r2, [r1, #0]
  405f70:	2001      	movs	r0, #1
  405f72:	4770      	bx	lr
  405f74:	4608      	mov	r0, r1
  405f76:	4770      	bx	lr
  405f78:	238a      	movs	r3, #138	; 0x8a
  405f7a:	6003      	str	r3, [r0, #0]
  405f7c:	f04f 30ff 	mov.w	r0, #4294967295
  405f80:	4770      	bx	lr
  405f82:	bf00      	nop

00405f84 <__gedf2>:
  405f84:	f04f 3cff 	mov.w	ip, #4294967295
  405f88:	e006      	b.n	405f98 <__cmpdf2+0x4>
  405f8a:	bf00      	nop

00405f8c <__ledf2>:
  405f8c:	f04f 0c01 	mov.w	ip, #1
  405f90:	e002      	b.n	405f98 <__cmpdf2+0x4>
  405f92:	bf00      	nop

00405f94 <__cmpdf2>:
  405f94:	f04f 0c01 	mov.w	ip, #1
  405f98:	f84d cd04 	str.w	ip, [sp, #-4]!
  405f9c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405fa0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405fa4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405fa8:	bf18      	it	ne
  405faa:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  405fae:	d01b      	beq.n	405fe8 <__cmpdf2+0x54>
  405fb0:	b001      	add	sp, #4
  405fb2:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  405fb6:	bf0c      	ite	eq
  405fb8:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  405fbc:	ea91 0f03 	teqne	r1, r3
  405fc0:	bf02      	ittt	eq
  405fc2:	ea90 0f02 	teqeq	r0, r2
  405fc6:	2000      	moveq	r0, #0
  405fc8:	4770      	bxeq	lr
  405fca:	f110 0f00 	cmn.w	r0, #0
  405fce:	ea91 0f03 	teq	r1, r3
  405fd2:	bf58      	it	pl
  405fd4:	4299      	cmppl	r1, r3
  405fd6:	bf08      	it	eq
  405fd8:	4290      	cmpeq	r0, r2
  405fda:	bf2c      	ite	cs
  405fdc:	17d8      	asrcs	r0, r3, #31
  405fde:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  405fe2:	f040 0001 	orr.w	r0, r0, #1
  405fe6:	4770      	bx	lr
  405fe8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405fec:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405ff0:	d102      	bne.n	405ff8 <__cmpdf2+0x64>
  405ff2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  405ff6:	d107      	bne.n	406008 <__cmpdf2+0x74>
  405ff8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405ffc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406000:	d1d6      	bne.n	405fb0 <__cmpdf2+0x1c>
  406002:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  406006:	d0d3      	beq.n	405fb0 <__cmpdf2+0x1c>
  406008:	f85d 0b04 	ldr.w	r0, [sp], #4
  40600c:	4770      	bx	lr
  40600e:	bf00      	nop

00406010 <__aeabi_cdrcmple>:
  406010:	4684      	mov	ip, r0
  406012:	4610      	mov	r0, r2
  406014:	4662      	mov	r2, ip
  406016:	468c      	mov	ip, r1
  406018:	4619      	mov	r1, r3
  40601a:	4663      	mov	r3, ip
  40601c:	e000      	b.n	406020 <__aeabi_cdcmpeq>
  40601e:	bf00      	nop

00406020 <__aeabi_cdcmpeq>:
  406020:	b501      	push	{r0, lr}
  406022:	f7ff ffb7 	bl	405f94 <__cmpdf2>
  406026:	2800      	cmp	r0, #0
  406028:	bf48      	it	mi
  40602a:	f110 0f00 	cmnmi.w	r0, #0
  40602e:	bd01      	pop	{r0, pc}

00406030 <__aeabi_dcmpeq>:
  406030:	f84d ed08 	str.w	lr, [sp, #-8]!
  406034:	f7ff fff4 	bl	406020 <__aeabi_cdcmpeq>
  406038:	bf0c      	ite	eq
  40603a:	2001      	moveq	r0, #1
  40603c:	2000      	movne	r0, #0
  40603e:	f85d fb08 	ldr.w	pc, [sp], #8
  406042:	bf00      	nop

00406044 <__aeabi_dcmplt>:
  406044:	f84d ed08 	str.w	lr, [sp, #-8]!
  406048:	f7ff ffea 	bl	406020 <__aeabi_cdcmpeq>
  40604c:	bf34      	ite	cc
  40604e:	2001      	movcc	r0, #1
  406050:	2000      	movcs	r0, #0
  406052:	f85d fb08 	ldr.w	pc, [sp], #8
  406056:	bf00      	nop

00406058 <__aeabi_dcmple>:
  406058:	f84d ed08 	str.w	lr, [sp, #-8]!
  40605c:	f7ff ffe0 	bl	406020 <__aeabi_cdcmpeq>
  406060:	bf94      	ite	ls
  406062:	2001      	movls	r0, #1
  406064:	2000      	movhi	r0, #0
  406066:	f85d fb08 	ldr.w	pc, [sp], #8
  40606a:	bf00      	nop

0040606c <__aeabi_dcmpge>:
  40606c:	f84d ed08 	str.w	lr, [sp, #-8]!
  406070:	f7ff ffce 	bl	406010 <__aeabi_cdrcmple>
  406074:	bf94      	ite	ls
  406076:	2001      	movls	r0, #1
  406078:	2000      	movhi	r0, #0
  40607a:	f85d fb08 	ldr.w	pc, [sp], #8
  40607e:	bf00      	nop

00406080 <__aeabi_dcmpgt>:
  406080:	f84d ed08 	str.w	lr, [sp, #-8]!
  406084:	f7ff ffc4 	bl	406010 <__aeabi_cdrcmple>
  406088:	bf34      	ite	cc
  40608a:	2001      	movcc	r0, #1
  40608c:	2000      	movcs	r0, #0
  40608e:	f85d fb08 	ldr.w	pc, [sp], #8
  406092:	bf00      	nop

00406094 <__aeabi_dcmpun>:
  406094:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  406098:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  40609c:	d102      	bne.n	4060a4 <__aeabi_dcmpun+0x10>
  40609e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  4060a2:	d10a      	bne.n	4060ba <__aeabi_dcmpun+0x26>
  4060a4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4060a8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4060ac:	d102      	bne.n	4060b4 <__aeabi_dcmpun+0x20>
  4060ae:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  4060b2:	d102      	bne.n	4060ba <__aeabi_dcmpun+0x26>
  4060b4:	f04f 0000 	mov.w	r0, #0
  4060b8:	4770      	bx	lr
  4060ba:	f04f 0001 	mov.w	r0, #1
  4060be:	4770      	bx	lr

004060c0 <__aeabi_d2iz>:
  4060c0:	ea4f 0241 	mov.w	r2, r1, lsl #1
  4060c4:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  4060c8:	d215      	bcs.n	4060f6 <__aeabi_d2iz+0x36>
  4060ca:	d511      	bpl.n	4060f0 <__aeabi_d2iz+0x30>
  4060cc:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  4060d0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  4060d4:	d912      	bls.n	4060fc <__aeabi_d2iz+0x3c>
  4060d6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  4060da:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  4060de:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  4060e2:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4060e6:	fa23 f002 	lsr.w	r0, r3, r2
  4060ea:	bf18      	it	ne
  4060ec:	4240      	negne	r0, r0
  4060ee:	4770      	bx	lr
  4060f0:	f04f 0000 	mov.w	r0, #0
  4060f4:	4770      	bx	lr
  4060f6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  4060fa:	d105      	bne.n	406108 <__aeabi_d2iz+0x48>
  4060fc:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  406100:	bf08      	it	eq
  406102:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  406106:	4770      	bx	lr
  406108:	f04f 0000 	mov.w	r0, #0
  40610c:	4770      	bx	lr
  40610e:	bf00      	nop

00406110 <__aeabi_uldivmod>:
  406110:	b953      	cbnz	r3, 406128 <__aeabi_uldivmod+0x18>
  406112:	b94a      	cbnz	r2, 406128 <__aeabi_uldivmod+0x18>
  406114:	2900      	cmp	r1, #0
  406116:	bf08      	it	eq
  406118:	2800      	cmpeq	r0, #0
  40611a:	bf1c      	itt	ne
  40611c:	f04f 31ff 	movne.w	r1, #4294967295
  406120:	f04f 30ff 	movne.w	r0, #4294967295
  406124:	f000 b97a 	b.w	40641c <__aeabi_idiv0>
  406128:	f1ad 0c08 	sub.w	ip, sp, #8
  40612c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  406130:	f000 f806 	bl	406140 <__udivmoddi4>
  406134:	f8dd e004 	ldr.w	lr, [sp, #4]
  406138:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  40613c:	b004      	add	sp, #16
  40613e:	4770      	bx	lr

00406140 <__udivmoddi4>:
  406140:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  406144:	468c      	mov	ip, r1
  406146:	460d      	mov	r5, r1
  406148:	4604      	mov	r4, r0
  40614a:	9e08      	ldr	r6, [sp, #32]
  40614c:	2b00      	cmp	r3, #0
  40614e:	d151      	bne.n	4061f4 <__udivmoddi4+0xb4>
  406150:	428a      	cmp	r2, r1
  406152:	4617      	mov	r7, r2
  406154:	d96d      	bls.n	406232 <__udivmoddi4+0xf2>
  406156:	fab2 fe82 	clz	lr, r2
  40615a:	f1be 0f00 	cmp.w	lr, #0
  40615e:	d00b      	beq.n	406178 <__udivmoddi4+0x38>
  406160:	f1ce 0c20 	rsb	ip, lr, #32
  406164:	fa01 f50e 	lsl.w	r5, r1, lr
  406168:	fa20 fc0c 	lsr.w	ip, r0, ip
  40616c:	fa02 f70e 	lsl.w	r7, r2, lr
  406170:	ea4c 0c05 	orr.w	ip, ip, r5
  406174:	fa00 f40e 	lsl.w	r4, r0, lr
  406178:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  40617c:	0c25      	lsrs	r5, r4, #16
  40617e:	fbbc f8fa 	udiv	r8, ip, sl
  406182:	fa1f f987 	uxth.w	r9, r7
  406186:	fb0a cc18 	mls	ip, sl, r8, ip
  40618a:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  40618e:	fb08 f309 	mul.w	r3, r8, r9
  406192:	42ab      	cmp	r3, r5
  406194:	d90a      	bls.n	4061ac <__udivmoddi4+0x6c>
  406196:	19ed      	adds	r5, r5, r7
  406198:	f108 32ff 	add.w	r2, r8, #4294967295
  40619c:	f080 8123 	bcs.w	4063e6 <__udivmoddi4+0x2a6>
  4061a0:	42ab      	cmp	r3, r5
  4061a2:	f240 8120 	bls.w	4063e6 <__udivmoddi4+0x2a6>
  4061a6:	f1a8 0802 	sub.w	r8, r8, #2
  4061aa:	443d      	add	r5, r7
  4061ac:	1aed      	subs	r5, r5, r3
  4061ae:	b2a4      	uxth	r4, r4
  4061b0:	fbb5 f0fa 	udiv	r0, r5, sl
  4061b4:	fb0a 5510 	mls	r5, sl, r0, r5
  4061b8:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  4061bc:	fb00 f909 	mul.w	r9, r0, r9
  4061c0:	45a1      	cmp	r9, r4
  4061c2:	d909      	bls.n	4061d8 <__udivmoddi4+0x98>
  4061c4:	19e4      	adds	r4, r4, r7
  4061c6:	f100 33ff 	add.w	r3, r0, #4294967295
  4061ca:	f080 810a 	bcs.w	4063e2 <__udivmoddi4+0x2a2>
  4061ce:	45a1      	cmp	r9, r4
  4061d0:	f240 8107 	bls.w	4063e2 <__udivmoddi4+0x2a2>
  4061d4:	3802      	subs	r0, #2
  4061d6:	443c      	add	r4, r7
  4061d8:	eba4 0409 	sub.w	r4, r4, r9
  4061dc:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4061e0:	2100      	movs	r1, #0
  4061e2:	2e00      	cmp	r6, #0
  4061e4:	d061      	beq.n	4062aa <__udivmoddi4+0x16a>
  4061e6:	fa24 f40e 	lsr.w	r4, r4, lr
  4061ea:	2300      	movs	r3, #0
  4061ec:	6034      	str	r4, [r6, #0]
  4061ee:	6073      	str	r3, [r6, #4]
  4061f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4061f4:	428b      	cmp	r3, r1
  4061f6:	d907      	bls.n	406208 <__udivmoddi4+0xc8>
  4061f8:	2e00      	cmp	r6, #0
  4061fa:	d054      	beq.n	4062a6 <__udivmoddi4+0x166>
  4061fc:	2100      	movs	r1, #0
  4061fe:	e886 0021 	stmia.w	r6, {r0, r5}
  406202:	4608      	mov	r0, r1
  406204:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406208:	fab3 f183 	clz	r1, r3
  40620c:	2900      	cmp	r1, #0
  40620e:	f040 808e 	bne.w	40632e <__udivmoddi4+0x1ee>
  406212:	42ab      	cmp	r3, r5
  406214:	d302      	bcc.n	40621c <__udivmoddi4+0xdc>
  406216:	4282      	cmp	r2, r0
  406218:	f200 80fa 	bhi.w	406410 <__udivmoddi4+0x2d0>
  40621c:	1a84      	subs	r4, r0, r2
  40621e:	eb65 0503 	sbc.w	r5, r5, r3
  406222:	2001      	movs	r0, #1
  406224:	46ac      	mov	ip, r5
  406226:	2e00      	cmp	r6, #0
  406228:	d03f      	beq.n	4062aa <__udivmoddi4+0x16a>
  40622a:	e886 1010 	stmia.w	r6, {r4, ip}
  40622e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406232:	b912      	cbnz	r2, 40623a <__udivmoddi4+0xfa>
  406234:	2701      	movs	r7, #1
  406236:	fbb7 f7f2 	udiv	r7, r7, r2
  40623a:	fab7 fe87 	clz	lr, r7
  40623e:	f1be 0f00 	cmp.w	lr, #0
  406242:	d134      	bne.n	4062ae <__udivmoddi4+0x16e>
  406244:	1beb      	subs	r3, r5, r7
  406246:	0c3a      	lsrs	r2, r7, #16
  406248:	fa1f fc87 	uxth.w	ip, r7
  40624c:	2101      	movs	r1, #1
  40624e:	fbb3 f8f2 	udiv	r8, r3, r2
  406252:	0c25      	lsrs	r5, r4, #16
  406254:	fb02 3318 	mls	r3, r2, r8, r3
  406258:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  40625c:	fb0c f308 	mul.w	r3, ip, r8
  406260:	42ab      	cmp	r3, r5
  406262:	d907      	bls.n	406274 <__udivmoddi4+0x134>
  406264:	19ed      	adds	r5, r5, r7
  406266:	f108 30ff 	add.w	r0, r8, #4294967295
  40626a:	d202      	bcs.n	406272 <__udivmoddi4+0x132>
  40626c:	42ab      	cmp	r3, r5
  40626e:	f200 80d1 	bhi.w	406414 <__udivmoddi4+0x2d4>
  406272:	4680      	mov	r8, r0
  406274:	1aed      	subs	r5, r5, r3
  406276:	b2a3      	uxth	r3, r4
  406278:	fbb5 f0f2 	udiv	r0, r5, r2
  40627c:	fb02 5510 	mls	r5, r2, r0, r5
  406280:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  406284:	fb0c fc00 	mul.w	ip, ip, r0
  406288:	45a4      	cmp	ip, r4
  40628a:	d907      	bls.n	40629c <__udivmoddi4+0x15c>
  40628c:	19e4      	adds	r4, r4, r7
  40628e:	f100 33ff 	add.w	r3, r0, #4294967295
  406292:	d202      	bcs.n	40629a <__udivmoddi4+0x15a>
  406294:	45a4      	cmp	ip, r4
  406296:	f200 80b8 	bhi.w	40640a <__udivmoddi4+0x2ca>
  40629a:	4618      	mov	r0, r3
  40629c:	eba4 040c 	sub.w	r4, r4, ip
  4062a0:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4062a4:	e79d      	b.n	4061e2 <__udivmoddi4+0xa2>
  4062a6:	4631      	mov	r1, r6
  4062a8:	4630      	mov	r0, r6
  4062aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4062ae:	f1ce 0420 	rsb	r4, lr, #32
  4062b2:	fa05 f30e 	lsl.w	r3, r5, lr
  4062b6:	fa07 f70e 	lsl.w	r7, r7, lr
  4062ba:	fa20 f804 	lsr.w	r8, r0, r4
  4062be:	0c3a      	lsrs	r2, r7, #16
  4062c0:	fa25 f404 	lsr.w	r4, r5, r4
  4062c4:	ea48 0803 	orr.w	r8, r8, r3
  4062c8:	fbb4 f1f2 	udiv	r1, r4, r2
  4062cc:	ea4f 4518 	mov.w	r5, r8, lsr #16
  4062d0:	fb02 4411 	mls	r4, r2, r1, r4
  4062d4:	fa1f fc87 	uxth.w	ip, r7
  4062d8:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  4062dc:	fb01 f30c 	mul.w	r3, r1, ip
  4062e0:	42ab      	cmp	r3, r5
  4062e2:	fa00 f40e 	lsl.w	r4, r0, lr
  4062e6:	d909      	bls.n	4062fc <__udivmoddi4+0x1bc>
  4062e8:	19ed      	adds	r5, r5, r7
  4062ea:	f101 30ff 	add.w	r0, r1, #4294967295
  4062ee:	f080 808a 	bcs.w	406406 <__udivmoddi4+0x2c6>
  4062f2:	42ab      	cmp	r3, r5
  4062f4:	f240 8087 	bls.w	406406 <__udivmoddi4+0x2c6>
  4062f8:	3902      	subs	r1, #2
  4062fa:	443d      	add	r5, r7
  4062fc:	1aeb      	subs	r3, r5, r3
  4062fe:	fa1f f588 	uxth.w	r5, r8
  406302:	fbb3 f0f2 	udiv	r0, r3, r2
  406306:	fb02 3310 	mls	r3, r2, r0, r3
  40630a:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  40630e:	fb00 f30c 	mul.w	r3, r0, ip
  406312:	42ab      	cmp	r3, r5
  406314:	d907      	bls.n	406326 <__udivmoddi4+0x1e6>
  406316:	19ed      	adds	r5, r5, r7
  406318:	f100 38ff 	add.w	r8, r0, #4294967295
  40631c:	d26f      	bcs.n	4063fe <__udivmoddi4+0x2be>
  40631e:	42ab      	cmp	r3, r5
  406320:	d96d      	bls.n	4063fe <__udivmoddi4+0x2be>
  406322:	3802      	subs	r0, #2
  406324:	443d      	add	r5, r7
  406326:	1aeb      	subs	r3, r5, r3
  406328:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  40632c:	e78f      	b.n	40624e <__udivmoddi4+0x10e>
  40632e:	f1c1 0720 	rsb	r7, r1, #32
  406332:	fa22 f807 	lsr.w	r8, r2, r7
  406336:	408b      	lsls	r3, r1
  406338:	fa05 f401 	lsl.w	r4, r5, r1
  40633c:	ea48 0303 	orr.w	r3, r8, r3
  406340:	fa20 fe07 	lsr.w	lr, r0, r7
  406344:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  406348:	40fd      	lsrs	r5, r7
  40634a:	ea4e 0e04 	orr.w	lr, lr, r4
  40634e:	fbb5 f9fc 	udiv	r9, r5, ip
  406352:	ea4f 441e 	mov.w	r4, lr, lsr #16
  406356:	fb0c 5519 	mls	r5, ip, r9, r5
  40635a:	fa1f f883 	uxth.w	r8, r3
  40635e:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  406362:	fb09 f408 	mul.w	r4, r9, r8
  406366:	42ac      	cmp	r4, r5
  406368:	fa02 f201 	lsl.w	r2, r2, r1
  40636c:	fa00 fa01 	lsl.w	sl, r0, r1
  406370:	d908      	bls.n	406384 <__udivmoddi4+0x244>
  406372:	18ed      	adds	r5, r5, r3
  406374:	f109 30ff 	add.w	r0, r9, #4294967295
  406378:	d243      	bcs.n	406402 <__udivmoddi4+0x2c2>
  40637a:	42ac      	cmp	r4, r5
  40637c:	d941      	bls.n	406402 <__udivmoddi4+0x2c2>
  40637e:	f1a9 0902 	sub.w	r9, r9, #2
  406382:	441d      	add	r5, r3
  406384:	1b2d      	subs	r5, r5, r4
  406386:	fa1f fe8e 	uxth.w	lr, lr
  40638a:	fbb5 f0fc 	udiv	r0, r5, ip
  40638e:	fb0c 5510 	mls	r5, ip, r0, r5
  406392:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  406396:	fb00 f808 	mul.w	r8, r0, r8
  40639a:	45a0      	cmp	r8, r4
  40639c:	d907      	bls.n	4063ae <__udivmoddi4+0x26e>
  40639e:	18e4      	adds	r4, r4, r3
  4063a0:	f100 35ff 	add.w	r5, r0, #4294967295
  4063a4:	d229      	bcs.n	4063fa <__udivmoddi4+0x2ba>
  4063a6:	45a0      	cmp	r8, r4
  4063a8:	d927      	bls.n	4063fa <__udivmoddi4+0x2ba>
  4063aa:	3802      	subs	r0, #2
  4063ac:	441c      	add	r4, r3
  4063ae:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  4063b2:	eba4 0408 	sub.w	r4, r4, r8
  4063b6:	fba0 8902 	umull	r8, r9, r0, r2
  4063ba:	454c      	cmp	r4, r9
  4063bc:	46c6      	mov	lr, r8
  4063be:	464d      	mov	r5, r9
  4063c0:	d315      	bcc.n	4063ee <__udivmoddi4+0x2ae>
  4063c2:	d012      	beq.n	4063ea <__udivmoddi4+0x2aa>
  4063c4:	b156      	cbz	r6, 4063dc <__udivmoddi4+0x29c>
  4063c6:	ebba 030e 	subs.w	r3, sl, lr
  4063ca:	eb64 0405 	sbc.w	r4, r4, r5
  4063ce:	fa04 f707 	lsl.w	r7, r4, r7
  4063d2:	40cb      	lsrs	r3, r1
  4063d4:	431f      	orrs	r7, r3
  4063d6:	40cc      	lsrs	r4, r1
  4063d8:	6037      	str	r7, [r6, #0]
  4063da:	6074      	str	r4, [r6, #4]
  4063dc:	2100      	movs	r1, #0
  4063de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4063e2:	4618      	mov	r0, r3
  4063e4:	e6f8      	b.n	4061d8 <__udivmoddi4+0x98>
  4063e6:	4690      	mov	r8, r2
  4063e8:	e6e0      	b.n	4061ac <__udivmoddi4+0x6c>
  4063ea:	45c2      	cmp	sl, r8
  4063ec:	d2ea      	bcs.n	4063c4 <__udivmoddi4+0x284>
  4063ee:	ebb8 0e02 	subs.w	lr, r8, r2
  4063f2:	eb69 0503 	sbc.w	r5, r9, r3
  4063f6:	3801      	subs	r0, #1
  4063f8:	e7e4      	b.n	4063c4 <__udivmoddi4+0x284>
  4063fa:	4628      	mov	r0, r5
  4063fc:	e7d7      	b.n	4063ae <__udivmoddi4+0x26e>
  4063fe:	4640      	mov	r0, r8
  406400:	e791      	b.n	406326 <__udivmoddi4+0x1e6>
  406402:	4681      	mov	r9, r0
  406404:	e7be      	b.n	406384 <__udivmoddi4+0x244>
  406406:	4601      	mov	r1, r0
  406408:	e778      	b.n	4062fc <__udivmoddi4+0x1bc>
  40640a:	3802      	subs	r0, #2
  40640c:	443c      	add	r4, r7
  40640e:	e745      	b.n	40629c <__udivmoddi4+0x15c>
  406410:	4608      	mov	r0, r1
  406412:	e708      	b.n	406226 <__udivmoddi4+0xe6>
  406414:	f1a8 0802 	sub.w	r8, r8, #2
  406418:	443d      	add	r5, r7
  40641a:	e72b      	b.n	406274 <__udivmoddi4+0x134>

0040641c <__aeabi_idiv0>:
  40641c:	4770      	bx	lr
  40641e:	bf00      	nop
  406420:	20202020 	.word	0x20202020
  406424:	20202020 	.word	0x20202020
  406428:	00002020 	.word	0x00002020

0040642c <sysfont_glyphs>:
	...
  40644c:	00300030 00300030 00300030 00300000     0.0.0.0.0.0...0.
  40645c:	00000030 00000000 00000000 006c006c     0...........l.l.
  40646c:	006c006c 00000000 00000000 00000000     l.l.............
	...
  406484:	00280000 007c0028 00280028 0028007c     ..(.(.|.(.(.|.(.
  406494:	00000028 00000000 00000000 003c0010     (.............<.
  4064a4:	00200040 00080010 00780004 00000010     @. .......x.....
	...
  4064bc:	007c0000 00a800a4 00280050 00940054     ..|.....P.(.T...
  4064cc:	00000088 00000000 00000000 00900060     ............`...
  4064dc:	00900090 00940060 00880088 00000070     ....`.......p...
	...
  4064f4:	00100010 00000010 00000000 00000000     ................
	...
  406510:	00100008 00200020 00200020 00200020     .... . . . . . .
  406520:	00080010 00000000 00000000 00100020     ............ ...
  406530:	00080008 00080008 00080008 00200010     .............. .
  406540:	00000000 00280000 007c0010 00280010     ......(...|...(.
	...
  406568:	00100010 00fe0010 00100010 00000010     ................
	...
  406590:	00300010 00000020 00000000 00000000     ..0. ...........
  4065a0:	00000000 007c0000 00000000 00000000     ......|.........
	...
  4065c4:	00300000 00000030 00000000 00000000     ..0.0...........
  4065d4:	00080000 00100008 00200010 00400020     .......... . .@.
  4065e4:	00000040 00000000 00000000 00780000     @.............x.
  4065f4:	008c0084 00a40094 008400c4 00000078     ............x...
	...
  40660c:	00100000 00500030 00100010 00100010     ....0.P.........
  40661c:	0000007c 00000000 00000000 00700000     |.............p.
  40662c:	00080088 00200010 00800040 000000f8     ...... .@.......
	...
  406644:	00700000 00080088 00080030 00880008     ..p.....0.......
  406654:	00000070 00000000 00000000 00080000     p...............
  406664:	00280018 00880048 000800fc 00000008     ..(.H...........
	...
  40667c:	00780000 00800080 000800f0 00080008     ..x.............
  40668c:	000000f0 00000000 00000000 00300000     ..............0.
  40669c:	00800040 008800f0 00880088 00000070     @...........p...
	...
  4066b4:	00f80000 00100008 00200010 00400020     .......... . .@.
  4066c4:	00000040 00000000 00000000 00700000     @.............p.
  4066d4:	00880088 00880070 00880088 00000070     ....p.......p...
	...
  4066ec:	00700000 00880088 00780088 00100008     ..p.......x.....
  4066fc:	00000060 00000000 00000000 00000000     `...............
  40670c:	00300000 00000030 00300000 00000030     ..0.0.....0.0...
	...
  406728:	00300000 00000030 00300000 00600030     ..0.0.....0.0.`.
  406738:	00000040 00000000 00000000 00100008     @...............
  406748:	00400020 00100020 00000008 00000000      .@. ...........
	...
  406764:	0000007c 0000007c 00000000 00000000     |...|...........
	...
  40677c:	00200040 00080010 00200010 00000040     @. ....... .@...
	...
  406794:	00300000 00080048 00200010 00000000     ..0.H..... .....
  4067a4:	00000020 00000000 00000000 00000000      ...............
  4067b4:	0042003c 00aa009a 00be00aa 00780080     <.B...........x.
	...
  4067cc:	00100000 00280028 007c0044 00440044     ....(.(.D.|.D.D.
  4067dc:	00000044 00000000 00000000 00f80000     D...............
  4067ec:	00840084 008400f8 00840084 000000f8     ................
	...
  406804:	003c0000 00800040 00800080 00400080     ..<.@.........@.
  406814:	0000003c 00000000 00000000 00f00000     <...............
  406824:	00840088 00840084 00880084 000000f0     ................
	...
  40683c:	00f80000 00800080 008000f0 00800080     ................
  40684c:	000000f8 00000000 00000000 00f80000     ................
  40685c:	00800080 008000f8 00800080 00000080     ................
	...
  406874:	003c0000 00800040 009c0080 00440084     ..<.@.........D.
  406884:	00000038 00000000 00000000 00880000     8...............
  406894:	00880088 008800f8 00880088 00000088     ................
	...
  4068ac:	00f80000 00200020 00200020 00200020     .... . . . . . .
  4068bc:	000000f8 00000000 00000000 00f80000     ................
  4068cc:	00080008 00080008 00080008 000000f0     ................
	...
  4068e4:	00840000 00900088 00d000a0 00840088     ................
  4068f4:	00000084 00000000 00000000 00800000     ................
  406904:	00800080 00800080 00800080 000000fc     ................
	...
  40691c:	00840000 00cc00cc 00b400b4 00840084     ................
  40692c:	00000084 00000000 00000000 00840000     ................
  40693c:	00c400c4 00a400a4 00940094 0000008c     ................
	...
  406954:	00780000 00840084 00840084 00840084     ..x.............
  406964:	00000078 00000000 00000000 00f80000     x...............
  406974:	00840084 00f80084 00800080 00000080     ................
	...
  40698c:	00780000 00840084 00840084 00840084     ..x.............
  40699c:	00200078 00000018 00000000 00f80000     x. .............
  4069ac:	00840084 00f80084 00840088 00000084     ................
	...
  4069c4:	007c0000 00800080 00180060 00040004     ..|.....`.......
  4069d4:	000000f8 00000000 00000000 00f80000     ................
  4069e4:	00200020 00200020 00200020 00000020      . . . . . . ...
	...
  4069fc:	00840000 00840084 00840084 00840084     ................
  406a0c:	00000078 00000000 00000000 00840000     x...............
  406a1c:	00840084 00480048 00300048 00000030     ....H.H.H.0.0...
	...
  406a34:	00880000 00a800a8 00a800a8 005000a8     ..............P.
  406a44:	00000050 00000000 00000000 00880000     P...............
  406a54:	00500088 00200020 00880050 00000088     ..P. . .P.......
	...
  406a6c:	00880000 00880088 00500050 00200020     ........P.P. . .
  406a7c:	00000020 00000000 00000000 00fc0000      ...............
  406a8c:	00080004 00200010 00800040 000000fc     ...... .@.......
	...
  406aa4:	00400070 00400040 00400040 00400040     p.@.@.@.@.@.@.@.
  406ab4:	00400040 00000070 00000000 00400040     @.@.p.......@.@.
  406ac4:	00200020 00100020 00100010 00080008      . . ...........
	...
  406adc:	00080038 00080008 00080008 00080008     8...............
  406aec:	00080008 00000038 00000000 00280010     ....8.........(.
  406afc:	00000044 00000000 00000000 00000000     D...............
	...
  406b24:	00000038 00000000 00000000 00200000     8............. .
  406b34:	00000010 00000000 00000000 00000000     ................
	...
  406b50:	00700000 00080008 00880078 0000007c     ..p.....x...|...
	...
  406b68:	00800080 00f80080 00840084 00840084     ................
  406b78:	000000f8 00000000 00000000 00000000     ................
  406b88:	00780000 00800080 00800080 00000078     ..x.........x...
	...
  406ba0:	00040004 007c0004 00840084 008c0084     ......|.........
  406bb0:	00000074 00000000 00000000 00000000     t...............
  406bc0:	00780000 00fc0084 00800080 0000007c     ..x.........|...
	...
  406bd8:	0020001c 00fc0020 00200020 00200020     .. . ... . . . .
  406be8:	000000fc 00000000 00000000 00000000     ................
  406bf8:	007c0000 00840084 00840084 0004007c     ..|.........|...
  406c08:	00000078 00000000 00800080 00b80080     x...............
  406c18:	008400c4 00840084 00000084 00000000     ................
  406c28:	00000000 00100000 00700000 00100010     ..........p.....
  406c38:	00100010 0000007c 00000000 00000000     ....|...........
  406c48:	00080000 00780000 00080008 00080008     ......x.........
  406c58:	00080008 00700008 00000000 00800080     ......p.........
  406c68:	00880080 00a00090 008800d0 00000088     ................
	...
  406c80:	002000e0 00200020 00200020 00200020     .. . . . . . . .
  406c90:	000000f8 00000000 00000000 00000000     ................
  406ca0:	00a40000 00a400fc 00a400a4 000000a4     ................
	...
  406cbc:	00b80000 008400c4 00840084 00000084     ................
	...
  406cd8:	00780000 00840084 00840084 00000078     ..x.........x...
	...
  406cf4:	00b80000 008400c4 00840084 008000f8     ................
  406d04:	00000080 00000000 00000000 007c0000     ..............|.
  406d14:	00840084 00840084 0004007c 00000004     ........|.......
	...
  406d2c:	00d80000 00400060 00400040 000000f0     ....`.@.@.@.....
	...
  406d48:	00780000 00400080 00080030 000000f0     ..x...@.0.......
	...
  406d64:	00fc0020 00200020 00200020 0000001c      ... . . . .....
	...
  406d80:	00880000 00880088 00880088 0000007c     ............|...
	...
  406d9c:	00840000 00840084 00480048 00000030     ........H.H.0...
	...
  406db8:	00880000 00a800a8 00a800a8 00000050     ............P...
	...
  406dd4:	00880000 00200050 00500020 00000088     ....P. . .P.....
	...
  406df0:	00840000 00480084 00300048 00200010     ......H.H.0... .
  406e00:	00000040 00000000 00000000 00f80000     @...............
  406e10:	00100008 00400020 000000f8 00000000     .... .@.........
  406e20:	00000000 00200010 00100020 00200020     ...... . ... . .
  406e30:	00200010 00100020 00000000 00000000     .. . ...........
  406e40:	00100010 00100010 00000000 00100010     ................
  406e50:	00100010 00000000 00000000 00100020     ............ ...
  406e60:	00200010 00100010 00100020 00200010     .. ..... ..... .
  406e70:	00000000 63206425 2020206d 00000000     ....%d cm   ....
  406e80:	312e3025 6d632066 00000000 4e414353     %0.1f cm....SCAN
  406e90:	52524520 0000524f                        ERROR..

00406e98 <_global_impure_ptr>:
  406e98:	20400028 00464e49 00666e69 004e414e     (.@ INF.inf.NAN.
  406ea8:	006e616e 33323130 37363534 42413938     nan.0123456789AB
  406eb8:	46454443 00000000 33323130 37363534     CDEF....01234567
  406ec8:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
  406ed8:	0000296c 00000030                       l)..0...

00406ee0 <blanks.7223>:
  406ee0:	20202020 20202020 20202020 20202020                     

00406ef0 <zeroes.7224>:
  406ef0:	30303030 30303030 30303030 30303030     0000000000000000
  406f00:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.

00406f10 <__mprec_bigtens>:
  406f10:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
  406f20:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
  406f30:	7f73bf3c 75154fdd                       <.s..O.u

00406f38 <__mprec_tens>:
  406f38:	00000000 3ff00000 00000000 40240000     .......?......$@
  406f48:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
  406f58:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
  406f68:	00000000 412e8480 00000000 416312d0     .......A......cA
  406f78:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
  406f88:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
  406f98:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
  406fa8:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
  406fb8:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
  406fc8:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
  406fd8:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
  406fe8:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
  406ff8:	79d99db4 44ea7843                       ...yCx.D

00407000 <p05.6055>:
  407000:	00000005 00000019 0000007d 00000043     ........}...C...
  407010:	49534f50 00000058 0000002e              POSIX.......

0040701c <_ctype_>:
  40701c:	20202000 20202020 28282020 20282828     .         ((((( 
  40702c:	20202020 20202020 20202020 20202020                     
  40703c:	10108820 10101010 10101010 10101010      ...............
  40704c:	04040410 04040404 10040404 10101010     ................
  40705c:	41411010 41414141 01010101 01010101     ..AAAAAA........
  40706c:	01010101 01010101 01010101 10101010     ................
  40707c:	42421010 42424242 02020202 02020202     ..BBBBBB........
  40708c:	02020202 02020202 02020202 10101010     ................
  40709c:	00000020 00000000 00000000 00000000      ...............
	...

00407120 <_init>:
  407120:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  407122:	bf00      	nop
  407124:	bcf8      	pop	{r3, r4, r5, r6, r7}
  407126:	bc08      	pop	{r3}
  407128:	469e      	mov	lr, r3
  40712a:	4770      	bx	lr

0040712c <__init_array_start>:
  40712c:	00403849 	.word	0x00403849

00407130 <__frame_dummy_init_array_entry>:
  407130:	00400165                                e.@.

00407134 <_fini>:
  407134:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  407136:	bf00      	nop
  407138:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40713a:	bc08      	pop	{r3}
  40713c:	469e      	mov	lr, r3
  40713e:	4770      	bx	lr

00407140 <__fini_array_start>:
  407140:	00400141 	.word	0x00400141

Disassembly of section .relocate:

20400000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20400000:	f3bf 8f5f 	dmb	sy
20400004:	3801      	subs	r0, #1
20400006:	d1fb      	bne.n	20400000 <portable_delay_cycles>
20400008:	4770      	bx	lr
	...

2040000c <sysfont>:
2040000c:	0000 0000 642c 0040 0e0a 7d20               ....,d@... }

20400018 <g_interrupt_enabled>:
20400018:	0001 0000                                   ....

2040001c <SystemCoreClock>:
2040001c:	0900 003d                                   ..=.

20400020 <_impure_ptr>:
20400020:	0028 2040 0000 0000                         (.@ ....

20400028 <impure_data>:
20400028:	0000 0000 0314 2040 037c 2040 03e4 2040     ......@ |.@ ..@ 
	...
204000d0:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
204000e0:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20400450 <__atexit_recursive_mutex>:
20400450:	0cb4 2040                                   ..@ 

20400454 <__malloc_av_>:
	...
2040045c:	0454 2040 0454 2040 045c 2040 045c 2040     T.@ T.@ \.@ \.@ 
2040046c:	0464 2040 0464 2040 046c 2040 046c 2040     d.@ d.@ l.@ l.@ 
2040047c:	0474 2040 0474 2040 047c 2040 047c 2040     t.@ t.@ |.@ |.@ 
2040048c:	0484 2040 0484 2040 048c 2040 048c 2040     ..@ ..@ ..@ ..@ 
2040049c:	0494 2040 0494 2040 049c 2040 049c 2040     ..@ ..@ ..@ ..@ 
204004ac:	04a4 2040 04a4 2040 04ac 2040 04ac 2040     ..@ ..@ ..@ ..@ 
204004bc:	04b4 2040 04b4 2040 04bc 2040 04bc 2040     ..@ ..@ ..@ ..@ 
204004cc:	04c4 2040 04c4 2040 04cc 2040 04cc 2040     ..@ ..@ ..@ ..@ 
204004dc:	04d4 2040 04d4 2040 04dc 2040 04dc 2040     ..@ ..@ ..@ ..@ 
204004ec:	04e4 2040 04e4 2040 04ec 2040 04ec 2040     ..@ ..@ ..@ ..@ 
204004fc:	04f4 2040 04f4 2040 04fc 2040 04fc 2040     ..@ ..@ ..@ ..@ 
2040050c:	0504 2040 0504 2040 050c 2040 050c 2040     ..@ ..@ ..@ ..@ 
2040051c:	0514 2040 0514 2040 051c 2040 051c 2040     ..@ ..@ ..@ ..@ 
2040052c:	0524 2040 0524 2040 052c 2040 052c 2040     $.@ $.@ ,.@ ,.@ 
2040053c:	0534 2040 0534 2040 053c 2040 053c 2040     4.@ 4.@ <.@ <.@ 
2040054c:	0544 2040 0544 2040 054c 2040 054c 2040     D.@ D.@ L.@ L.@ 
2040055c:	0554 2040 0554 2040 055c 2040 055c 2040     T.@ T.@ \.@ \.@ 
2040056c:	0564 2040 0564 2040 056c 2040 056c 2040     d.@ d.@ l.@ l.@ 
2040057c:	0574 2040 0574 2040 057c 2040 057c 2040     t.@ t.@ |.@ |.@ 
2040058c:	0584 2040 0584 2040 058c 2040 058c 2040     ..@ ..@ ..@ ..@ 
2040059c:	0594 2040 0594 2040 059c 2040 059c 2040     ..@ ..@ ..@ ..@ 
204005ac:	05a4 2040 05a4 2040 05ac 2040 05ac 2040     ..@ ..@ ..@ ..@ 
204005bc:	05b4 2040 05b4 2040 05bc 2040 05bc 2040     ..@ ..@ ..@ ..@ 
204005cc:	05c4 2040 05c4 2040 05cc 2040 05cc 2040     ..@ ..@ ..@ ..@ 
204005dc:	05d4 2040 05d4 2040 05dc 2040 05dc 2040     ..@ ..@ ..@ ..@ 
204005ec:	05e4 2040 05e4 2040 05ec 2040 05ec 2040     ..@ ..@ ..@ ..@ 
204005fc:	05f4 2040 05f4 2040 05fc 2040 05fc 2040     ..@ ..@ ..@ ..@ 
2040060c:	0604 2040 0604 2040 060c 2040 060c 2040     ..@ ..@ ..@ ..@ 
2040061c:	0614 2040 0614 2040 061c 2040 061c 2040     ..@ ..@ ..@ ..@ 
2040062c:	0624 2040 0624 2040 062c 2040 062c 2040     $.@ $.@ ,.@ ,.@ 
2040063c:	0634 2040 0634 2040 063c 2040 063c 2040     4.@ 4.@ <.@ <.@ 
2040064c:	0644 2040 0644 2040 064c 2040 064c 2040     D.@ D.@ L.@ L.@ 
2040065c:	0654 2040 0654 2040 065c 2040 065c 2040     T.@ T.@ \.@ \.@ 
2040066c:	0664 2040 0664 2040 066c 2040 066c 2040     d.@ d.@ l.@ l.@ 
2040067c:	0674 2040 0674 2040 067c 2040 067c 2040     t.@ t.@ |.@ |.@ 
2040068c:	0684 2040 0684 2040 068c 2040 068c 2040     ..@ ..@ ..@ ..@ 
2040069c:	0694 2040 0694 2040 069c 2040 069c 2040     ..@ ..@ ..@ ..@ 
204006ac:	06a4 2040 06a4 2040 06ac 2040 06ac 2040     ..@ ..@ ..@ ..@ 
204006bc:	06b4 2040 06b4 2040 06bc 2040 06bc 2040     ..@ ..@ ..@ ..@ 
204006cc:	06c4 2040 06c4 2040 06cc 2040 06cc 2040     ..@ ..@ ..@ ..@ 
204006dc:	06d4 2040 06d4 2040 06dc 2040 06dc 2040     ..@ ..@ ..@ ..@ 
204006ec:	06e4 2040 06e4 2040 06ec 2040 06ec 2040     ..@ ..@ ..@ ..@ 
204006fc:	06f4 2040 06f4 2040 06fc 2040 06fc 2040     ..@ ..@ ..@ ..@ 
2040070c:	0704 2040 0704 2040 070c 2040 070c 2040     ..@ ..@ ..@ ..@ 
2040071c:	0714 2040 0714 2040 071c 2040 071c 2040     ..@ ..@ ..@ ..@ 
2040072c:	0724 2040 0724 2040 072c 2040 072c 2040     $.@ $.@ ,.@ ,.@ 
2040073c:	0734 2040 0734 2040 073c 2040 073c 2040     4.@ 4.@ <.@ <.@ 
2040074c:	0744 2040 0744 2040 074c 2040 074c 2040     D.@ D.@ L.@ L.@ 
2040075c:	0754 2040 0754 2040 075c 2040 075c 2040     T.@ T.@ \.@ \.@ 
2040076c:	0764 2040 0764 2040 076c 2040 076c 2040     d.@ d.@ l.@ l.@ 
2040077c:	0774 2040 0774 2040 077c 2040 077c 2040     t.@ t.@ |.@ |.@ 
2040078c:	0784 2040 0784 2040 078c 2040 078c 2040     ..@ ..@ ..@ ..@ 
2040079c:	0794 2040 0794 2040 079c 2040 079c 2040     ..@ ..@ ..@ ..@ 
204007ac:	07a4 2040 07a4 2040 07ac 2040 07ac 2040     ..@ ..@ ..@ ..@ 
204007bc:	07b4 2040 07b4 2040 07bc 2040 07bc 2040     ..@ ..@ ..@ ..@ 
204007cc:	07c4 2040 07c4 2040 07cc 2040 07cc 2040     ..@ ..@ ..@ ..@ 
204007dc:	07d4 2040 07d4 2040 07dc 2040 07dc 2040     ..@ ..@ ..@ ..@ 
204007ec:	07e4 2040 07e4 2040 07ec 2040 07ec 2040     ..@ ..@ ..@ ..@ 
204007fc:	07f4 2040 07f4 2040 07fc 2040 07fc 2040     ..@ ..@ ..@ ..@ 
2040080c:	0804 2040 0804 2040 080c 2040 080c 2040     ..@ ..@ ..@ ..@ 
2040081c:	0814 2040 0814 2040 081c 2040 081c 2040     ..@ ..@ ..@ ..@ 
2040082c:	0824 2040 0824 2040 082c 2040 082c 2040     $.@ $.@ ,.@ ,.@ 
2040083c:	0834 2040 0834 2040 083c 2040 083c 2040     4.@ 4.@ <.@ <.@ 
2040084c:	0844 2040 0844 2040 084c 2040 084c 2040     D.@ D.@ L.@ L.@ 

2040085c <__malloc_sbrk_base>:
2040085c:	ffff ffff                                   ....

20400860 <__malloc_trim_threshold>:
20400860:	0000 0002                                   ....

20400864 <__global_locale>:
20400864:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400884:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008a4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008c4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008e4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400904:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400924:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400944:	5f69 0040 5b29 0040 0000 0000 701c 0040     i_@.)[@......p@.
20400954:	7018 0040 6e7c 0040 6e7c 0040 6e7c 0040     .p@.|n@.|n@.|n@.
20400964:	6e7c 0040 6e7c 0040 6e7c 0040 6e7c 0040     |n@.|n@.|n@.|n@.
20400974:	6e7c 0040 6e7c 0040 ffff ffff ffff ffff     |n@.|n@.........
20400984:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
204009ac:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
